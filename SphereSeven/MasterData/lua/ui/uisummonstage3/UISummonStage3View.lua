---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UISummonStage3View = BaseClass("UISummonStage3View",UIBaseView);
local base = UIBaseView
local this = UISummonStage3View
local IsPlayer = false

local function SetPaint(zCard,image)
    local offset = Z_CardOriginalOffset[zCard.Id].SummonCardOffset

    image.sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/CardPaint/"..zCard.Id.."_1.png")
    image:SetNativeSize()
    local rectTransform = image:GetComponent("RectTransform")
    rectTransform:DOLocalMove(Vector2.New(offset[1],offset[2]),0)
    rectTransform:DOScale(Vector3.New(2, 2, 2), 0)
end

-- 获取字符串长度，包括中英文
function this.SplitsString(self, str)
    local lenInByte = #str
    local arr = {}
    local index = 0
    for i = 1, lenInByte do
        local curByte = string.byte(str, i)
        local byteCount = 1
        if curByte > 0 and curByte <= 127 then
            byteCount = 1
            index = index + 1
            arr[index] = string.sub(str, i, i + byteCount - 1)
        elseif curByte >= 192 and curByte <= 223 then
            byteCount = 2
            index = index + 1
            arr[index] = string.sub(str, i, i + byteCount - 1)
        elseif curByte >= 224 and curByte <= 239 then -- utf-8 汉字 3个字节
            byteCount = 3
            index = index + 1
            arr[index] = string.sub(str, i, i + byteCount - 1)
        elseif curByte >= 240 and curByte <= 247 then
            byteCount = 4
            index = index + 1
            arr[index] = string.sub(str, i, i + byteCount - 1)
        end
    end
    return arr
end

--local delay = 0.12
--local time = 0
--function this.Update(self)
--    if Time.time - time >= delay then
--        time = Time.time
--        if self.txtIndex < 0 or self.txtIndex >= table.count(self.txtArray) then
--            return
--        end
--        self.txtIndex = self.txtIndex + 1
--        self.talkTxt.text = self.talkTxt.text..self.txtArray[self.txtIndex]
--        self.rect.verticalScrollbar.value = 0
--        -- 测试用
--        --if self.txtIndex == table.count(self.txtArray) then
--        --    coroutine.start(function () 
--        --        coroutine.waitforseconds(1)
--        --        UIManager:GetInstance():CloseWindow(UIWindowNames.UISummonStage3)
--        --    end)
--        --end
--    end
--end
--
--local function OnClickDialog(self)
--    if self.txtIndex < 0 or self.txtIndex >= table.count(self.txtArray) then
--        return
--    end
--    local index = self.txtIndex
--    for i = index, table.count(self.txtArray) - 1 do
--        self.txtIndex = self.txtIndex + 1
--        self.talkTxt.text = self.talkTxt.text..self.txtArray[self.txtIndex]
--    end
--    self.rect.verticalScrollbar.value = 0
--end

local function OnPanel(self)
    if IsPlayer  then return end
    self.index = self.index + 1
    if self.infos[self.index] == nil then
        self.soundComponent:Stop()
        UIManager:GetInstance():CloseWindow(UIWindowNames.UISummonStage3)
      --  UIManager:GetInstance():CloseWindow(UIWindowNames.UISummonStage1)
        --新手引导
        local guide=Game.Scene:GetComponent("GuideComponent")
        local GuideComplete,GuideStep, GuideRun =guide:GetCurrentData()
        if GuideRun and GuideComplete == 1 and (GuideStep==8 or GuideStep==14)then
            local uiGuide = UIManager:GetInstance():GetWindow(UIWindowNames.UINoviceGuide)
            uiGuide.View.mask_bc.transform.parent.gameObject:SetActive(true)
            guide:AutoGuide()
        end
        --local GuideStep1 = table.first(guide.GuideList,function (v) return v.Id==1  end)
        --if GuideStep1 ~= nil then
        --    if GuideStep1.Step == 7 then
        --        UIManager:GetInstance():GetWindow(UIWindowNames.UIPlayerInceptionInfo).View:ON_Click()
        --    end
        --end
        return 
    end
    IsPlayer = true
    local soundPath = "Sound/UI/Summon_2.wav"
    local soundAsset = ResourcesManager:GetInstance():CoLoadAsync(soundPath, typeof(AudioClip))
    self.audio.clip = soundAsset
    self.audio.volume = ClientData:GetInstance():GetVolume("SoundVolume")
    
    local cardId = self.infos[self.index]
    local zCard = Z_Card[cardId]
    self.audio:Play()
    coroutine.start(function()
        local root =  self.talkBg
        self.paint.gameObject:SetActive(false)
        local posy = root.transform.localPosition.y
        root.transform:DOLocalMoveY(-9999, 0)
        
        self.nameTxt.text = zCard.Name
        self.talkTxt.text = zCard.SummonTxt
        --self.txtArray = self:SplitsString(zCard.SummonTxt)
        UIUtil.ScrollText(self.nameTxt.transform)
        SetPaint(zCard,self.paint)
        self.paint:DOColor(Color.New(0, 0, 0, 0), 0)
        
        root:SetActive(false)
        coroutine.waitforseconds(1)
        self.paint.gameObject:SetActive(true)
        --root.transform:DOLocalMoveY(posy, 0)
        local effectId = 0
        if zCard.Rare == 1 or zCard.Rare == 2 then
            effectId = 1
        elseif zCard.Rare == 3 then
            effectId = 2
        elseif zCard.Rare == 4 then
            effectId = 3
        end
        root.transform:DOLocalMoveY(posy, 0)
        self.EffectList[effectId]:SetActive(true)
        self.paint:DOColor(Color.New(0, 0, 0, 1), 0.8)
        self.paint.transform:DOScale(Vector3.New(1.2, 1.2, 1.2), 0.8)
        coroutine.waitforseconds(0.8)
        self.paint.transform:DOScale(Vector3.New(1.5, 1.5, 1), 0.2)
        self.paint:DOColor(Color.New(1, 1, 1, 1), 0)
        self.root.gameObject:SetActive(true)
        coroutine.waitforframes(1)
        root:SetActive(true)
        self.txtIndex = 0
        LayoutRebuilder.ForceRebuildLayoutImmediate(self.talkTxt.transform:GetComponent("RectTransform"))
        LayoutRebuilder.ForceRebuildLayoutImmediate(root.transform:GetComponent("RectTransform"))
        coroutine.waitforseconds(0.6)
        --coroutine.waitforseconds(0.8)
        self.soundComponent:PlaySummonSound(Game.Registry:NewObject("Card",
        {
            id = cardId,
            level = 1,
            exp = 0,
            intimacy = 0,
            bead = 0,
            constellation = 0,
            star = 1,
            skin = nil,
            skills = {},
            id = cardId,
        }))
        IsPlayer = false
        coroutine.waitforseconds(0.5)
    end)
end

function this.OnCreate(self)
    base.OnCreate(self)
    self.talkBg = self.rc:GetObject("TalkBg")
    self.audio = self.gameObject:GetComponent(typeof(AudioSource))
    self.EffectList={}
    local eventBg = self.rc:GetObject("EventBg")
    local effectRoot = self.rc:GetObject("Effect")
    self.paint =  self.rc:GetObject("Paint"):GetComponent("Image")
    self.root =  self.rc:GetObject("Root")

    for i = 0, effectRoot.transform.childCount -1 do
        local effect = effectRoot.transform:GetChild(i).gameObject
        effect:SetActive(false)
        self.EffectList[i+1] = effect
    end
    EventTriggerListener.Get(eventBg).onLuaClick = function() OnPanel(self) end
    --EventTriggerListener.Get(self.talkBg).onLuaClick = function() OnClickDialog(self) end
end

function this.OnLangCreate(self)
    self.talkTxt = LangUtil.BindText(self.rc:GetObject("TalkTxt"))
    self.nameTxt = LangUtil.BindText(self.rc:GetObject("NameTxt"))
    --self.rect = self.talkTxt.transform.parent.parent.parent:GetComponent("ScrollRect")

    self.nameTxt.text = ""
    self.talkTxt.text = ""
end

function this.OnEnable(self)
    base.OnEnable(self)
    self.root.gameObject:SetActive(false)
    self.audio:Stop()
    self.audio.volume = ClientData:GetInstance():GetVolume("SoundVolume")
    self.soundComponent = Game.Scene:GetComponent("SoundComponent")
    self.infos = self.model.cardIdList
    self.index = 0
    self.txtIndex = -1
    self:OnRefresh()
end



function this.OnRefresh(self)
    for i, v in pairs( self.EffectList) do
        v:SetActive(false)
    end
    IsPlayer = false
    OnPanel(self)
end

function this.OnAddListener(self)
    base.OnAddListener(self)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
end

function this.OnDisable(self)
    IsPlayer = false
    self.soundComponent:Stop()
    self.audio:Stop()
    self.paint.sprite = DeActiveSprite
    self.root.gameObject:SetActive(false)
    if self.model.callBack ~= nil then
        self.model.callBack()
    end
    base.OnDisable(self);
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this;

