---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UILoadView = BaseClass("UILoadView",UIBaseView);
local base = UIBaseView
local this = UILoadView

function this:Update()
    if self.time.time ~= nil then
        if self.catCount > 0 or self.maskCount > 0 then
            if Game.Scene ~= nil and Game.Scene.Session ~= nil and Game.Scene.Session.catMap ~= nil then
                if Time.unscaledTime - self.time.time > 120 and not self.time.sendLog then
                    local msg = "[UILoadView]"
                    for key, count in pairs(Game.Scene.Session.catMap) do
                        if count ~= 0 then
                            msg = msg .. "\n key:" .. key .. " count:" .. count
                        end
                    end
                    Logger.LogError(msg)
                    GameMain.SaveLog(msg)
                    self.time.sendLog = true
                end
                --if Time.unscaledTime - self.time.time > 180 and not self.time.exit then
                --    self.time.exit = true
                --    self:ClearLoad()
                --    Game.Scene.Session.activeQueue:clear()
                --    Game.Scene.Session.deactiveQueue:clear()
                --    UIUtil.ToolTipFirst({
                --        title = LangUtil.GetSysLang(9),
                --        message = LangUtil.GetSysLang(1476),
                --        hideCloseBtn = true,
                --        callBack = function()
                --            Game.Scene.Session:ExitGame(0)
                --            Game.Scene.Session.catMap = {}
                --        end,
                --        closeCallBack = function()
                --            Game.Scene.Session:ExitGame(0)
                --            Game.Scene.Session.catMap = {}
                --        end,
                --        hideCloseBtn = true,
                --        hideBackBtn = true,
                --    })
                --
                --end
            end
        end
        
    end
end

function this.ActiveLoading(self, data)
    if data.loadMode == LoadMode.Cat then
        self.catCount = self.catCount + 1
        self.messageTxt.text = data.message or ""
    elseif data.loadMode == LoadMode.Mask then
        self.maskCount = self.maskCount + 1
    end
    if self.catCount > 0 or self.maskCount > 0 then
        if self.time.time == nil then
            self.time.time = Time.unscaledTime
        end
    else
        self.time = {}
    end
    if self.catCount > 0 then
        self.mask.gameObject:SetActive(true)
        self.loadCat:SetActive(true)
        table.csenu(self.loadCat:GetComponentsInChildren(typeof(SkinnedMeshRenderer)),function (smr)
            smr.sortingOrder = self.canvas.unity_canvas.sortingOrder + 1
            smr.sortingLayerName = SortingLayerNames.UI
        end)
        self.messageTxt.gameObject:SetActive(true)
        self.mask:DOFade(128 / 255, 0)
        return
    end
    self.mask.gameObject:SetActive(self.maskCount > 0)
    self.loadCat:SetActive(false)
    self.messageTxt.gameObject:SetActive(false)
    self.mask:DOFade(0, 0)
end

function this.DeActiveLoading(self, data)
    if data.loadMode == LoadMode.Cat then
        self.catCount = self.catCount - 1
    elseif data.loadMode == LoadMode.Mask then
        self.maskCount = self.maskCount - 1
    end
    if self.catCount > 0 or self.maskCount > 0 then
        if self.time.time == nil then
            self.time.time = Time.unscaledTime
        end
    else
        self.time = {}
    end
    if self.catCount > 0 then
        self.mask.gameObject:SetActive(true)
        self.loadCat:SetActive(true)
        table.csenu(self.loadCat:GetComponentsInChildren(typeof(SkinnedMeshRenderer)),function (smr)
            smr.sortingOrder = self.canvas.unity_canvas.sortingOrder + 1
            smr.sortingLayerName = SortingLayerNames.UI
        end)
        self.messageTxt.gameObject:SetActive(true)
        self.mask:DOFade(128 / 255, 0)
        return
    end
    self.mask.gameObject:SetActive(self.maskCount > 0)
    self.loadCat:SetActive(false)
    self.messageTxt.gameObject:SetActive(false)
    self.mask:DOFade(0, 0)
end

function this.ClearLoad(self)
    self.catCount = 0
    self.maskCount = 0
    self.mask.gameObject:SetActive(false)
    self.loadCat:SetActive(false)
    self.messageTxt.gameObject:SetActive(false)
    self.mask:DOFade(0, 0)
end

function this.OnCreate(self)
    base.OnCreate(self);
    --self.load = self.gameObject.transform:Find("Load");
    --self.tween = self.load:DOLocalRotate(Vector3.New(0,0,30),0.1);
    self.messageTxt = self.rc:GetObject("Message"):GetComponent("Text")
    self.loadCat = self.rc:GetObject("JiaZaiMao_Idle")
    
    self.catCount = 0
    self.maskCount = 0
    self.time = {}
end

function this.OnLangCreate(self)
    LangUtil.BindText(self.messageTxt.transform)
end

function this.OnEnable(self)
    base.OnEnable(self);
    self.mask = self.gameObject:GetComponent("Image")
    self:ActiveLoading(self.model.data)
end

return this;

