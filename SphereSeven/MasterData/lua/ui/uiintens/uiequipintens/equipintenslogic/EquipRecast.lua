---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/18 11:30
---

local EquipRecast = {};
local this = EquipRecast;

local pfbName = "EquipItemNew"
local recordOrder = {order = 1,kind = 1}  --是否正序  顺序类型
local screenTypes = {star = 0,Part = 0,exclusive = 0,isEquip = 0}
local portNames = {"Hand1Equip","Hand2Equip","BodyEquip","HeadEquip","FootEquip","AdornEquip",}

local function PlayEffect(self)
    self.rc_audio:Play()
    for k,v in pairs(self.effectList) do
        UIPublic.PlayEffect(v)
    end
end


local function GetIdList(self)
    local tb = {}
    for k,v in table.pairsByKeys(self.rc_Ids) do
        if v ~=0 then
            table.insert(tb,v)
        end
    end
    return tb
end

local function GetRandomZEquip(kind,star)
    
    local z_equip_table = table.choose(Z_Equip,function(k,v) return v.Exclusive == 0 and v.Series == kind  and v.Star == star and v.IsMed ==1 end);
    if table.count(z_equip_table)<=0 then
        return 0
    end
    local temp_tab = {};
    for k,v in pairs(z_equip_table) do
        table.insert(temp_tab,v);
    end
    local num = CSUtil.GetRandomNumberOfInt(1,#temp_tab + 1);
    print("--随机出的装备:"..temp_tab[num].Name);
    return temp_tab[num];
end



local function GetTotalStar(self)
    local star = 0;
    for k,v in pairs(GetIdList(self)) do
        star = star + self.equips[v].Star
    end
    return star
end


local function OnClickUseBlackSwordButton(self,item,equip) --使用黑桃圣剑
    --local equipList = self.recast_data.equip_list
    --if table.count(equipList) ~= 1 then
    --    UIUtil.ToolTipFourth(LangUtil.GetSysLang(2026))
    --    return
    --end
    --
    --local equip = table.first(equipList)
    --if Z_Equip[equip.TemplateId].Exclusive == 0 then
    --    UIUtil.ToolTipFourth(LangUtil.GetSysLang(2026))
    --    return
    --end
    --
    --if equip.Star >= 5 then UIUtil.ToolTipFourth(LangUtil.GetSysLang(2027)) return end
    --if item == nil then UIUtil.ToolTipFourth(LangUtil.GetSysLang(2028)) return end
    --if item.Amount == 0 then UIUtil.ToolTipFourth(LangUtil.GetSysLang(2028)) return end
    local func = function(id) self.rc_equipId = id end
    local reqData={}
    reqData.RecastEquipList={}
    reqData.ExpendGoldCoin= 0
    reqData.MainRecastEquipId= equip.Id
    reqData.Star= equip.Star + 1
    reqData.ExpendMaterialList={{MaterialId = item,Amount = 1,Type = 0}}
    table.removebyvalue(self.rc_Ids,equip.Id);
    self.model.Item_Id = nil
    coroutine.start(function()
        PlayEffect(self)
        coroutine.waitforseconds(1.5)
        self.recast_panel.transform:DOShakePosition(0.6,40,80,90);
        coroutine.waitforseconds(0.5)
        self.ctrl:SendExRecastRequest(reqData,func);
    end) 
    

end

local function InitUseBlackSword(self) --初始化黑桃圣剑
    local transform = self.recast_use_black_sword.transform
    local button = transform:Find("Button").gameObject
    local holdTxt = transform:Find("HoldNum"):GetComponent("Text")
    local items = Game.Scene.Player:GetComponent("ItemComponent").Items
    local item = table.first(items,function(v) return v.TemplateId == 3017  end)
    local holdNum = (item == nil and {0} or {item.Amount})[1]
    holdTxt.text = LangUtil.GetSysLang(2029)..":"..holdNum
    UIUtil.AddBtnEvent(button,function(go) OnClickUseBlackSwordButton(self,item) end)
end

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------


local function GetCurEquipType(self)  --获取当前类型
    if  table.count(GetIdList(self)) == 0 then
        return 0
    end
    local id = table.first(GetIdList(self))
    local equip = self.equips[id]
    local zEquip = Z_Equip[equip.TemplateId]
    if zEquip.Exclusive ~= 0 then
        return 2
    else
        return 1
    end
end

local function GetZEquipReCast(self) --获取重铸配置
    local GoldCoinNum = 0
    local id = table.first(GetIdList(self))
    if id == nil then return GoldCoinNum end
    local equip = self.equips[id]
    if id ~= 3017 then
        if  Z_Equip[equip.TemplateId].Exclusive ~=0 then
            GoldCoinNum = GoldCoinNum + ((table.count(GetIdList(self))-1) * Z_EquipRecast[6].ExpendGoldCoin)
            return GoldCoinNum
        else
            local zEquip = Z_Equip[equip.TemplateId]
            local star =(zEquip.Star == 0 and {equip.Star} or {zEquip.Star})[1]
            star =  (star + 1 > 5  and {5} or {star + 1})[1]
            return Z_EquipRecast[star].ExpendGoldCoin
        end
    else
        GoldCoinNum = 0
    end
    
    return GoldCoinNum
end


local function RemoveEquip(self,id)
    for k,v in table.pairsByKeys(self.rc_Ids) do
        if k == id then
            local object2 = self.rc_equipList[k] --选择的装备
            object2.transform:Find("EquipItemNew").gameObject:SetActive(false)
            object2.transform:Find("Avatar").gameObject:SetActive(false)
            self.rc_Ids[k] = 0
        end
        if v == 3017 then
            self.model.Item_Id = nil
        end
    end
    self.rc_needGold = GetZEquipReCast(self)
     
    this.InitBot(self)
end


local function AddEquip(self,id)
    for k,v in table.pairsByKeys(self.rc_Ids) do
        if v == 0 then
            if id ==3017 then
                self.rc_Ids[k] = id
                local object2 = self.rc_equipList[k] --选择的装备
                --local equip = self.equips[id]
                --local zEquip = Z_Equip[equip.TemplateId
                local avatar = object2.transform:Find("EquipItemNew/IconRoot/Avatar")
                local BG = object2.transform:Find("EquipItemNew/IconRoot/StarBg")
                local Holder = object2.transform:Find("EquipItemNew/Holder")
                local effect = object2.transform:Find("Avatar")
                local zItem = Z_Item[3017]
                UIUtil.SetSprite(avatar:GetComponent("Image"),AtlasConfig.Item,GetItemIcon(zItem),true)
                UIUtil.SetSprite(BG:GetComponent("Image"),AtlasConfig.EquipBg,"0.png",true)
                local equipItem = object2.transform:Find("EquipItemNew")
                --UIPublic.InitEquipItemNew(equipItem,equip)
                effect.gameObject:SetActive(true)
                equipItem.gameObject:SetActive(true)
                Holder.gameObject:SetActive(false)
            else
                self.rc_Ids[k] = id
                local object2 = self.rc_equipList[k] --选择的装备
                local equip = self.equips[id]
                local avatar = object2.transform:Find("Avatar")
                --local zEquip = Z_Equip[equip.TemplateId]
                local equipItem = object2.transform:Find("EquipItemNew")
                --UIUtil.SetSprite(avatar,AtlasConfig.Equip,zEquip.EquipIcon,true)
                UIPublic.InitEquipItemNew(equipItem,equip)
                avatar.gameObject:SetActive(true)
                equipItem.gameObject:SetActive(true)
            end
            break
        end
    end
end



function this.InitBot(self) --初始化装备信息
    this.InitRButton(self)
    local equipInfo =  self.rc_equipItemNew
    self.rc_goldNum.text = self.rc_needGold
    local color1 = Color.New(1,0,0)
    local color2 = Color.New(173/255,210/255,1)
    self.rc_goldNum.color = (self.rc_needGold > Game.Scene.Player.GoldCoin and {color1} or {color2})[1]


    if self.rc_equipId ~= nil and self.equips[self.rc_equipId] ~= nil then
        equipInfo.gameObject:SetActive(true)
        --self.rc_hint.gameObject:SetActive(false)
        self.rc_equipInfo.gameObject:SetActive(true)
        local equip = self.equips[self.rc_equipId]
        local equipItem = self.rc_equipInfo.transform:Find("EquipItemNew")
        local desc = self.rc_equipInfo.transform:Find("Scroll View/Viewport/Content/EquipDesc"):GetComponent("Text")
        local Prop = self.rc_equipInfo.transform:Find("Prop")
        local zEquip= Z_Equip[equip.TemplateId]
        local attr = equip:GetComponent("EquipAttrComponent"):GetAttr()
        if zEquip.Exclusive ~= 0 then
            desc.text = zEquip.ExclusiveEfx .. "\n" .. self.baseAttrTypeNames[zEquip.BaseAttrType[1]] .."+"..math.modf(attr)--.. LangUtil.GetSysLang(683) .. ":"
        else
            desc.text = zEquip.AdditionEfx .. "\n" .. self.baseAttrTypeNames[zEquip.BaseAttrType[1]].."+"..math.modf(attr)
        end
        Prop.gameObject:SetActive(true)
       --desc.text = Z_Equip[equip.TemplateId].
        --UIPublic.InitEquipDesc(desc,Z_Equip[equip.TemplateId])
        UIPublic.InitEquipItemNew(equipItem,equip)
        UIPublic.InitEquipProp(Prop,equip)
    else
        equipInfo.gameObject:SetActive(false)
        --self.rc_hint.gameObject:SetActive(true)
        self.rc_equipInfo.gameObject:SetActive(false)
    end
    
end

function this.InitTop(self)
    for k,v in pairs(self.rc_equipList) do
        v.transform:Find("Avatar").gameObject:SetActive(false)
        v.transform:Find("EquipItemNew").gameObject:SetActive(false)
    end
end

local function OnFormula(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipRecastFormula)
end

local function OnRecast(self)
    if self.rc_Ids[1] == 3017 then
        local itemId = table.first(Game.Scene.Player:GetComponent("ItemComponent").Items,function(v) return v.TemplateId == 3017  end).Id
        if itemId == nil then
            UIUtil.ToolTipFourth(LangUtil.GetSysLang(567))--"金币不足"
            return
        end
        local tipData = {}
        tipData.title = LangUtil.GetSysLang(9)--"提示"
        tipData.message = LangUtil.GetSysLang(749)
        tipData.callBack = function()
            OnClickUseBlackSwordButton(self,itemId,self.equips[self.rc_Ids[2]])
        end
        UIUtil.ToolTipFirst(tipData)
        return
    end
    local tipData = {}
    tipData.title = LangUtil.GetSysLang(9)--"提示"
    tipData.message = LangUtil.GetSysLang(749)
    tipData.callBack = function()
        UIPublic.InitButton(self.rc_btn,false,1,LangUtil.GetSysLang(251))
        local equip = self.equips[table.first(GetIdList(self))]
        local zEquip = Z_Equip[equip.TemplateId]

        if self.rc_needGold > self.player.GoldCoin then
            UIUtil.ToolTipFourth(LangUtil.GetSysLang(1033))--"金币不足"
            return
        end

        local func = function(id) self.rc_equipId = id end

        if zEquip.Exclusive == 0 then --普通装备

            local reqData = {}
            reqData.NewEquipTemplateId = self.recastEquip.Id
            reqData.Star = self.recastEquip.Star
            reqData.ExpendGoldCoin = self.rc_needGold
            reqData.RecastEquipList = {}
            for k,v in pairs(GetIdList(self)) do
                table.insert(reqData.RecastEquipList,v)
            end
            coroutine.start(function()
                PlayEffect(self)
                coroutine.waitforseconds(1.5)
                self.recast_panel.transform:DOShakePosition(0.6,40,80,90);
                coroutine.waitforseconds(0.5)
                self.ctrl:SendRecastRequest(reqData,func)
            end)
        else
            local reqData = {};
            reqData.Star = GetTotalStar(self),
            table.removebyvalue(self.rc_Ids,equip.Id);
            reqData.ExpendGoldCoin = self.rc_needGold
            reqData.MainRecastEquipId = equip.Id
            reqData.RecastEquipList = {};
            for k,v in pairs(GetIdList(self)) do
                table.insert(reqData.RecastEquipList,v)
            end
            coroutine.start(function()
                PlayEffect(self)
                coroutine.waitforseconds(1.5)
                self.recast_panel.transform:DOShakePosition(0.6,40,80,90);
                coroutine.waitforseconds(0.5)
                self.ctrl:SendExRecastRequest(reqData,func);
            end)
        end
    end
    UIUtil.ToolTipFirst(tipData)
 
    
end

local function OnClear(self)
    this.Init(self)
end

local function OnEquip(self, id, type)
    --点击装备
    local rc_id = table.first(self.rc_Ids,function(v) return v ~= 0  end)
    if self.rc_Ids[1] == 3017  then
        if table.count(GetIdList(self))>=2 then
            UIUtil.ToolTipFourth(LangUtil.GetSysLang(1041))--"装备已满"
        else
            AddEquip(self, id)
            this.InitBot(self)
        end
        return
    end
    self.rc_equipId = nil
    this.InitEquipItemNew(self)
   
    local equip = self.equips[id]
    local zEquip = Z_Equip[equip.TemplateId]

    if equip.Lock == 1 then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1035));--"装备已被锁定"
        return
    end
    
    local curEquipType = GetCurEquipType(self) --  获取第一个装备的类型
    local isExclusive = (zEquip.Exclusive ~= 0)
    if curEquipType == 1 or curEquipType == 2 then
        local star = (zEquip.Star == 0 and { equip.Star } or { zEquip.Star })[1];
        if star >= 5 then
            if zEquip.Exclusive ~= 0 or zEquip.IsSpecial == 0 then
                UIUtil.ToolTipFourth(LangUtil.GetSysLang(1037))--"不能选择非特殊装备的5星装备"
                return ;
            end
        end
        if curEquipType == 1 then
            --如果是普通装备
            local rc_IdList = {}
            for i, v in pairs(GetIdList(self)) do
                local Series = Z_Equip[self.equips[v].TemplateId].Series
                if not table.contains(rc_IdList, Series) then
                    table.insert(rc_IdList, Series)
                end
            end
            if not table.contains(rc_IdList, zEquip.Series) then
                table.insert(rc_IdList, zEquip.Series)
            end

            if table.count(rc_IdList) == 1 then
                --同系
                if Z_Equip[self.equips[rc_id].TemplateId].Star +1 <= #GetIdList(self) then
                    UIUtil.ToolTipFourth(LangUtil.GetSysLang(1041))--"装备已满"
                    return
                end
            else
                if table.count(rc_IdList) > 2 then
                    UIUtil.ToolTipFourth("--不符合合成规则")--"必须选择相同的装备"
                    return
                end
                if zEquip.IsSpecial == 1 and not (zEquip.Id == 21039 or zEquip.Id == 21062)  then
                    if table.count(GetIdList(self)) > 2 then
                        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1041))--"装备已满"
                        return
                    end
                else
                    if Z_Equip[self.equips[rc_id].TemplateId].Star +1 <= #GetIdList(self) then
                        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1041))--"装备已满"
                        return
                    end
                end

            end
        elseif curEquipType == 2  then
            --如果是专属装备
            --if zEquip.Exclusive == 0 then
            --    UIUtil.ToolTipFourth(LangUtil.GetSysLang(1076))--"必须选择专属装备"
            --    return
            --end
            if GetTotalStar(self) + equip.Star > 5 then
                UIUtil.ToolTipFourth(LangUtil.GetSysLang(1042))--"总星级不能超过5"
                return
            end
            --if equip.TemplateId ~= mainEquip.TemplateId then
            --    UIUtil.ToolTipFourth(LangUtil.GetSysLang(1077))--"专属装备要求相同"
            --    return
            --end
        end
    else
        local star = (zEquip.Star == 0 and { equip.Star } or { zEquip.Star })[1];
        if star >= 5 then
            if zEquip.Exclusive ~= 0 or zEquip.IsSpecial == 0 then
                UIUtil.ToolTipFourth(LangUtil.GetSysLang(1037))--"不能选择非特殊装备的5星装备"
                return ;
            end
        end
    end
    if UIPublic.GetEquipHolder(equip) ~= nil then
        local tipData = {}
        tipData.title = LangUtil.GetSysLang(9)--"提示"
        tipData.message = LangUtil.GetSysLang(813)
        tipData.callBack = function()
            local dataList = {}
            local data = {}
            local card = UIPublic.GetEquipHolder(equip)
            data.CardId = card.Id
            for k,v in pairs(portNames) do
                data[v] = card[v]
                if card[v] == equip.Id then
                    data[v] = 0
                end
            end
            table.insert(dataList,data)
            PublicRequest.SendChangeEquipRequest(dataList,function()
                AddEquip(self, id, isExclusive)
                self.rc_needGold = GetZEquipReCast(self)
                this.InitBot(self)
                this.InitEquipListData(self)
            end)
        end
        UIUtil.ToolTipFirst(tipData)
       
        --UIUtil.ToolTipFourth(LangUtil.GetSysLang(1078))--"装备已被穿戴"
        --return
    else
        AddEquip(self, id, isExclusive)
        self.rc_needGold = GetZEquipReCast(self)
        this.InitBot(self) 
    end
    
end



function this.InitEquipListData(self)
    self.rc_list = {}
    for k,v in table.pairsByKeys(self.equips) do
        if v.Level >= 5 and not (Z_Equip[v.TemplateId].Star >=5 and Z_Equip[v.TemplateId].IsSpecial ~= 1) and not (v.Star>=5 and Z_Equip[v.TemplateId].Exclusive~=0 ) then
            table.insert(self.rc_list,v)
        end
        ----测试
        --if  not (Z_Equip[v.TemplateId].Star >=5 and Z_Equip[v.TemplateId].IsSpecial ~= 1) and not (v.Star>=5 and Z_Equip[v.TemplateId].Exclusive~=0 ) then
        --    table.insert(self.rc_list,v)
        --end
    end

    self.rc_list = UIPublic.EquipScreenFunc(self.rc_list,screenTypes)
    table.sort(self.rc_list, function(a,b) return UIPublic.EquipSortFunc(a,b,recordOrder)end )

    if recordOrder.order ~= 1 then
        self.rc_list = table.reverseTable(self.rc_list)
    end
    self.rc_hint1:SetActive(table.count(self.rc_list) == 0)
    self.rc_scroll:RefreshData(self.rc_list)
end

function this.InitEquipList(self)
    --self.rc_hint1:SetActive(table.count(self.rc_list) == 0)
    self.rc_scroll:Clear()
    self.rc_scroll:ScrollInit(self.rc_list, self.rc_scrollView, pfbName, function (arg)
        local gameObject = arg.go 
        local equip = arg.data
        local select = gameObject.transform:Find("Select1").gameObject
        UIPublic.InitEquipItemNew(gameObject.transform,equip)
        LangUtil.GetSpriteLang(317, function(sprite) select:GetComponent("Image").sprite = sprite end)
        select:SetActive(table.first(self.rc_Ids,function(v) return v == equip.Id  end) ~= nil)
        local mask = gameObject.transform:Find("Mask").gameObject
        
        

        local selectId = table.first(self.rc_Ids,function(v) return v == equip.Id  end)
        UIUtil.AddBtnEvent(gameObject, function()
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipProp,{TemplateId = equip.TemplateId ,equip = equip, type = selectId or 0,callBack = function()
                
                if selectId ~= nil then
                    for k,v in pairs(self.rc_Ids) do
                        if v == equip.Id then
                            RemoveEquip(self,k)
                            self.rc_scroll:RefreshData(self.rc_list)
                            return
                        end
                    end
                else
                    OnEquip(self,equip.Id)
                end
                self.rc_scroll:RefreshData(self.rc_list) 
            end })
        end)
        if table.count(GetIdList(self)) > 0  then
            gameObject:GetComponent("Button").enabled = Game.Scene.Player:GetComponent("EquipComponent"):showMask(self.rc_Ids,equip)
            mask:SetActive( not Game.Scene.Player:GetComponent("EquipComponent"):showMask(self.rc_Ids,equip))
        else
            gameObject:GetComponent("Button").enabled = true
            mask:SetActive(false)
        end
    end)
end


local function OnScreenButton(self)
    local uiData = {}
    uiData.recordOrder = recordOrder
    uiData.screenTypes = screenTypes
    uiData.callBack = function(list,kind)
        screenTypes = table.clone(list)
        recordOrder.kind = kind
        this.InitEquipListData(self)
        --self.rc_scrollView.verticalScrollbar.value = 1
        --this.InitEquipList(self)
        self.vs_scroll:MoveTop()
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipSort1,uiData)
end


local function InitSortButton(self)
    local txt = self.rc_sortBtn.transform:Find("Text"):GetComponent("Text")
    txt.text = (recordOrder.order == 1 and {LangUtil.GetSysLang(154)} or {LangUtil.GetSysLang(153)})[1]
    
end


local function OnSortButton(self)
    recordOrder.order = (recordOrder.order == 1 and {2}or {1})[1]
    InitSortButton(self)
    this.InitEquipListData(self)
    --self.rc_scrollView.verticalScrollbar.value = 1
    --this.InitEquipList(self)
    self.vs_scroll:MoveTop()
end

function this.InitEquipItemNew(self)
    if self.rc_equipId ~= nil and self.equips[self.rc_equipId] ~= nil then
        self.rc_equipItemNew.gameObject:SetActive(true)
        self.OnclickequipItemID = self.rc_equipId
        coroutine.start(function()
            UIPublic.InitEquipItemNew(self.rc_equipItemNew,self.equips[self.rc_equipId])
        end)
    else
        self.OnclickequipItemID = 0
        self.rc_equipItemNew.gameObject:SetActive(false)
    end
   
end

function  this.InitRButton(self)
    self.recastEquip  = 0
    local Formula = nil
    local Formula1 = nil
    local rc_IdList={} --系别种类
    local rc_Series ={} -- 所有系别
    local rc_TemplateId = {} -- 所有TemplateId
    local rc_TemplateIdType = {} -- TemplateId 种类
    local rc_id = table.first(self.rc_Ids,function(v) return v ~= 0  end)
    
    if self.rc_Ids[1] == 3017 then
        UIPublic.InitButton(self.rc_btn,table.count(GetIdList(self))>=2,1,LangUtil.GetSysLang(251))
        return
    end
    if rc_id == nil or self.equips[rc_id] == nil then
        return
    end
    local zEquip = Z_Equip[self.equips[rc_id].TemplateId]
    if zEquip.Exclusive~=0 then
        if table.count(GetIdList(self))>1 then
            UIPublic.InitButton(self.rc_btn,true,1,LangUtil.GetSysLang(251))
        else
            UIPublic.InitButton(self.rc_btn,false,1,LangUtil.GetSysLang(251))
        end
        return
    end
    for i, v in pairs(GetIdList(self)) do
        local series = Z_Equip[self.equips[v].TemplateId].Series
        local templateId = self.equips[v].TemplateId
        table.insert(rc_TemplateId,templateId)
        table.insert(rc_Series,series)
        if not table.contains(rc_IdList,series) then
            table.insert(rc_IdList,series)
        end
        if not table.contains(rc_TemplateIdType,templateId) then
            table.insert(rc_TemplateIdType,templateId)
        end
    end
    if table.count(rc_IdList) >1 then
        --公式1
        Formula = table.first(Z_EquipFormula,function(v) return table.contains(v.Formula1,rc_IdList[1]) and  table.contains(v.Formula1,rc_IdList[2])  end)
        Formula1 = table.first(Z_EquipFormula,function(v) return table.contains(v.Formula2,rc_TemplateIdType[1]) and  table.contains(v.Formula2,rc_TemplateIdType[2])  end)
        local num1 = 0
        local num2 = 0
        if Formula ~= nil  then
            for i, v in pairs(rc_Series) do
                if v == Formula.Formula1[1]  then
                    num1 = num1 + 1
                end
                if v == Formula.Formula1[2]  then
                    num2 = num2 + 1
                end
            end
            local _bool =  num1 == Formula.Num[1] and num2 == Formula.Num[2]
            if _bool then
                self.recastEquip = Z_Equip[Formula.EquipId]
            end
            UIPublic.InitButton(self.rc_btn,_bool,1,LangUtil.GetSysLang(251))
        end
        if Formula1 ~= nil then
            for i, v in pairs(rc_TemplateId) do
                if v == Formula1.Formula2[1]  then
                    num1 = num1 + 1
                end
                if v == Formula1.Formula2[2]  then
                    num2 = num2 + 1
                end
            end
            local _bool =  num1 == Formula1.Num[1] and num2 == Formula1.Num[2]
            if _bool then
                self.recastEquip = Z_Equip[Formula1.EquipId]
            end
            UIPublic.InitButton(self.rc_btn,_bool,1,LangUtil.GetSysLang(251))
        end
    else
        --同系
        if table.count(rc_TemplateIdType) == 1 then
            local Formula1 = table.first(Z_EquipFormula,function(v) return table.contains(v.Formula2,rc_TemplateId[1])  end)
            if Formula1 ~= nil and  table.count(Formula1.Formula2) == 1 then
                if table.count(rc_TemplateId) == Formula1.Num[1]  then
                    self.recastEquip = Z_Equip[Formula1.EquipId]
                    UIPublic.InitButton(self.rc_btn,true,1,LangUtil.GetSysLang(251))
                else
                    UIPublic.InitButton(self.rc_btn,false,1,LangUtil.GetSysLang(251))
                end
            else
                if table.count(GetIdList(self))>1 then
                    local num = Z_Equip[self.equips[rc_id].TemplateId].Star + 1
                    if table.count(GetIdList(self)) == num then
                        self.recastEquip = GetRandomZEquip(rc_Series[1],num)
                    end

                    UIPublic.InitButton(self.rc_btn, table.count(GetIdList(self)) == num and self.recastEquip ~= 0  ,1,LangUtil.GetSysLang(251))
                end
            end
        elseif table.count(rc_TemplateIdType) > 1 then
                local Formula1 = table.first(Z_EquipFormula,function(v) return table.contains(v.Formula2,rc_TemplateId[1]) and table.contains(v.Formula2,rc_TemplateId[1]) end)
                local nums = {num1 =0 ,num2 =0,num3 =0,num4 =0,num5 =0 }
                if Formula1 ~= nil   then --table.count(Formula1.Formula2) == 1 
                    for i, v in pairs(rc_TemplateId) do
                        for k = 1, #Formula1.Formula2 do
                            if v == Formula1.Formula2[k]  then
                                nums["num"..k] = nums["num"..k] + 1
                            end
                        end
                    end
                    for i = 1, #Formula1.Num do
                        if Formula1.Num[i] ~= nums["num"..i] then
                            UIPublic.InitButton(self.rc_btn,false,1,LangUtil.GetSysLang(251))
                            return
                        end
                    end
                    self.recastEquip = Z_Equip[Formula1.EquipId]
                    UIPublic.InitButton(self.rc_btn,true,1,LangUtil.GetSysLang(251))
                    --local _bool =  num1 == Formula1.Num[1] and num2 == Formula1.Num[2]
                    --if table.count(rc_TemplateId) == Formula1.Num[1]  then
                    --    
                    --else
                    --    UIPublic.InitButton(self.rc_btn,false,1,LangUtil.GetSysLang(251))
                    --end
                else
                    if table.count(GetIdList(self))>1 then
                        local num = Z_Equip[self.equips[rc_id].TemplateId].Star + 1
                        if table.count(GetIdList(self)) == num then
                            self.recastEquip = GetRandomZEquip(rc_Series[1],num)
                        end
                        UIPublic.InitButton(self.rc_btn, table.count(GetIdList(self)) == num and self.recastEquip ~= 0,1,LangUtil.GetSysLang(251))
                    end

                end
        end
    end
    
    if table.count(GetIdList(self)) >= 1 then
        UIPublic.InitButton(self.rc_clearBtn,true,2,LangUtil.GetSysLang(261))
    else
        UIPublic.InitButton(self.rc_clearBtn,false,2,LangUtil.GetSysLang(261))
    end

end


function this.Init(self)
    self.rc_audio.volume = ClientData:GetInstance():GetVolume("SoundVolume")
    self.rc_equipId = nil
    self.Item_Id = self.model.Item_Id
    if not self.rc_init then
        self.rc_equipId = nil
    end
    UIPublic.InitButton(self.rc_btn, false,1,LangUtil.GetSysLang(251))

    self.baseAttrTypeNames = {"HP","ATK","DEF","SPD","HP%","ATK%","DEF%","SPD%"}
    self.rc_Ids = {0,0,0,0,0}
    
    self.rc_needGold = 0
    this.InitBot(self)
    this.InitTop(self)

    InitSortButton(self)
    this.InitEquipItemNew(self)
    this.InitEquipListData(self)
    --this.InitEquipList(self)
    self.rc_init = true
    if self.Item_Id ~= nil then
        AddEquip(self,3017)
    end
end


function this.OnLangCreate(self,panel)
    UIPublic.InitButton(self.rc_btn,false,1,LangUtil.GetSysLang(251))
    -- LangUtil.LangTextByName(self.langRc:GetObject("NameTextRoot"),"Text")--.text = LangUtil.GetSysLang(88)
    local langRc = panel.transform:Find("LangControl"):GetComponent("ReferenceCollector")
    local spendGold = langRc:GetObject("SpendGold").transform
    local sorBtn = langRc:GetObject("SortButton").transform
    local screenBtn = langRc:GetObject("ScreenButton").transform
    local formulaBtn = langRc:GetObject("FormulaButton").transform
    local bot = langRc:GetObject("Bot").transform
    --local hint = langRc:GetObject("Hint").transform
    LangUtil.BindText(sorBtn:Find("Text"))
    LangUtil.BindText(screenBtn:Find("Text")).text = LangUtil.GetSysLang(155)
    LangUtil.BindText(formulaBtn:Find("Text")).text = LangUtil.GetSysLang(268)
    LangUtil.BindText(spendGold:Find("Txt")).text = LangUtil.GetSysLang(205)
    LangUtil.BindText(spendGold:Find("GoldNum"),FontType.All_Number)
    
    table.csenuObject(bot,function(v)
        if not IsNull(v:GetComponent("Text")) then
            LangUtil.BindText(v)
        end
    end)
    --LangUtil.BindText(hint:Find("Text")).text = LangUtil.GetSysLang(252)

    LangUtil.BindText(langRc:GetObject("ClearButton").transform:Find("Text")).text = LangUtil.GetSysLang(261)
    LangUtil.BindText(langRc:GetObject("RecastButton").transform:Find("Text")).text = LangUtil.GetSysLang(251)
end

function this.Create(self)
    self.rc_list = {}
    local rc = self.recast_panel:GetComponent("ReferenceCollector")
    self.rc_scroll = VerticalScroll.New()
    self.rc_scroll:SetUpdateCount(15)
    self.rc_scrollView = rc:GetObject("ScrollView"):GetComponent("ScrollRect")
    this.InitEquipList(self)
    self.rc_audio = self.recast_panel:GetComponent(typeof(AudioSource))
    self.rc_hint1 = rc:GetObject("Hint1")
    self.rc_btn = rc:GetObject("RecastButton")
    --self.rc_hint = rc:GetObject("Hint")
    self.rc_goldNum = rc:GetObject("GoldNum"):GetComponent("Text")
    local rc_equipRoot = rc:GetObject("EquipList").transform
    self.rc_formulaBtn = rc:GetObject("FormulaButton")
    self.rc_clearBtn = rc:GetObject("ClearButton")
    self.rc_equipInfo = rc:GetObject("EquipInfo")
    self.rc_screenBtn = rc:GetObject("ScreenButton")
    self.rc_sortBtn = rc:GetObject("SortButton")
    self.rc_content = rc:GetObject("Content").transform
    self.rc_equipItemNew = rc:GetObject("EquipItemNew").transform
    self.rc_object_list = {}
    self.rc_equipList = {}
    
    self.effectList = {}
    self.effectList[6] = rc:GetObject("MainEffect")

    self.OnclickequipItemID = 0
    
    for i = 0 ,rc_equipRoot.childCount - 1 do
        local child = rc_equipRoot:GetChild(i)
        self.rc_equipList[i+1] = child
        self.effectList[i] = child:Find("Avatar/Effect").gameObject
        UIUtil.AddBtnEvent(child:Find("EquipItemNew").gameObject,function()RemoveEquip(self,i+1) self.rc_scroll:RefreshData(self.rc_list)  end)
    end


    UIUtil.AddBtnEvent(self.rc_btn,function() OnRecast(self)  end)
    UIUtil.AddBtnEvent(self.rc_formulaBtn,function() OnFormula(self)  end)
    UIUtil.AddBtnEvent(self.rc_clearBtn,function() OnClear(self) end)
    UIUtil.AddBtnEvent(self.rc_screenBtn,function() OnScreenButton(self)  end)
    UIUtil.AddBtnEvent(self.rc_sortBtn,function() OnSortButton(self) end)

    UIUtil.AddBtnEvent(self.rc_equipItemNew.gameObject, function()
        if self.OnclickequipItemID ~= 0 then
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipProp,{TemplateId = self.equips[self.OnclickequipItemID].TemplateId,equip = self.equips[self.OnclickequipItemID] })
        end
    end)
    local equipItem = self.rc_equipInfo.transform:Find("EquipItemNew")
    UIUtil.AddBtnEvent(equipItem.gameObject, function()
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipProp,{TemplateId = self.equips[self.OnclickequipItemID].TemplateId,equip = self.equips[self.OnclickequipItemID] })
    end)
end

function this.OnDisable(self)
    self.rc_scroll:Dispose()
    if self.rc_init then
        self.rc_init = false
        self.rc_equipId = nil
    end
    self.model.Item_Id = nil
    screenTypes = {star = 0, Part = 0, exclusive = 0, isEquip = 0}
    recordOrder.order = 1
end





function this.OnEquipInfoChg(self)
    if  self.rc_init  then
        self.baseAttrTypeNames = {"HP","ATK","DEF","SPD","HP%","ATK%","DEF%","SPD%"}
        --if  self.rc_equipId == nil then
        --    this.InitBot(self)
        --    this.InitEquipItemNew(self)
        --    this.InitEquipListData(self)
        --else
            self.Item_Id = self.model.Item_Id
            if not self.rc_init then
                self.rc_equipId = nil
            end
            self.rc_Ids = {0,0,0,0,0}
            self.rc_needGold = 0
            UIPublic.InitButton(self.rc_btn, false,1,LangUtil.GetSysLang(251))
            this.InitTop(self)
            
            self.rc_init = true
            if self.Item_Id ~= nil then
                AddEquip(self,3017)
            end
            this.InitBot(self)
            this.InitEquipItemNew(self)
            this.InitEquipListData(self)
            --self.rc_equipId = nil
        --end
        self.rc_audio.volume = ClientData:GetInstance():GetVolume("SoundVolume")
    end
    UIPublic.InitHint(self.rc_content,self.rc_hint1)
end


return this
