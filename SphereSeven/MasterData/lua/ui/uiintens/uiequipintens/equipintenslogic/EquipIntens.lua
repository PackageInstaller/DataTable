---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/18 11:30
---

local IntensLogic = {};
local this = IntensLogic;


local function CountFinalLvAndExp(self) --通过当前的经验值计算最终的等级和剩余经验
    local equip = self.cur_equip;
    local curExp = self.lv_exp + equip.Exp;
    local finalLv = equip.Level;
    local surPlus = 0;
    for i = equip.Level,#Z_EquipLevelUp - 1 do
        local z_equip_level = Z_EquipLevelUp[i+1];
        if curExp >z_equip_level.LevelUpExp then
            curExp = curExp - z_equip_level.LevelUpExp;
            finalLv = i+1;
            if finalLv == 5 then
                surPlus = 0 ;
                break;
            end
        else
            surPlus = curExp;
            if finalLv == 5 then
                surPlus = 0 ;
            end
            break;
        end
    end
    return {finalLv,surPlus};
end



local function GetMaxLevelExp(self) --获取升到满级需要的经验值
    local equip = self.cur_equip;
    local expCount = 0;

    for i = equip.Level,#Z_EquipLevelUp - 1 do
        local needExp = Z_EquipLevelUp[i+1].LevelUpExp;
        expCount = expCount + needExp;
    end
    return expCount - equip.Exp;
end

local function GetMaxItemNum(self)
    local maxExp = GetMaxLevelExp(self)
    local zExpend = table.first(Z_EquipLevelUpExpend,function(v) return v.ItemId == self.lv_itemId  end)
    local itemNum,sur = math.modf(maxExp/zExpend.ExpPer)
    if sur > 0 then itemNum = itemNum + 1 end
    local itemAmount = UIPublic.GetItemAmount(self.lv_itemId)
    if itemAmount <= itemNum then
        return itemAmount
    else
        return itemNum
    end
end


-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------



local function GetNewEquip(self)
    if self.virEquip == nil then
        self.virEquip = UIPublic.CreateNewEquip(self.cur_equip)
    end
    return self.virEquip
end


local function SetExp(self) --计算获得的经验和消耗的金币
    local itemId = self.lv_itemId
    local count = self.lv_itemNum
    self.lv_need = count * self.zEquipLevelUpExpend.GoldCoinPer
    self.lv_exp = count * self.zEquipLevelUpExpend.ExpPer
end

local function InitEquipInfo(self)
    local equip = self.cur_equip
    local transform = self.lv_equipInfo
    local zEquip = Z_Equip[equip.TemplateId]
    local starBg = transform:Find("IconRoot/StarBg"):GetComponent("Image")
    local avatar = transform:Find("IconRoot/Avatar"):GetComponent("Image")
    local starRoot = transform:Find("IconRoot/StarRoot")
    local kindRoot = transform:Find("KindLab")
    local name = transform:Find("Name"):GetComponent("Text")
    local holderAvatar = transform:Find("Holder/Avatar"):GetComponent("Image")
    local desc = transform:Find("Desc"):GetComponent("Text")
    desc.text = (string.IsNullOrEmpty(zEquip.ExclusiveEfx) and {zEquip.AdditionEfx} or {zEquip.ExclusiveEfx})[1]
    name.text = zEquip.Name
    for i = 0,starRoot.childCount - 1 do
        local child = starRoot:GetChild(i).gameObject
        child:SetActive((i+1)<= equip.Star)
    end
    for i = 0,kindRoot.childCount - 1 do
        local child = kindRoot:GetChild(i).gameObject
        child:SetActive((i+1) == zEquip.Kind)
    end
    UIUtil.SetSprite(avatar,AtlasConfig.Equip,zEquip.EquipIcon,true)
    UIPublic.InitEquipBg(zEquip,starBg,true)
    local holder = UIPublic.GetEquipHolder(equip)
    if holder ~= nil then
        holderAvatar.gameObject:SetActive(true)
        UIUtil.SetCardSprite(holderAvatar,holder.TemplateId,holder.SkinId,CardPictureType.Little,true)
    else
        holderAvatar.gameObject:SetActive(false)
    end
end


local function InitPropChg(self)
    local transform = self.lv_info:Find("PropChg")
    local addValue = transform:Find("AddValue"):GetComponent("Text")
    local propName = transform:Find("PropName"):GetComponent("Text")
    local prop = transform:Find("Prop"):GetComponent("Text")

    if self.virEquip == nil then
        transform.gameObject:SetActive(false)
        return
    else
        if self.virEquip.Level == self.cur_equip.Level then
            transform.gameObject:SetActive(false)
            return
        end
    end
    local equipC_1 = self.cur_equip:GetComponent("EquipAttrComponent")
    local equipC_2 = self.virEquip:GetComponent("EquipAttrComponent")
    transform.gameObject:SetActive(true)
    local propNames = {LangUtil.GetSysLang(172),LangUtil.GetSysLang(173),LangUtil.GetSysLang(171)}
    local zEquip = Z_Equip[self.virEquip.TemplateId]
    propName.text = propNames[zEquip.Kind]
    prop.text = math.modf(equipC_2:GetAttr())
    addValue.text = "+"..math.modf(equipC_2:GetAttr() - equipC_1:GetAttr())

end



local function InitLvInfo(self,equip)
    local transform = self.lv_info
    local slider = transform:Find("ExpBar"):GetComponent("Slider")
    local level = transform:Find("Level"):GetComponent("Text")
    local next = transform:Find("NextLv").gameObject
    local nextV = transform:Find("NextLv/Value"):GetComponent("Text")
    local maxLv = transform:Find("MaxLv"):GetComponent("Text")
    local nextExp = transform:Find("NextExp"):GetComponent("Text")
    local zEquipLevel = Z_EquipLevelUp[equip.Level +1]
    
    slider.value = (zEquipLevel == nil and {1} or {equip.Exp/zEquipLevel.LevelUpExp})[1]  
    level.text = "LV:"..self.cur_equip.Level
    next:SetActive(self.cur_equip.Level ~= 5)
    
    local levelNum = 0
    if self.virEquip == nil then
        levelNum = self.cur_equip.Level + 1
    else
        if self.virEquip.Level == self.cur_equip.Level then
            levelNum = self.cur_equip.Level + 1
        else
            levelNum = self.virEquip.Level + 1
        end
    end
    
    if levelNum > 5 then levelNum = 5 end
    nextV.text =levelNum


    maxLv.text = levelNum.."/5"
    if zEquipLevel ~=nil then
        nextExp.text = LangUtil.GetSysLang(200)..(zEquipLevel.LevelUpExp - equip.Exp)
    else
        nextExp.text = "Max"
    end
    InitPropChg(self)
end


local function InitNumTxt(self)
    self.lv_expTxt.text = self.lv_exp
    self.lv_needTxt.text = self.lv_need 
end

local function InitItemNumTxt(self)
    self.lv_itemNumTxt.text = self.lv_itemNum
end

local function InitItemRoot(self)
    local avatar = self.lv_itemRoot:Find("MatterFrame/Value"):GetComponent("Image")
    local holdTxt = self.lv_itemRoot:Find("HoldNumText"):GetComponent("Text")
    holdTxt.text = LangUtil.GetSysLang(254).."："..UIPublic.GetItemAmount(self.lv_itemId)
    UIUtil.SetSprite(avatar,AtlasConfig.Item,GetItemIcon(Z_Item[self.lv_itemId]),true)
end

local function OnChgItem(self,id)
    for k,v in pairs(self.lv_itemBtns) do
        if (id - 1000) == k then
            v:GetComponent("Image").enabled = false
            v:GetComponent("Button").enabled = false
            v.transform:Find("Active").gameObject:SetActive(true)
        else
            v:GetComponent("Image").enabled = true
            v:GetComponent("Button").enabled = true
            v.transform:Find("Active").gameObject:SetActive(false)
        end
    end
    self.lv_itemId = id
    self.lv_itemNum = 0
    InitItemRoot(self)
end


local function OnExpChg(self)
    local equip = GetNewEquip(self)
    if self.lv_itemNum == 0 then
        self.virEquip = nil
        equip = self.cur_equip
    else
        local lvData = CountFinalLvAndExp(self)
        self.virEquip.Level = lvData[1]
        self.virEquip.Exp = lvData[2]
        self.virEquip:GetComponent("EquipAttrComponent"):LevelUp(lvData[1])
    end
    InitLvInfo(self,equip)
end



local function OnAdd(self)
    if self.lv_itemNum >= GetMaxItemNum(self) then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(2019))
        return
    end
    self.lv_itemNum = self.lv_itemNum + 1
    SetExp(self)
    OnExpChg(self)
    InitNumTxt(self)
    InitItemNumTxt(self)
end

local function OnReduce(self)
    if self.lv_itemNum <=0 then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(2021))
        return
    end
    self.lv_itemNum = self.lv_itemNum - 1
    SetExp(self)
    OnExpChg(self)
    InitNumTxt(self)
    InitItemNumTxt(self)
end

local function OnMax(self)
    self.lv_itemNum = GetMaxItemNum(self)
    SetExp(self)
    OnExpChg(self)
    InitNumTxt(self)
    InitItemNumTxt(self)
end

local function OnLevelUp(self)
    if self.virEquip == nil then
        return
    end

    if self.player.GoldCoin < self.lv_need then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1033))--"金币不足"
        return
    end

    local reqData = {}
    reqData.EquipId = self.cur_equip.Id;
    reqData.ExpendGoldCoin = self.lv_need
    reqData.Level = self.virEquip.Level
    reqData.Exp = self.virEquip.Exp
    reqData.ExpendMaterialList = {}
    local ExpendMaterial = {}
    ExpendMaterial.Amount = self.lv_itemNum
    ExpendMaterial.MaterialId = UIPublic.GetItem(self.lv_itemId).Id
    ExpendMaterial.Type = 0;
    table.insert(reqData.ExpendMaterialList,ExpendMaterial);
    self.ctrl:SendIntensRequest(reqData)
end

function this.Create(self)
    self.lv_itemBtns = {}
    for i = 0,self.lv_chgItemRoot.childCount - 1 do
        local child = self.lv_chgItemRoot:GetChild(i).gameObject
        self.lv_itemBtns[i+1] = child
        UIUtil.AddBtnEvent(child,function()OnChgItem(self,i+1 + 1000)  end)
    end
    local addBtn = self.lv_numRoot:Find("AddButton").gameObject
    local reduceBtn = self.lv_numRoot:Find("ReduceButton").gameObject
    local maxBtn = self.lv_numRoot:Find("MaxButton").gameObject
    self.lv_itemNumTxt = self.lv_numRoot:Find("ShowNum/Value"):GetComponent("Text")
    UIUtil.AddBtnEvent(addBtn,function()OnAdd(self)end)
    UIUtil.AddBtnEvent(reduceBtn,function()OnReduce(self)end)
    UIUtil.AddBtnEvent(maxBtn,function()OnMax(self)end)
    UIUtil.AddBtnEvent(self.lv_btn ,function()OnLevelUp(self)  end)
end

local function OnEquipItem(self,id)
    self.cur_equip = self.equips[id]
    this.Init(self)
end

local function InitEquipList(self)
    for k,v in pairs(self.object_list) do
        local transform = v.transform
        transform:Find("Select").gameObject:SetActive(k == self.cur_equip.Id)
        transform:Find("Recast").gameObject:SetActive(false)
        UIUtil.AddBtnEvent(v, function() OnEquipItem(self,k) end)
    end
end


function this.OnRefresh(self)
    self.lv_btn:SetActive(self.cur_equip.Level ~= 5)
    InitItemRoot(self)
    InitNumTxt(self)
    InitItemNumTxt(self)
    InitEquipInfo(self)
    InitLvInfo(self,self.cur_equip)
    InitPropChg(self)
    OnChgItem(self,self.lv_itemId)
end


function this.Init(self) -- 初始化
    self.lv_itemNum = 0
    self.lv_exp = 0
    self.lv_need = 0
    self.virEquip = nil

    local star
    local zEquip = Z_Equip[self.cur_equip.TemplateId]

    if zEquip.Exclusive == 0 then
        star = zEquip.Star
    else
        star = self.cur_equip.Star
    end
    
   self.zEquipLevelUpExpend = table.first(Z_EquipLevelUpExpend,function(v)
        return table.first(v.Stars,function(a) return  a == star  end) ~= nil
    end)

    self.lv_itemId = self.zEquipLevelUpExpend.ItemId
    
    this.OnRefresh(self)
    InitEquipList(self)
end


--self.lv_info 
--self.lv_equipInfo 
--self.lv_expTxt 
--self.lv_needTxt 
--self.lv_numRoot 
--self.lv_itemRoot 
--self.lv_chgItemRoot
--self.lv_btn 

return this;
