---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UICardEvolveStage1View = BaseClass("UICardEvolveStage1View",UIBaseView);
local base = UIBaseView
local this = UICardEvolveStage1View


local function OnSkip(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UICardEvolveStage2,{
        card = self.card,
        originalStar = self.model.info.originalStar
    })
    -- if self.card.Star == 5 then
    --     UIManager:GetInstance():OpenWindow(UIWindowNames.UICardEvolveStage3,{card = self.card})
    -- else
    --     UIManager:GetInstance():OpenWindow(UIWindowNames.UICardEvolveStage2,{card = self.card})
    -- end
    coroutine.start(function()
        coroutine.waitforseconds(0.5)
        UIManager:GetInstance():CloseWindow(UIWindowNames.UICardEvolveStage1)
    end)
end


function this.OnCreate(self)
    base.OnCreate(self);
    self.audio = self.gameObject:GetComponent("AudioSource")
    self.effect = self.rc:GetObject("Effect")
    self.stage1 = self.rc:GetObject("Stage1")
    self.stage2 = self.rc:GetObject("Stage2")
    self.effect:SetActive(false)
end

function this.OnLangCreate(self)
    LangUtil.GetSpriteLang(247, function(sprite) self.stage1:GetComponent("Image").sprite = sprite end)
    LangUtil.GetSpriteLang(248, function(sprite) self.stage2:GetComponent("Image").sprite = sprite end)
end

function this.OnEnable(self)
    base.OnEnable(self)
    self.audio.volume = ClientData:GetInstance():GetVolume("SoundVolume")
    local info = self.model.info
    self.card = info.card
    self.stage1:SetActive(self.card.Star < 5)
    self.stage2:SetActive(self.card.Star == 5)
    self:OnRefresh()
end



function this.OnRefresh(self)
    self.effect:SetActive(false)
    coroutine.waitforseconds(0.5)
    self.effect:SetActive(true)
    UIPublic.PlayEffect(self.effect)
    self.audio:Play()
    coroutine.waitforseconds(0.8)
    UIUtil.OpenSkipHint(function()OnSkip(self)  end)
end


function this.OnAddListener(self)
    base.OnAddListener(self)
  
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
  
end

function this.OnDisable(self)
    base.OnDisable(self);
    self.effect:SetActive(false)
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this;

