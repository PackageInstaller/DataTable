---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/8/30 14:50
---

local ConstellationLogic = {}
local this = ConstellationLogic
local maxLevel = 6

local romaList = {"I","II","III","IV","V","VI"}
local effectNames = { "fire", "water", "land", "wind", "thunder", "light", "dark", "sky", "lock" }
local textColor1 = Color.New(129 / 255, 129 / 255, 129 / 255)
local fillEnd = { [0] = 0, 0, 0.14, 0.3, 0.46, 0.64, 0.82, 1 }
local sizeDelta = Vector2.New(320, 320)

local function InitCardImg(self, zCard)
    if this.ConstelLevel >= maxLevel then
        this.CardNum.text = "0/0"
        this.HeartNum.text = "0/0"
    else
        local card = self.cur_card
        this.AddBtn = this.CardItem:Find("Card/ImageAdd")
        this.AddBtnbG = this.CardItem:Find("Card")
        --UIUtil.SetCardSprite(this.AddBtn:GetComponent("Image"), card.TemplateId, 1,CardPictureType.Little,true)
        --UIUtil.NewSetCardSprite(this.AddBtn:GetComponent("Image"), card.TemplateId, card.SkinId,CardPictureType.Little,true)
        

        local tokenCount = 0
        local tokenId

        for _, itemInfo in pairs(Z_Item) do
            if itemInfo.UseType == ItemUseType.ItemUseTypeCharacterFrag then
                if tonumber(itemInfo.UseParams[1]) == card.TemplateId then
                    tokenId = itemInfo.Id
                    this.CharacterConstellationId = tokenId
                end
            end
        end

        UIPublic.InitItemIconNew(this.AddBtn:GetComponent("Image"), this.AddBtnbG:GetComponent("Image"), RewardType.RewardTypeItem, this.CharacterConstellationId)

        if tokenId ~= nil then
            tokenCount = UIPublic.GetItemAmount(tokenId)--self.player:GetComponent("ItemComponent"):GetItem(tokenId).Amount
            if not this.isInit then
                this.constellationId = this.CharacterConstellationId
            end
        end

        this.cardName.text = Z_Item[tokenId].Name
        this.HeartName.text = Z_Item[tonumber(Z_Misc["HOLY_GRAIL"].Value[1])].Name    
        local cardXinWuNum = tonumber(Z_Misc["CHARACTER_CONSTELLATION_FRAG_COST"].Value[Z_Character[card.TemplateId].Rarity])
        local commonUpNum = tonumber(Z_Misc["CHARACTER_CONSTELLATION_COST"].Value[Z_Character[card.TemplateId].Rarity])
        local color = (tokenCount >= cardXinWuNum
        and {"<color=#FFFFFF>"} or {"<color=#FF6243>"})[1]
        this.CardNum.text = color .. tokenCount .. "</color>/" .. Z_Misc["CHARACTER_CONSTELLATION_FRAG_COST"].Value[Z_Character[card.TemplateId].Rarity]

        color = (UIPublic.GetItemAmount( Z_Misc["HOLY_GRAIL"].Value[1]) >= commonUpNum
        and {"<color=#FFFFFF>"} or {"<color=#FF6243>"})[1]
        this.HeartNum.text = color .. UIPublic.GetItemAmount( Z_Misc["HOLY_GRAIL"].Value[1]) .. "</color>/" .. commonUpNum

        if this.constellationId == this.CharacterConstellationId then
            UIPublic.InitButton(this.IntensButton,tokenCount >= cardXinWuNum)
        else
            UIPublic.InitButton(this.IntensButton,UIPublic.GetItemAmount( Z_Misc["HOLY_GRAIL"].Value[1]) >= commonUpNum)
        end
    end
end

local function OnIntensButtonClick(self)
    local card = self.cur_card
    local sendTable = {}
    sendTable.id = card.Id
    --sendTable.item_id = Game.Scene.Player:GetComponent("ItemComponent"):GetItem(this.constellationId).Id
    sendTable.item_id =  UIPublic.GetItem(this.constellationId).Id --UIPublic.GetItemAmount( this.constellationId)

    local zExpend = Z_CharacterConstellation[self.cur_card.TemplateId][this.ConstelLevel + 1].Cost
    if not zExpend then
        return
    end
    if UIPublic.GetItemAmount(Z_Misc["GOLD_ID"].Value[1]) < zExpend then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1033), 1.5)--"金币不足"
        return
    end

    if sendTable.item_id == 0 then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1053), 1.5)--"材料不足"
        return
    end
    
    coroutine.start(function()
        local request = coroutine.yieldstart(Game.Scene.Session.CoCall,nil,Game.Scene.Session,
        PROTOCOL.CharacterPackConstellationReq, sendTable)
    end)
end

local function infoEventClick()
    --this.tips:SetActive(false)
    --this.infoEvent:SetActive(false)
    this.canvas.enabled = false
    --this.lightInfo:SetActive(false)
end

function this.Init(self)
    if this.characterId ~= self.cur_card.TemplateId then
        this.isInit = false
    end
    if not this.isInit then
        --CharacterConstellationClick(self)
        this.CardItem:Find("SelectImage").gameObject:SetActive(true)
        this.HeartItem:Find("SelectImage").gameObject:SetActive(false)
        this.constellationId = this.CharacterConstellationId
    end

    this.characterId = self.cur_card.TemplateId
    local zCard = Z_Card[self.cur_card.TemplateId]
    this.costCard = nil
    infoEventClick()

    this.player = Game.Scene.Player
    this.ConstelLevel = self.cur_card.Constellation

    local holdNum = UIPublic.GetItemAmount(Z_Misc["GOLD_ID"].Value[1])
    local nextConstellation = self.cur_card.Constellation + 1
    if nextConstellation > maxLevel then
        nextConstellation = maxLevel
    end
    local costGold = Z_CharacterConstellation[self.cur_card.TemplateId][nextConstellation].Cost 
    local color = (holdNum >= costGold and {"<color=#FFFFFF>"} or {"<color=#FF6243>"})[1]
    this.GoldNumText.text = color .. costGold .. "</color>"
    
    InitCardImg(self, zCard)

    UIPublic.SetConstellationLightPanel(this.ConstellationLightPanel, self.cur_card)


    local titelList = {}
    for i = 1, 6 do
        table.insert(titelList, "第" .. romaList [i] .. "層")
    end

    UIPublic.InitDescription(self.ActiveInfoDetail.transform, 
        Z_CharacterConstellation[self.cur_card.TemplateId], 
        self.cur_card.Constellation, 
        6, 
        titelList)

    local descriptionList = {}
    for i = 0,this.ConstellationLightPanel.childCount - 1 do
        descriptionList[i+1] = this.ConstellationLightPanel:GetChild(i)
    end

    for constellationLevel, v in table.pairsByKeys(descriptionList) do
        UIUtil.AddBtnEventNoBug(v,function()
            this.descriptionRoot:Find("Description"):GetComponent("Text").text = Z_CharacterConstellation[self.cur_card.TemplateId][constellationLevel].Description
            this.descriptionRoot:Find("LayerText"):GetComponent("Text").text = titelList[constellationLevel]
        end)
    end

    this.descriptionRoot:Find("Description"):GetComponent("Text").text = Z_CharacterConstellation[self.cur_card.TemplateId][nextConstellation].Description
    this.descriptionRoot:Find("LayerText"):GetComponent("Text").text = titelList[nextConstellation]

    this.maxStatus.gameObject:SetActive(this.ConstelLevel == tonumber(Z_Misc["CHARACTER_CONSTELLATION_LIMIT"].Value[1]))
    this.HeartItem.gameObject:SetActive(this.ConstelLevel ~= tonumber(Z_Misc["CHARACTER_CONSTELLATION_LIMIT"].Value[1]))
    this.CardItem.gameObject:SetActive(this.ConstelLevel ~= tonumber(Z_Misc["CHARACTER_CONSTELLATION_LIMIT"].Value[1]))
    if this.ConstelLevel == tonumber(Z_Misc["CHARACTER_CONSTELLATION_LIMIT"].Value[1]) then
        UIPublic.InitButton(this.IntensButton,false)
    end

    UIPublic.InitItemIconNew(this.HeartItem:Find("Card/Mask/Avatar"):GetComponent("Image"), this.HeartItem:Find("Card"):GetComponent("Image"), 
        RewardType.RewardTypeItem, tonumber(Z_Misc["HOLY_GRAIL_ID"].Value[1]))

    this.isInit = true
end

function this.OnLangCreate(self)
    this.GoldNumText = LangUtil.BindText(this.rc:GetObject("GoldNumText").transform:GetComponent("Text"),FontType.All_Number)
    this.CardNum = this.CardItem:Find("Num").transform:GetComponent("Text")
    this.HeartNum = this.HeartItem:Find("Num").transform:GetComponent("Text")
    this.cardName = this.CardItem:Find("NameSize/Name"):GetComponent("Text")
    this.HeartName = this.HeartItem:Find("NameSize/Name"):GetComponent("Text")

    this.maxStatus.transform:Find("MaxText"):GetComponent("Text").text = LangUtil.GetSysLang(2130)

    local DescContent = this.rc:GetObject("DescContent").transform
    this.descList = {}
    for i = 0, DescContent.childCount - 1 do
        local col = {}
        col.Desc = LangUtil.BindText(DescContent:GetChild(i):Find("Desc"))
        col.Lab = col.Desc.transform:Find("Lab")
        col.Text = LangUtil.BindText(col.Lab:Find("Text"))
        table.insert(this.descList, col)
    end
end

function this.OnCreate(self, panel)
    this.isInit = false
    this.rc = panel:GetComponent("ReferenceCollector")
    this.ConstellationLightPanel = this.rc:GetObject("ConstellationLightPanel").transform
    this.IntensButton = this.rc:GetObject("IntensButton")
    this.CardItem = this.rc:GetObject("CardItem").transform
    this.HeartItem = this.rc:GetObject("HeartItem").transform
    this.canvas = this.rc:GetObject("Canvas"):GetComponent("Canvas")
    this.canvas.gameObject:SetActive(true)
    this.canvas.transform.localPosition = panel.transform.localPosition
    this.infoPanle = this.canvas.transform:Find("Bg")
    this.holyGrail = tonumber(Z_Misc["HOLY_GRAIL"].Value[1]) 
    this.InfoBtn = this.rc:GetObject("InfoBtn")
    this.descriptionRoot = this.rc:GetObject("DescriptionRoot").transform
    this.maxStatus = this.rc:GetObject("MaxStatus")

    this.lightList = {}

    this.canvas.enabled = false

    UIUtil.AddBtnEventNoBug(this.IntensButton, function(go)
        if this.isInit then
            OnIntensButtonClick(self)
        end
    end)

    this.CharacterConstellationBtn = this.CardItem:Find("Card")
    UIUtil.AddBtnEventNoBug(this.CharacterConstellationBtn, function(go)
        this.CardItem:Find("SelectImage").gameObject:SetActive(true)
        this.HeartItem:Find("SelectImage").gameObject:SetActive(false)
        this.constellationId = this.CharacterConstellationId
        UIPublic.InitButton(this.IntensButton,
            UIPublic.GetItemAmount(this.constellationId) >= 
            tonumber(Z_Misc["CHARACTER_CONSTELLATION_FRAG_COST"].Value[Z_Character[self.cur_card.TemplateId].Rarity])
        )
    end)

    this.CommonConstellationBtn = this.HeartItem:Find("Card")
    UIUtil.AddBtnEventNoBug(this.CommonConstellationBtn, function(go)
        this.CardItem:Find("SelectImage").gameObject:SetActive(false)
        this.HeartItem:Find("SelectImage").gameObject:SetActive(true)
        this.constellationId = this.holyGrail
        UIPublic.InitButton(this.IntensButton,
            UIPublic.GetItemAmount( Z_Misc["HOLY_GRAIL"].Value[1]) >= 
            tonumber(Z_Misc["CHARACTER_CONSTELLATION_COST"].Value[Z_Character[self.cur_card.TemplateId].Rarity])
        )
    end)


    UIUtil.AddBtnEventNoBug(this.InfoBtn,function()
        self.ActiveInfoDetail:SetActive(true)
    end)
end

function this.OnDisable(self)
    infoEventClick()
    this.isInit = nil
    for _, v in pairs(this.lightList) do
        if v.effectRoot.childCount > 0 then
            ListChildPool:GetInstance():Remove(v.effectRoot:GetChild(0).gameObject)
        end
    end

end

return this