---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/15 13:43
---

local UICardIntensModel = BaseClass("UICardIntensModel",UIBaseModel)
local base = UIBaseModel
local this = UICardIntensModel


function this.OnCreate(self)
    base.OnCreate(self)
    self.parent = nil
end

function this.OnEnable(self,data)
    if data~= nil and  data.parent ~= nil then
        self.parent = data.parent
    else
        self.parent = nil
    end
    base.OnEnable(self)
    self:OnRefresh(data)
end

function this.OnRefresh(self,data)
    if data == nil then
        return
    end
    self.cur_panel_id = data.cur_panel_id
    self.cur_card =  data.cur_card
    self.characterList = data.characterList

    for index, characterInfo in ipairs(self.characterList) do
        if characterInfo.Id == self.cur_card.Id then
            self.index = index
        end
    end

    local isOnCidList = {}
    for index, value in ipairs(self.characterList) do
        table.insert(isOnCidList,value.Id)
    end
    self.isOnCidList = isOnCidList

    --if self.cur_panel_id == nil then
    --    error("角色强化:缺少界面Id")
    --end
--
    --if self.cur_card == nil then
    --    error("角色强化:缺少Card数据")
    --end

end

function this.PreCard(self)
    if self.index == 1 then
        return
    end
    self.index = self.index - 1
    self.cur_card = Game.Scene.Player:GetComponent("CardComponent"):Get(self.characterList[self.index].Id)
    
    local info = {
        cardId = self.cur_card.Id,
        CardInfoChgType = CardInfoChgType.Select,
    }
    self:UIBroadcast(UIMessageNames.ON_CARD_INFO_CHG,info)
end

function this.NextCard(self)
    if self.index == #self.characterList then
        return
    end
    self.index = self.index + 1
    self.cur_card = Game.Scene.Player:GetComponent("CardComponent"):Get(self.characterList[self.index].Id)

    local info = {
        cardId = self.cur_card.Id,
        CardInfoChgType = CardInfoChgType.Select,
    }
    self:UIBroadcast(UIMessageNames.ON_CARD_INFO_CHG,info)
end

local function OnCardInfoChg(self,info)
    self:UIBroadcast(UIMessageNames.ON_CARD_INFO_CHG,info)
end

local function OnSkinInfoChg(self,info)
    self:UIBroadcast(UIMessageNames.ON_SKIN_INFO_CHG,info)
end

--local function ON_Guide_Click(self,cid,num,isrun,minStep)
--    self:UIBroadcast(UIMessageNames.ON_Guide_Click,cid,num,isrun,minStep)
--end

local function characterPackUpdatePush(self, info)
    self.cur_card = Game.Scene.Player:GetComponent("CardComponent"):Get(self.characterList[self.index].Id)
    self:UIBroadcast(UIMessageNames.ON_CHARACTER_UPDATE_PUSH)
end

local function OnItemInfoChange(self, info)
    self:UIBroadcast(UIMessageNames.ON_ITEM_INFO_CHG,info)
end

local function OnEquipInfoChange(self, info)
    self.cur_card = Game.Scene.Player:GetComponent("CardComponent"):Get(self.characterList[self.index].Id)
    self:UIBroadcast(UIMessageNames.ON_CHARACTER_UPDATE_PUSH)
end

function this.OnAddListener(self)
    base.OnAddListener(self)
    self:AddDataListener(DataMessageNames.ON_CARD_INFO_CHG,OnCardInfoChg)
    self:AddDataListener(DataMessageNames.ON_SKIN_INFO_CHG,OnSkinInfoChg)
    self:AddDataListener(DataMessageNames.ON_CHARACTER_UPDATE_PUSH,characterPackUpdatePush)
    self:AddDataListener(DataMessageNames.ON_ITEM_DATA_UPDATE,OnItemInfoChange)
    self:AddDataListener(DataMessageNames.ON_EQUIP_UPDATE,OnEquipInfoChange)
    --self:AddDataListener(DataMessageNames.ON_Guide_Click,ON_Guide_Click)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveDataListener(DataMessageNames.ON_CARD_INFO_CHG)
    self:RemoveDataListener(DataMessageNames.ON_SKIN_INFO_CHG)
    self:RemoveDataListener(DataMessageNames.ON_CHARACTER_UPDATE_PUSH,characterPackUpdatePush)
    self:RemoveDataListener(DataMessageNames.ON_ITEM_DATA_UPDATE,OnItemInfoChange)
    self:RemoveDataListener(DataMessageNames.ON_EQUIP_UPDATE,OnEquipInfoChange)
    --self:RemoveDataListener(DataMessageNames.ON_Guide_Click)
end

function this.OnDisable(self)
    base.OnDisable(self)
    
end

function this.OnDestroy(self)
    base.OnDestroy(self)
end


return this