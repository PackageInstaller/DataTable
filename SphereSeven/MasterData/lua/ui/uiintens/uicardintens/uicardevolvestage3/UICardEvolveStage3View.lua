---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UICardEvolveStage3View = BaseClass("UICardEvolveStage3View",UIBaseView);
local base = UIBaseView
local this = UICardEvolveStage3View

local abiliTypes = {"万能.png","攻击.png","魔法.png","防御.png","支援.png"} -- ignoreCN


local function PlaySkillAnim(self)
    local transform = self.skillInfo
    local rect = transform:GetComponent("RectTransform")
    local skillIcon1 = transform:Find("Skill/SkillIcon/SkillIcon1"):GetComponent("Image")
    local lock =  transform:Find("Skill/SkillIcon/Lock"):GetComponent("Image")
  --  local up = transform:Find("Skill/SkillIcon/Up"):GetComponent("Image")
    local x = rect.localPosition.x
    rect:DOLocalMoveX(x - 2000,0.3)
    UIPublic.FadeAllChild(transform,1,0.4)
    
    coroutine.waitforseconds(1)
  --  up:DOFade(0,0)
  --  up.gameObject:SetActive(true)

    self.descText.text = "<color=#fff2aa>" .. self.descText.text .. "</color>"
    self.SkillActiveImage:SetActive(true)

    skillIcon1:DOFade(0,0.5)
    lock:DOFade(0,0.5)
  --  up:DOFade(1,0.5)
end


local function InitSkillInfo(self)
    local card = self.nextCard
    local transform = self.skillInfo
    UIPublic.FadeAllChild(transform,0.005,0)
    local nameTxt = transform:Find("Size/Name"):GetComponent("Text")
    local cdTxt = transform:Find("CD/Value"):GetComponent("Text")
    local npTxt = transform:Find("NP/Value"):GetComponent("Text")
    local kindTxt = transform:Find("Skill/SkillKind/Value"):GetComponent("Text")
    local skillIcon = transform:Find("Skill/SkillIcon"):GetComponent("Image")
    local skillIcon1 = transform:Find("Skill/SkillIcon/SkillIcon1"):GetComponent("Image")
    local lock =  transform:Find("Skill/SkillIcon/Lock").gameObject
    local up = transform:Find("Skill/SkillIcon/Up").gameObject
    local rect = transform:GetComponent("RectTransform")
    local x = rect.localPosition.x
    rect:DOLocalMoveX(x + 2000,0)
    lock:SetActive(true)
    up:SetActive(false)

    local zCard = Z_Card[card.TemplateId]
    local zSkill
    
    if self.nextCard.Star == 3 then
        zSkill = Z_Skill[zCard.Skill2]
        kindTxt.text = LangUtil.GetSysLang(611)--"技能2"
        local desDatas = loadtable(zSkill.SkillDesc)
        self.descText.text = LangUtil.GetSysLang(151)..":".. desDatas[1] --高阶
        self.SkillActiveImage:SetActive(false)
    elseif self.nextCard.Star == 5 then
        zSkill = Z_Skill[zCard.Skill3]
        kindTxt.text = LangUtil.GetSysLang(144)--"觉醒"
        local desDatas = loadtable(zSkill.SkillDesc)
        self.descText.text = LangUtil.GetSysLang(152)..":".. desDatas[1] --觉醒
        self.SkillActiveImage:SetActive(false)
    else
        error("--UICardEvolveStage3View:数据错误")
    end
    
    
    
    cdTxt.text = zSkill.CooldownTurn..LangUtil.GetSysLang(72)-- LangUtil.GetSysLang(71)..
    nameTxt.text = zSkill.Name
    UIUtil.ScrollText(nameTxt)
    UIUtil.SetSprite(skillIcon,AtlasConfig.SkillIcon,zSkill.SkillIcon)
    UIUtil.SetSprite(skillIcon1,AtlasConfig.SkillIcon,zSkill.SkillIcon)
    
end


local function IniCardInfo(self,card,transform,transformValue)
    local zCard = Z_Card[card.TemplateId]
    local star = transform:Find("Star")
    local name = transform:Find("Name/Value"):GetComponent("Text")
    local atkDistance = transform:Find("AtkDistance")
    local mainProp = transform:Find("MainProp")
    local subProp = transform:Find("SubProp")
    local cardFrom = transform:Find("CardFrom"):GetComponent("Image")
    local cardType = transform:Find("CardType"):GetComponent("Image")
    local rareFrame = transform:Find("RareFrame"):GetComponent("Image")
    local skinId = card.SkinId
    if card.Star < 3  then
        skinId = 1
    elseif card.Star >= 3 and card.Star < 5 then
        skinId = 2
    elseif card.Star >= 5 then
        skinId = 3
    end
    name.text = zCard.Name
    UIPublic.InitStar(star,card) --星级
    UIPublic.InitAtkDistance(atkDistance,zCard.AtkType) --攻击距离
    UIPublic.InitMainProp(mainProp,zCard.MainProp)  --主属性
    UIPublic.InitSubProp(subProp,zCard.SubProp) --副属性

    UIUtil.SetSprite(cardFrom,AtlasConfig.CardFrom,zCard.Sphere..".png")
    rareFrame.sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/RareFrame/"..UIPublic.RareNames[zCard.Rare]..".png")
    
    UIUtil.SetCardSprite(transformValue:GetComponent("Image"),zCard.Id,skinId,CardPictureType.Big)
    UIUtil.SetSprite(cardType,AtlasConfig.CardType,abiliTypes[zCard.AbiliType])
   
    return coroutine.yieldbreak(1)
end

local function InitLimitInfo(self)
    local transform = self.limitInfo
    local txt1 = transform:Find("Txt1"):GetComponent("Text")
    local txt2 = transform:Find("Txt2"):GetComponent("Text")
    
    txt1.text = "Lv."..self.card.LevelLimit
    txt2.text = "Lv."..self.nextCard.LevelLimit
  
end

function this.OnLangCreate(self)
    local skillInfo = self.langRc:GetObject("SkillInfo").transform
    local limitInfo = self.langRc:GetObject("LimitInfo").transform
    
    table.csenuObject(skillInfo,function(transform)
        if not IsNull(transform:GetComponent("Text")) then
            LangUtil.BindText(transform)
        end
    end)
    LangUtil.BindText(limitInfo:Find("Txt")).text = LangUtil.GetSysLang(227)
    LangUtil.BindText(limitInfo:Find("Txt1"),FontType.All_Number)
    LangUtil.BindText(limitInfo:Find("Txt2"),FontType.All_Number)
end


function this.OnCreate(self)
    base.OnCreate(self);
    self.cardInfo = self.rc:GetObject("CardInfo").transform
    self.limitInfo= self.rc:GetObject("LimitInfo").transform
    self.nextCardInfo = self.rc:GetObject("NextCardInfo").transform
    self.paint = self.rc:GetObject("Paint"):GetComponent("Image")
    self.nextPaint = self.rc:GetObject("NextPaint"):GetComponent("Image")
    self.mask = self.rc:GetObject("Mask"):GetComponent("Image")
    self.skillInfo = self.rc:GetObject("SkillInfo").transform
    local skillIcon1 =  self.skillInfo:Find("Skill/SkillIcon/SkillIcon1"):GetComponent("Image")
    self.descText = self.rc:GetObject("DescText"):GetComponent("Text")
    self.SkillActiveImage = self.rc:GetObject("SkillActiveImage")
    self.NextCardInfoValue = self.rc:GetObject("NextCardInfoValue").transform
    self.cardInfoValue = self.rc:GetObject("CardInfoValue").transform
    self.MaskNextCardInfo = self.rc:GetObject("MaskCard").transform
    self.MaskCardInfo = self.rc:GetObject("MaskCardInfo").transform

    skillIcon1.material = DeActiveMat

    self.uiDrawing = UIDrawing.New(self.paint.parent, self.paint)
    self.uiDrawingNext = UIDrawing.New(self.nextPaint.parent, self.nextPaint)
    self.uiDrawing:OffsetSetting("LevelUpOffset")
    self.uiDrawingNext:OffsetSetting("LevelUpOffset")
end

function this.OnEnable(self)
    base.OnEnable(self)
    local info  =self.model.info
    self.nextCard = info.card
    self.card = UIPublic.GetNewCard( self.nextCard,{SkinId = self.nextCard.Stage - 1,
    LevelLimit = self.nextCard.LevelLimit - 20,Star =  self.nextCard.Star -1 })
    self:OnRefresh()
end


function this.OnRefresh(self)
    UIPublic.FadeAllChild(self.nextCardInfo,0,0)
    UIPublic.FadeAllChild(self.cardInfo,0,0)
    UIPublic.FadeAllChild(self.MaskCardInfo,0,0)
    UIPublic.FadeAllChild(self.MaskNextCardInfo,0,0)
    self.limitInfo:DOScale(Vector2.New(1,0.5),0)
    self.cardInfo:DOScale(Vector2.New(0.6,0.6),0)
    self.MaskCardInfo:DOScale(Vector2.New(0.6,0.6),0)
    local rectTra = self.paint.transform.parent:GetComponent("RectTransform")
    local posX = rectTra.localPosition.x
    rectTra:DOLocalMoveX(posX-2000,0)
    self.mask.gameObject:SetActive(true)
    self.mask:DOFade(1,0)
    InitSkillInfo(self)
    coroutine.yieldstart(function() IniCardInfo(self,self.nextCard, self.nextCardInfo,self.NextCardInfoValue) end)
    coroutine.yieldstart(function() IniCardInfo(self,self.card,self.cardInfo,self.cardInfoValue) end)
    --IniCardInfo(self,self.nextCard, self.nextCardInfo,self.NextCardInfoValue)
    --IniCardInfo(self,self.card,self.cardInfo,self.cardInfoValue)
    InitLimitInfo(self)
    self.uiDrawing:CoPlayImage(self.card.TemplateId, self.card.SkinId)
    self.uiDrawingNext:CoPlayImage(self.card.TemplateId, self.nextCard.SkinId)
    --UIPublic.SetCardOriginal(self.card.TemplateId,self.paint,self.card.SkinId,1)
    --UIPublic.SetCardOriginal(self.card.TemplateId,self.nextPaint,self.nextCard.SkinId,1)
    self.mask:DOFade(0,0.2)
    self.mask.gameObject:SetActive(false)
    self.limitInfo:DOScale(Vector2.New(1,1),0.3)
    UIPublic.FadeAllChild(self.nextPaint,0 ,0)
    UIPublic.FadeAllChild(self.paint,1 ,0)
    coroutine.waitforseconds(0.6)
    rectTra:DOLocalMoveX(posX,0.3)  --移动立绘
    coroutine.waitforseconds(0.2)
    UIPublic.FadeAllChild(self.cardInfo,1,0.3) --显示原始角色
    UIPublic.FadeAllChild(self.MaskCardInfo,1,0.3) --显示原始角色
    coroutine.waitforseconds(0.6)
    self.cardInfo:DOScale(Vector2.New(0.8,0.8),0.3) --放大原始角色
    self.MaskCardInfo:DOScale(Vector2.New(0.8,0.8),0.3) --放大原始角色
    coroutine.waitforseconds(0.3)
    UIPublic.FadeAllChild(self.cardInfo,0,0) --关闭原始角色
    UIPublic.FadeAllChild(self.MaskCardInfo,0,0) --关闭原始角色
    coroutine.waitforseconds(0.06)
    UIPublic.FadeAllChild(self.nextCardInfo,1,0.3) --显示现在角色
    UIPublic.FadeAllChild(self.MaskNextCardInfo,1,0.3) --显示现在角色
    coroutine.waitforseconds(0.2)
    --self.paint:DOFade(0,0.3)  --隐藏原始立绘
    UIPublic.FadeAllChild(self.paint,0 ,0.3)
    coroutine.waitforseconds(0.2)
    --self.nextPaint:DOFade(1,0.3) --显示现在立绘
    UIPublic.FadeAllChild(self.nextPaint,1 ,0.3)
    coroutine.waitforseconds(0.2)
    PlaySkillAnim(self)
    coroutine.waitforseconds(1)
    UIUtil.OpenSkipHint(function()UIManager:GetInstance():CloseWindow(UIWindowNames.UICardEvolveStage3)end)
    Game.Scene:GetComponent("SoundComponent"):PlayEvolutionSound(self.card)
end


function this.OnAddListener(self)
    base.OnAddListener(self)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
end

function this.OnDisable(self)
    base.OnDisable(self);
    Game.Scene:GetComponent("SoundComponent"):Stop()
    Game.Scene:GetComponent("GuideComponent"):AutoGuide()
    self.uiDrawing:Disable()
    self.uiDrawingNext:Disable()
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this;

