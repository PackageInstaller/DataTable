---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---
---@class UIShowFightSoulPropView
---@field fightSoul FightSoul
---@field model UIShowFightSoulPropModel
---@field ctrl UIShowFightSoulPropCtrl
local UIShowFightSoulPropView = BaseClass("UIShowFightSoulPropView",UIBaseView);
local base = UIBaseView
local this = UIShowFightSoulPropView

local FIGHT_SOUL_MERGE_COUNT_LIMIT = tonumber(Z_Misc["FIGHT_SOUL_MERGE_COUNT_LIMIT"].Value[1])
---@param self UIShowFightSoulPropView
local function RefreshButtonStatus(self)
    UIPublic.InitButton(self.mergeButton, self.fightSoul.Star < FIGHT_SOUL_MERGE_COUNT_LIMIT)
    UIPublic.InitButton(self.expStrengthenButton, self.fightSoul.level < self.fightSoul.maxLevel)
    UIPublic.InitButton(self.decomposeButton, not self.fightSoul.Lock)
end

---@param self UIShowFightSoulPropView
local function OnMerge(self)
    if self.model.callBack ~= nil then
        self.model.callBack()
    end
    UIManager:GetInstance():CloseWindow(UIWindowNames.UIShowFightSoulProp)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFightSoulMerge, {
        fightSoulId = self.fightSoul.Id,
        callback = function()
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIShowFightSoulProp,{fightSoul = self.fightSoul})
        end,
    })
end

---@param self UIShowFightSoulPropView
local function OnExpStrengthen(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFightSoulLevelUp, {
        fightSoulId = self.fightSoul.Id,
        callback = function()
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIShowFightSoulProp,{fightSoul = self.fightSoul})
        end,
    })
    self.ctrl.CloseSelf()
end

---@param self UIShowFightSoulPropView
local function OnDecompose(self)
    if self.fightSoul.Lock then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(2037)) -- 该战魂已被锁定
        return
    end

    ---@type ToolTipGetItemData
    local uiData = {}
    uiData.itemText = LangUtil.GetSysLang(252) -- 分解可获得
    local itemId = tonumber(Z_Misc["FIGHT_SOUL_DECOMPOSE_SHOW_ITEM_ID"].Value[1])

    local itemCount = 0
    local rewardId = Z_FightSoulDecompose[self.fightSoul.config.Rare].RewardId
    local rewardList = Z_Reward[rewardId]
    for _, v in ipairs(rewardList) do
        if v.ObjId == itemId then
            itemCount = v.Count * self.fightSoul.Star
        end
    end
    uiData.items = {{id = itemId, count = itemCount}}

    uiData.bottomText = LangUtil.GetSysLang(787) -- 确定要进行战魂归魂吗
    uiData.callBack = function()
        self.ctrl:SendDecomposeRequest(self.fightSoul.Id)
    end

    UIManager:GetInstance():OpenWindow(UIWindowNames.ToolTipGetItem, uiData)
end

---@param self UIShowFightSoulPropView
local function InitFightSoulProp(self)
    UIPublic.InitFightSoulFace(self.fightSoul, self.FightSoulFace)
end

function this.OnLangCreate(self)
    LangUtil.BindText(self.langRc:GetObject("nameTxt"))
    LangUtil.BindText(self.langRc:GetObject("MergeButtonText")).text = LangUtil.GetSysLang(260)
    LangUtil.BindText(self.langRc:GetObject("ExpStrengthenButtonText")).text = LangUtil.GetSysLang(84)
    LangUtil.BindText(self.langRc:GetObject("DecomposeButtonText")).text = LangUtil.GetSysLang(3114)
end

---@param self UIShowFightSoulPropView
function this.OnCreate(self)
    base.OnCreate(self)
    local eventBg = self.rc:GetObject("EventBg")
    self.mergeButton = self.rc:GetObject("MergeButton")
    self.expStrengthenButton = self.rc:GetObject("ExpStrengthenButton")
    self.decomposeButton = self.rc:GetObject("DecomposeButton")
    
    

    UIUtil.AddBtnEvent(self.mergeButton,function() OnMerge(self)  end)
    UIUtil.AddBtnEvent(self.expStrengthenButton,function() OnExpStrengthen(self) end)
    UIUtil.AddBtnEvent(self.decomposeButton,function() OnDecompose(self) end)
    EventTriggerListener.Get(eventBg).onLuaClick = function()
        UIManager:GetInstance():CloseWindow(UIWindowNames.UIShowFightSoulProp)
    end

    self.FightSoulFace = self.rc:GetObject("FightSoulFace").transform
    self.FightSoulInfo = self.rc:GetObject("FightSoulInfo").transform
end

function this.OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh()
end

---@param self UIShowFightSoulPropView
function this.OnRefresh(self)
    self.fightSoul = self.model.fightSoul
    InitFightSoulProp(self)
    UIPublic.InitFightSoulInfo(self.fightSoul, self.FightSoulInfo)
    RefreshButtonStatus(self)
end

local function OnFightSoulDataUpdate(self)
    this.OnRefresh(self)
end

function this.OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(UIMessageNames.ON_FIGHTSOUL_DATA_UPDATE, OnFightSoulDataUpdate)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(UIMessageNames.ON_FIGHTSOUL_DATA_UPDATE)
end

function this.OnDisable(self)
    base.OnDisable(self)
end

function this.OnDestroy(self)
    base.OnDestroy(self)
end

return this;

