---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UIFightSoulListView = BaseClass("UIFightSoulListView",UIBaseView);
local base = UIBaseView
local this = UIFightSoulListView
local recordOrder = {order = 1,kind = 1}  --是否正序  顺序类型
local screenTypes = {
    --- 职业
    abiliType = 0,
    --- 星级
    star = 0,
    --- 稀有度
    rare = 0,
    --- 是否装备
    isEquip = 0
}
local pfbName = "FightVisitItemMid"

local function OnScreen(self)
    local uiData = {}
    uiData.recordOrder = recordOrder
    uiData.screenTypes = screenTypes
    uiData.callBack = function(list,kind)
        screenTypes = table.clone(list)
        recordOrder.kind = kind
        this.InitFightSoulList(self)
    end

    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFightSoulSort,uiData)
end


local function InitSortButton(self)
    local txt = self.sortBtn.transform:Find("Text"):GetComponent("Text")
    txt.text = (recordOrder.order == 1 and {LangUtil.GetSysLang(154)} or {LangUtil.GetSysLang(153)})[1]
end


local function OnSort(self)
    recordOrder.order = (recordOrder.order == 1 and {2}or {1})[1]
    InitSortButton(self)
    this.InitFightSoulList(self)
end


function this.InitFightSoulList(self)
    self.list = {}
    for k,v in table.pairsByKeys(self.fightSouls) do
        table.insert(self.list,v)
    end
    self.list = UIPublic.FightSoulScreenFunc(self.list,screenTypes)
    table.sort(self.list, function(a,b) return UIPublic.FightSoulSortFunc(a,b,recordOrder)end )

    if recordOrder.order ~= 1 then
        self.list = table.reverseTable(self.list)
    end
    self.hint:SetActive(table.count(self.list) == 0)
    self.scroll:RefreshData(self.list)
end



function this.OnLangCreate(self)
    LangUtil.BindText(self.langRc:GetObject("HoldNumValue").transform,FontType.All_Number)
    LangUtil.BindText(self.langRc:GetObject("HoldNumText").transform).text = LangUtil.GetSysLang(312)
    LangUtil.BindText(self.langRc:GetObject("ScreenText").transform).text = LangUtil.GetSysLang(155)
    LangUtil.BindText(self.langRc:GetObject("SortText").transform)
    LangUtil.BindText(self.langRc:GetObject("BackText").transform).text = LangUtil.GetSysLang(256)
    LangUtil.BindText(self.FuseButton.transform:Find("Text")).text = LangUtil.GetSysLang(253)
    LangUtil.BindText(self.effDesc)
    LangUtil.BindText(self.propDesc)
    UIPublic.InitButton(self.FuseButton,false,1,LangUtil.GetSysLang(253))
    LangUtil.BindText(self.langRc:GetObject("Text1")).text= LangUtil.GetSysLang(804)
    LangUtil.BindText(self.langRc:GetObject("Text2")).text= LangUtil.GetSysLang(167)
    LangUtil.BindText(self.langRc:GetObject("Text3")).text= LangUtil.GetSysLang(805)
    LangUtil.BindText(self.langRc:GetObject("Text4")).text= LangUtil.GetSysLang(806)
end

function this.OnClickGO(self,fightSoul)
    UIPublic.InitFightSoulEff(self.effDesc,Z_FightSoul[fightSoul.TemplateId])
    UIPublic.InitFightSoulProp(self.propDesc,fightSoul)
    --UIPublic.InitEquipLock(self.lock,self.fightSoul.Lock == 1)
    UIPublic.InitFightSoulHolder(self.holderAvatar,fightSoul)
    self.holderAvatar1.transform.parent.gameObject:SetActive(true)
    self.holderAvatar1.gameObject:SetActive(true)
    local ZCard = Z_Card[self.cur_card.TemplateId]
    UIUtil.SetCardSprite(self.holderAvatar1,ZCard.Id,self.cur_card.SkinId,CardPictureType.Little)
    for i=0, self.starRoot.childCount-1 do
        self.starRoot:GetChild(i).gameObject:SetActive(i<=fightSoul.Star - 1)
    end
    self.ChooseFightSoulId = fightSoul.Id
    --local holder = UIPublic.GetFightSoulHolder(fightSoul)
    --if holder == nil then
    --    self.holderAvatar.transform.parent.gameObject:SetActive(true)
    --    self.holderAvatar.gameObject:SetActive(false)
    --else
    --    self.holderAvatar.transform.parent.gameObject:SetActive(true)
    --    self.holderAvatar.gameObject:SetActive(true)
    --end
end

function this.OnCreate(self)
    base.OnCreate(self)
    self.list = {}
    self.scroll = VerticalScroll.New()
    self.scroll:SetUpdateCount(3)
    
    local backBtn = self.rc:GetObject("ReturnButton")
    self.hint = self.rc:GetObject("Hint")
    self.sortBtn = self.rc:GetObject("SortButton")
    self.screenBtn = self.rc:GetObject("ScreenButton")
    self.content = self.rc:GetObject("Content").transform
    self.holdNumTxt = self.rc:GetObject("HoldNum"):GetComponent("Text")
    self.scrollView = self.rc:GetObject("Scroll View")

    self.effDesc = self.rc:GetObject("EffDesc"):GetComponent("Text")
    self.propDesc = self.rc:GetObject("PropDesc"):GetComponent("Text")
    self.holderAvatar = self.rc:GetObject("Avatar"):GetComponent("Image")
    self.holderAvatar1 = self.rc:GetObject("Avatar1"):GetComponent("Image")
    self.starRoot = self.rc:GetObject("StarRoot").transform
    self.FuseButton = self.rc:GetObject("FuseButton")
    UIUtil.AddBtnEvent(backBtn,function()UIManager:GetInstance():CloseWindow(UIWindowNames.UIFightSoulList)  end)
    UIUtil.AddBtnEvent(self.sortBtn,function()OnSort(self) end)
    UIUtil.AddBtnEvent(self.screenBtn,function()OnScreen(self)  end)
    self.scroll:Clear()
    self.scroll:ScrollInit(self.list, self.scrollView, pfbName, function (arg)
        local gameObject = arg.go
        local fightSoul = arg.data
        
        --LangUtil.BindText(gameObject.transform:Find("IsEquip/Text"))
        --local holder = UIPublic.GetFightSoulHolder(fightSoul)
        --local IsEquipIds = Game.Scene.Player:GetComponent("FightSoulComponent"):OnEquipFightSoulId1()
        --isEquip:SetActive( table.any(IsEquipIds,function(h) return h.Id == fightSoul.Id  end) )
        local holderAvatar = gameObject.transform:Find("Holder/Avatar"):GetComponent("Image")
        local select = gameObject.transform:Find("Select")
        UIPublic.InitFightSoulHolder(holderAvatar,fightSoul,nil,true)
        UIPublic.InitVsFightSoulItemMId(fightSoul,gameObject.transform)
        LangUtil.GetSpriteLang(52, function(sprite) select:GetComponent("Image").sprite = sprite end)
        UIUtil.AddBtnEvent(gameObject,function()
            UIPublic.InitButton(self.FuseButton,true,1,LangUtil.GetSysLang(253))
            this.OnClickGO(self,fightSoul)
            for i = 0, self.content.childCount-1 do
                if self.content:GetChild(i).gameObject == gameObject then
                    self.content:GetChild(i).transform:Find("Select").gameObject:SetActive(true)
                else
                    self.content:GetChild(i).transform:Find("Select").gameObject:SetActive(false)
                end
            end
        end)
    end)
    UIUtil.AddBtnEvent(self.FuseButton,function()
        if self.ChooseFightSoulId == 0 then
            return
        end
        if self.callBack ~= nil then
            self.callBack(self.ChooseFightSoulId)
        end
    end)
end

function this.OnEnable(self)
    base.OnEnable(self)
    self.fightSouls = self.model.fightSouls
    self.cur_card = self.model.cur_card
    self.callBack = self.model.callBack
    self:OnRefresh()
end



function this.OnRefresh(self)
    self.effDesc.text =""
    self.propDesc.text =""
    for i=0, self.starRoot.childCount-1 do
        self.starRoot:GetChild(i).gameObject:SetActive(false)
    end
    self.ChooseFightSoulId = 0
    self.holderAvatar1.transform.parent.gameObject:SetActive(false)
    self.holderAvatar.transform.gameObject:SetActive(false)
    if self.fightSouls == nil then
        self.fightSouls = Game.Scene.Player:GetComponent("FightSoulComponent").FightSouls
    end
    self.holdNumTxt.text = table.count(self.fightSouls).."/"..Game.Scene.Player.FightSoulsMax
    this.InitFightSoulList(self)
    InitSortButton(self)
end

function this.ResetOrder(self)--关闭战魂强化时重置
    screenTypes = {star = 0, rare = 0, isEquip = 0}
    recordOrder.order = 1
end

local function  OnFightSoulChg(self)
    this.InitFightSoulList(self)
end


function this.OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(UIMessageNames.ON_FIGHTSOUL_INFO_CHG,OnFightSoulChg);
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
    self:RemoveUIListener(UIMessageNames.ON_FIGHTSOUL_INFO_CHG);
end

function this.OnDisable(self)
    base.OnDisable(self)
end

function this.OnDestroy(self)
    base.OnDestroy(self);
    self.scroll:Dispose()
end

return this;

