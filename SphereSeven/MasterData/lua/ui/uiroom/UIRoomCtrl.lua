---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UIRoomCtrl = BaseClass("UIRoomCtrl",UIBaseCtrl);
local this = UIRoomCtrl


function this.CloseSelf(self)
   UIManager:GetInstance():CloseWindow(UIWindowNames.UIRoom);
end

function this.SendRestRequest(self)
   coroutine.start(function()
      local g2cRoomRes = coroutine.yieldstart(Game.Scene.Session.CoCall, nil,Game.Scene.Session,
      PROTOCOL.HouseRestReq, {})

      ---@type HintComponent
      local hintComponent = Game.Scene:GetComponent("HintComponent")
      hintComponent.Room:SetCount(0)

      ClientData:GetInstance().isSleepWithMainWife = 0
      PlayerPrefs.SetInt("isSleepWithMainWife", 0)
      Game.Scene.Player.LastRoomRestTime = g2cRoomRes.last_rest_time
      Game.Scene:GetComponent("SoundComponent"):Stop()
      Game.Scene:GetComponent("SessionComponent"):ActiveLoad("", LoadMode.Mask, "UIRoom")
      UIManager:GetInstance():OpenWindow(UIWindowNames.UITransition, {time = 2.5, mode = 1})
      coroutine.waitforseconds(2)
      Game.Scene.Player:GetComponent("RoomComponent"):StartRest()
      coroutine.waitforseconds(2)
      Game.Scene:GetComponent("SoundComponent"):Stop()
      Game.Scene:GetComponent("SessionComponent"):DeActiveLoad(LoadMode.Mask, "UIRoom")

      -- local g2cRoomRes = coroutine.yieldstart(Game.Scene.Session.CoCall, nil,Game.Scene.Session,
      --         OuterOpcode.Name2Code.ETModel_C2M_RoomRest, {});
      -- if g2cRoomRes.Error == ErrorCode.ERR_Success then
      --       Game.Scene.Player.LastRoomRestTime = g2cRoomRes.LastRoomRestTime
      --       Game.Scene:GetComponent("SoundComponent"):Stop()
      --       Game.Scene:GetComponent("SessionComponent"):ActiveLoad("", LoadMode.Mask)
      --       UIManager:GetInstance():OpenWindow(UIWindowNames.UITransition, {time = 2.5, mode = 1})
      --       coroutine.waitforseconds(2)
      --       Game.Scene.Player:GetComponent("RoomComponent"):StartRest()
      --       coroutine.waitforseconds(2)
      --       Game.Scene:GetComponent("SoundComponent"):Stop()
      --       Game.Scene:GetComponent("SessionComponent"):DeActiveLoad(LoadMode.Mask)
      -- else
      --    UIUtil.ToolTipFourth(LangUtil.GetServerError(g2cRoomRes.Error))
      -- end
   end)
end

function this.SendSleepRequest(self, uiDrawing)
   coroutine.start(function()
      local soundComponent = Game.Scene:GetComponent("SoundComponent")
      soundComponent:Stop()
      local card = Game.Scene.Player:GetComponent("CardComponent"):Get(Game.Scene.Player.MainWife)
      if card == nil then return end
      local resPath = Game.Scene:GetComponent("SoundComponent"):GetCardSoundPath(SoundType.Rest, card)
      if string.IsNullOrEmpty(resPath) then return end
      local asset = ResourcesManager:GetInstance():CoLoadAsync(resPath, typeof(AudioClip))
      local length1 = asset.length
      resPath = Game.Scene:GetComponent("SoundComponent"):GetCardSoundPath(SoundType.AfterRest, card)
      if string.IsNullOrEmpty(resPath) then return end
      asset = ResourcesManager:GetInstance():CoLoadAsync(resPath, typeof(AudioClip))
      local length2 = asset.length
      
      local g2cRoomMal = coroutine.yieldstart(Game.Scene.Session.CoCall, nil,Game.Scene.Session,
         PROTOCOL.HouseSleepReq, {})

      ---@type HintComponent
      local hintComponent = Game.Scene:GetComponent("HintComponent")
      hintComponent.Room:SetCount(0)

      ClientData:GetInstance().isSleepWithMainWife = 1
      PlayerPrefs.SetInt("IsSleepWithMainWife", 1)

      Game.Scene:GetComponent("SessionComponent"):ActiveLoad("", LoadMode.Mask, "UIRoom")
      Game.Scene.Player.LastRoomRestTime = g2cRoomMal.last_rest_time
      uiDrawing:CoPlayForce(SoundType.Rest)
      coroutine.waitforseconds(length1 + 0.5)
      UIManager:GetInstance():OpenWindow(UIWindowNames.UITransition, {time = 2.5, mode = 1})
      coroutine.waitforseconds(1)
      Game.Scene.Player:GetComponent("RoomComponent"):StartSleep()
      coroutine.waitforseconds(1)
      soundComponent:Stop()
      uiDrawing:CoPlayForce(SoundType.AfterRest)
      coroutine.waitforseconds(length2 + 0.5)
      Game.Scene:GetComponent("SessionComponent"):DeActiveLoad(LoadMode.Mask, "UIRoom")

      if g2cRoomMal.reward_results ~= nil then
         UIPublic.OpenRewardUI(g2cRoomMal.reward_results)
      end

      -- local g2cRoomMal = coroutine.yieldstart(Game.Scene.Session.CoCall, nil,Game.Scene.Session,
      --         OuterOpcode.Name2Code.ETModel_C2M_RoomMal, {});
      -- if g2cRoomMal.Error == ErrorCode.ERR_Success then

      --    Game.Scene:GetComponent("SessionComponent"):ActiveLoad("", LoadMode.Mask)
      --    Game.Scene.Player.LastRoomMalTime =  g2cRoomMal.LastRoomMalTime
      --    uiDrawing:CoPlayForce(SoundType.Rest) -- soundComponent:PlayRestSound()
      --    coroutine.waitforseconds(length1 + 0.5)
      --    UIManager:GetInstance():OpenWindow(UIWindowNames.UITransition, {time = 2.5, mode = 1})
      --    coroutine.waitforseconds(2)
      --    Game.Scene.Player:GetComponent("RoomComponent"):StartSleep()
      --    coroutine.waitforseconds(2)
      --    soundComponent:Stop()
      --    uiDrawing:CoPlayForce(SoundType.AfterRest) -- soundComponent:PlayAfterRestSound()
      --    coroutine.waitforseconds(length2 + 0.5)
      --    Game.Scene:GetComponent("SessionComponent"):DeActiveLoad(LoadMode.Mask)
      -- else
      --    --UIUtil.ToolTipFourth(LangUtil.GetServerError(g2cRoomMal.Error))
      -- end
   end)
end

return this;

