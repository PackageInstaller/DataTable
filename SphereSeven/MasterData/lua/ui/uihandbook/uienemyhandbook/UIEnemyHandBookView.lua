---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/7/1 16:21
---

local UIEnemyHandBookView = BaseClass("UIEnemyHandBookView",UIBaseView)
local base = UIBaseView
local this = UIEnemyHandBookView


local function OnClickCard(self,id) --点击角色
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIEnemyHandBookDetail,id)
end

local function AddCardItem(self,content, go, v) --添加角色
    -- local hintNode = Game.Scene:GetComponent("HintComponent").Handbook:GetChild("Monster"):GetChild(Z_Card[v].Sphere)
    local card = {
        TemplateId = v,
        Level = -1,
        Star = 5,
        Stage = 3,
        Id = v,
        Lock = true,
    }

    UIUtil.AddBtnSound(go)
    local cardInfo = go.transform:Find("CardInfo").gameObject

    cardInfo:SetActive(true)
    UIPublic.InitCardItemDataNew(card, cardInfo, nil, v)

    local new = go.transform:Find("CardInfo/New").gameObject
    -- hintNode:GetChild(v):AddObject(new,"MonsterHandBookView")

    UIUtil.AddBtnEvent(go,function()
        OnClickCard(self,v)
        -- hintNode:GetChild(v):SetCount(0)
    end)
    local avatar = go.transform:Find("CardInfo/Avatar"):GetComponent("Image")

    avatar:GetComponent("Image").material = nil
    go:GetComponent("Button").enabled = true

    if self.recordComponent:CheckIsOn(RecordType.Monster, v) then
        avatar:GetComponent("Image").material = nil
        go:GetComponent("Button").enabled = true
    else
        avatar:GetComponent("Image").material = ResourcesManager:GetInstance():CoLoadAsync("UI/Materials/UI-GreyDefault.mat", typeof(Material))
        go:GetComponent("Button").enabled = false
    end


    --UIPublic.InitButton(go, false)
    -- if self.recordComponent:CheckIsOn(RecordType.Monster, v) then
    --     avatar:GetComponent("Image").material = ResourcesManager:GetInstance():CoLoadAsync("UI/Materials/UI-GreyDefault.mat", typeof(Material))
    --     go:GetComponent("Button").enabled = false
    -- else
    --     avatar:GetComponent("Image").material = nil
    --     go:GetComponent("Button").enabled = true
    -- end

    -- if not table.any(self.recordComponent.MonsterTypeList,function(t) return t == v   end) then
    --     avatar:GetComponent("Image").material = ResourcesManager:GetInstance():CoLoadAsync("UI/Materials/UI-GreyDefault.mat", typeof(Material))
    --     go:GetComponent("Button").enabled = false
    -- else
    --     avatar:GetComponent("Image").material = nil
    --     go:GetComponent("Button").enabled = true
    -- end

    --if not table.any(self.recordComponent.MonsterTypeList,function(t) return t == v   end) then
    --    avatar.color = Color.New(0.3,0.3,0.3)
    --    go:GetComponent("Button").enabled = false
    --else
    --    avatar.color = Color.New(1,1,1)
    --    go:GetComponent("Button").enabled = true
    --end
end

local function OnKindButton(self,id)
    for k,v in pairs(self.btnList) do
        local transform = v.transform
        local btn = v:GetComponent("Button")
        local active = transform:Find("Active").gameObject
        if k == id then
            active:SetActive(true)
            btn.enabled = false
        else
            active:SetActive(false)
            btn.enabled = true
        end
    end

    local idList = self.cardIds[id]
    --self.hint:SetActive(table.count(idList) == 0)
    self.vs_list=idList
    self.vs_scroll:RefreshData(idList)
    --self.vs_scrollView.verticalScrollbar.value = 1
    self.vs_scroll:MoveTop()
end

function this.OnLangCreate(self)
    local btnRoot = self.langRc:GetObject("BtnCtrl").transform
    --local backText = self.langRc:GetObject("BackText").transform
    local hold = self.langRc:GetObject("Hold").transform
    local progress = self.langRc:GetObject("Progress").transform

    local ids = { 91,93,95,0,0,0,0,97,99 }
    for i =0,btnRoot.childCount - 1 do
        local id = ids[i+1]
        if id~= 0 then
            local root = btnRoot:GetChild(i)
            local rootImg = root:GetComponent("Image")
            LangUtil.GetSpriteLang(id,function(sprite)
                rootImg.sprite = sprite
            end)
            local activeImg = root:Find("Active"):GetComponent("Image")
            LangUtil.GetSpriteLang(id+1,function(sprite)
                activeImg.sprite = sprite
            end)
        end
    end
    --LangUtil.BindText(backText).text = LangUtil.GetSysLang(291)
    LangUtil.BindText(hold:Find("Text")).text = LangUtil.GetSysLang(731)
    LangUtil.BindText(progress:Find("Text")).text = LangUtil.GetSysLang(275)
    LangUtil.BindText(hold:Find("Value"),FontType.All_Number)
    LangUtil.BindText(progress:Find("Value"),FontType.All_Number)
end

local function InitHint(self)
    -- local handbookNode = Game.Scene:GetComponent("HintComponent").Handbook:GetChild("Monster")
    -- for i =1,#self.btnList do
    --     local cardNode = handbookNode:GetChild(i)
    --     cardNode:AddObject(self.btnList[i].transform:Find("Hint").gameObject,"MonsterHandBookView")
    -- end
end

function this.OnCreate(self)
    base.OnCreate(self)

    self.backBtn = self.rc:GetObject("BackButton")
    UIPublic.SetBackButton(
        self.backBtn,
        UIWindowNames.UIEnemyHandBook,
        562
    )
    local btnCtrl = self.rc:GetObject("BtnCtrl").transform
    local viewCtrl = self.rc:GetObject("Right").transform
    self.progressTxt = self.rc:GetObject("Progress").transform:Find("Value"):GetComponent("Text")
    self.holdTxt = self.rc:GetObject("Hold").transform:Find("Value"):GetComponent("Text")
    self.btnList = {}
    for i = 0,btnCtrl.childCount - 1 do
        local btn = btnCtrl:GetChild(i).gameObject
        self.btnList[i+1] =btn
        UIUtil.AddBtnEvent(btn,function()OnKindButton(self,i+1) end)
    end

    self.vs_list = {}
    self.vs_scroll = VerticalScroll.New()
    self.vs_scroll:SetUpdateCount(5)
    self.vs_scrollView = viewCtrl:GetChild(0):GetComponent("ScrollRect")
    self.vs_scroll:Clear()
    self.vs_scroll:ScrollInit(self.vs_list, self.vs_scrollView, "CardItemNew", function (arg)
        AddCardItem(self,nil,arg.go,arg.data)
    end)
    
    InitHint(self)
end

function this.OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh()
end

function this.OnRefresh(self)
    ---@type RecordComponent
    self.recordComponent = Game.Scene.Player:GetComponent("RecordComponent")
    --local holdCount =  UIUtil.GetMonsterNum()
    local holdCount, maxCount = self.recordComponent:GetMonsterCount()
    --local maxCount = table.count(table.choose(Z_Card,function(k,v) return v.IsMonster == 1 and v.NotOpen ~= 1 end))
    -- self.holdTxt.text = holdCount.."/"..maxCount
    -- self.progressTxt.text = math.modf(holdCount/maxCount*100).."%"

    self.cardIds = {}
    for i = 1,9 do
        self.cardIds[i] = {}
    end
    for k,v in table.pairsByKeys(Z_Card) do
        if v.IsMonster == 1 and v.SsUnitId ~= 0  and v.NotOpen ~= 1 then
            table.insert(self.cardIds[v.Sphere],v.Id)
        end
    end

    for k,v in pairs(self.cardIds) do
        if table.count(v) == 0 then
            self.btnList[k].gameObject:SetActive(false)
        else
            self.btnList[k].gameObject:SetActive(true)
        end
    end

    self.holdTxt.text = holdCount .. "/" .. maxCount
    self.progressTxt.text = math.modf(holdCount/maxCount*100).."%"

    OnKindButton(self,1)
end

function this.OnAddListener(self)
    base.OnAddListener(self)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self)
end

function this.OnDisable(self)
    base.OnDisable(self)
end

function this.OnDestroy(self)
    base.OnDestroy(self)
    self.vs_scroll:Dispose()
end

return this