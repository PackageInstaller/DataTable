---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

---@class UIFriendView : UIBaseView
---@field model UIFriendModel
---@field ctrl UIFriendCtrl
---@field friends Friend[]
local UIFriendView = BaseClass("UIFriendView",UIBaseView)
local base = UIBaseView
local this = UIFriendView

local FriendLogic = require "UI.UIFriend.Logic.FriendLogic"
local AddLogic = require "UI.UIFriend.Logic.AddLogic"
local ApplyLogic = require "UI.UIFriend.Logic.ApplyLogic"

local function OpenPanel(self,id)
    self.panelId = id
    for k,v in pairs(self.panel_Tab) do
        v:SetActive(k == id)
    end

    for k,v in pairs(self.btn_Tab) do
        v.transform:Find("Active").gameObject:SetActive(k == id)
        v.gameObject:GetComponent("Button").enabled  = (not (k == id))
    end

    self.func_Tab[id].func.Init(self)
end

function this:OnCreate()
    base.OnCreate(self)

    ---@type HintComponent
    local hintComponent = Game.Scene:GetComponent("HintComponent")
    ---@type HintNode
    self.friendHint = hintComponent.Friend
    
    self.scroll = VerticalScroll.New()
    self.scroll:SetUpdateCount(5)
    self.hint = self.rc:GetObject("Hint")
    self.butCtrl = self.rc:GetObject("ButtonCtrl").transform
    self.back_Btn = self.rc:GetObject("BackButton")
    UIPublic.SetBackButton(
        self.back_Btn,
        UIWindowNames.UIFriend,
        530
    )
    self.friend_panel = self.rc:GetObject("FriendPanel")
    self.add_panel = self.rc:GetObject("AddPanel")
    self.apply_panel = self.rc:GetObject("ApplyPanel")
    self.panel_Tab = {self.friend_panel,self.add_panel,self.apply_panel,self.blackList_panel};
    self.func_Tab = {
        {
            func = FriendLogic,
        },
        {
            func = AddLogic,
        },
        {
            func = ApplyLogic,
            hintName = "Requests",
        }
    }
    self.btn_Tab = {}
    for i = 1, self.butCtrl.childCount do
        self.btn_Tab[i] = self.butCtrl:GetChild(i-1).gameObject-- 1好友、2添加、3申请、4黑名单
        local hint = self.btn_Tab[i].transform:Find("Hint")
        if not IsNull(hint) then
            if self.func_Tab[i].hintName ~= nil then
                self.friendHint:GetChild(self.func_Tab[i].hintName):AddObject(hint.gameObject, "FriendTab")
            else
                hint.gameObject:SetActive(false)
            end
        end
        UIUtil.AddBtnEvent(self.btn_Tab[i],function(v) OpenPanel(self, i)  end)
    end

    --好友列表
    local friend_Rc = self.friend_panel:GetComponent("ReferenceCollector")
    self.friend_SortBtn = friend_Rc:GetObject("SortButton")
    self.latelyButton = friend_Rc:GetObject("LatelyButton")
    self.friend_Content = friend_Rc:GetObject("Content")
    self.onlineText = friend_Rc:GetObject("OnlineText"):GetComponent("Text")
    self.Num= friend_Rc:GetObject("Num").transform:Find("Value"):GetComponent("Text")
    -- UIUtil.AddBtnEvent(self.friend_SortBtn,function(go) FriendLogic.OnClickFriendSortBtn(self) end)
    UIUtil.AddBtnEvent(self.latelyButton,function(go) FriendLogic.OnClickLatelyButton(self) end)

    --添加好友
    local add_Rc = self.add_panel:GetComponent("ReferenceCollector")
    self.add_InputField = add_Rc:GetObject("InputField"):GetComponent("InputField")
    
    self.inputText = self.add_InputField.transform:Find("Text"):GetComponent("Text")
    
    self.add_SearchBtn = add_Rc:GetObject("SearchButton")
    self.add_FreshButton = add_Rc:GetObject("FreshButton")
    
    self.add_Content = add_Rc:GetObject("Content")
    
    UIUtil.AddBtnEvent(self.add_FreshButton,function(go) AddLogic.OnClickFreshButton(self) end)
    UIUtil.AddBtnEvent(self.add_SearchBtn,function(go) AddLogic.OnClickSearchButton(self,self.add_InputField)  end)
    
    --申请列表
    local apply_Rc = self.apply_panel:GetComponent("ReferenceCollector")
    self.apply_AllRefuseButton = apply_Rc:GetObject("AllRefuseButton")
   
    self.apply_Content = apply_Rc:GetObject("Content")
    ButtonListener.Get(self.apply_AllRefuseButton).OnClickHandler = function(go) ApplyLogic.OnClickAllRefuseButton(self)  end

end

function this:OnLangCreate()
    for i, v in pairs(self.btn_Tab) do
        LangUtil.GetSpriteLang(123 + i*2, function(sprite)
            v:GetComponent("Image").sprite = sprite
        end)
        LangUtil.GetSpriteLang(124 + i*2, function(sprite)
            v.transform:Find("Active"):GetComponent("Image").sprite = sprite
        end)
    end
    self.friend_SortBtnText = LangUtil.BindText(self.friend_SortBtn.transform:Find("Text"))
    
    LangUtil.BindText(self.add_InputField.transform:Find("Placeholder")).text = LangUtil.GetSysLang(1214)
    LangUtil.BindText(self.inputText)
    LangUtil.BindText(self.add_SearchBtn.transform:Find("Text")).text= LangUtil.GetSysLang(325)
    LangUtil.BindText(self.add_FreshButton.transform:Find("Text")).text= LangUtil.GetSysLang(326)
    LangUtil.BindText(self.apply_AllRefuseButton.transform:Find("Text")).text= LangUtil.GetSysLang(335)
    LangUtil.BindText(self.latelyButton.transform:Find("Text")).text = LangUtil.GetSysLang(341)
    LangUtil.BindText(self.Num, FontType.All_Number)
    LangUtil.BindText(self.onlineText, FontType.All_Number).text = LangUtil.GetSysLang(328) -- 在线
end

function this:OnEnable()
    base.OnEnable(self)
    self.player = Game.Scene.Player
    self.friendComponent = Game.Scene.Player:GetComponent("FriendComponent")
    FriendLogic.FriendEnable(self)
    self:OnRefresh()
end

function this:OnRefresh()
    self.friends = self.friendComponent:GetFriends()
    self.requests = self.friendComponent:GetRequests()
    OpenPanel(self,1)
    self.friend_Content.transform:DOLocalMoveY(0,0)
    self.add_Content.transform:DOLocalMoveY(0,0)
    self.apply_Content.transform:DOLocalMoveY(0,0)
end

local function ON_FRIEND_UPDATE(self)
    FriendLogic.Init(self)
end

local function ON_FRIEND_REQUEST_UPDATE(self)
    ApplyLogic.Init(self)
end

function this.OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(UIMessageNames.ON_FRIEND_UPDATE,ON_FRIEND_UPDATE)
    self:AddUIListener(UIMessageNames.ON_FRIEND_REQUEST_UPDATE,ON_FRIEND_REQUEST_UPDATE)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(UIMessageNames.ON_FRIEND_UPDATE)
    self:RemoveUIListener(UIMessageNames.ON_FRIEND_REQUEST_UPDATE)
end

function this.OnDisable(self)
    base.OnDisable(self)
    self.scroll:Dispose()
    ListChildPool:GetInstance():ClearContent(self.add_Content)
    ListChildPool:GetInstance():ClearContent(self.apply_Content)
    FriendLogic.FriendDisable(self)
end

function this.OnDestroy(self)
    base.OnDestroy(self)
end

return this

