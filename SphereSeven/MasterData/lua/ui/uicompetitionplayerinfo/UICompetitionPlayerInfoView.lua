---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UICompetitionPlayerInfoView = BaseClass("UICompetitionPlayerInfoView",UIBaseView);
local base = UIBaseView
local this = UICompetitionPlayerInfoView



local function InitEquips(self,card)
    local equipList = self.playerInfo.EquipList
    local equipTab = {{id = card.Hand1Equip ,gameObject = self.equipListObj[1]},
                      {id = card.Hand2Equip,gameObject = self.equipListObj[2]},
                      {id = card.BodyEquip,gameObject = self.equipListObj[3]},
                      {id = card.HeadEquip,gameObject = self.equipListObj[4]},
                      {id = card.FootEquip,gameObject = self.equipListObj[5]},
                      {id = card.AdornEquip,gameObject = self.equipListObj[6]}
    }

    for k,v in pairs(equipTab) do
        local tra = v.gameObject.transform
        local starBg = tra:Find("StarBg"):GetComponent("Image")
        local avatar = tra:Find("Avatar"):GetComponent("Image")
        local Add = tra:Find("Add").gameObject
        starBg.gameObject:SetActive(false)
        avatar.gameObject:SetActive(false)
        local equip
        if self.playerInfo.Type == 1 then
            equip = table.first(equipList,function(a) return v.id == a.EquipId  end)
        else
            equip = table.first(equipList,function(a) return v.id == a.Id  end)
        end
        
        if self.playerInfo.Type == 1  or self.playerInfo.Type == 3 then
            Add:SetActive(false)
            UIUtil.AddBtnEvent(avatar, function() UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipState, 
                    {equip = equip, card = card}) end)
        else
            Add:SetActive(true)

            if v.id ~= 0 then
                local equips = Game.Scene.Player:GetComponent("EquipComponent").Equips
                local equip = equips[v.id]
                UIUtil.AddBtnEvent(avatar,function() UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipChangeState1,
                        {equip = equip,card = card,state = 2,part = k})
                    UIManager:GetInstance():CloseWindow(UIWindowNames.UICompetitionPlayerInfo)end)
            else
                UIUtil.AddBtnEvent(Add,function() UIPublic.OpenChangeEquipWindow(card) UIManager:GetInstance():CloseWindow(UIWindowNames.UICompetitionPlayerInfo) end)
            end
            
            --UIUtil.AddBtnEvent(avatar,function()
            --    if equipTab.id == 0 then
            --        UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipChangeState1,
            --                {equip = v,card = card,state = 2,part = k}
            --        )
            --    else
            --        UIPublic.OpenChangeEquipWindow(card)
            --    end
            --    UIManager:GetInstance():CloseWindow(UIWindowNames.UICompetitionPlayerInfo)
            --end)
        end
        if v.id ~= 0 then
            if equip ~= nil then
                local zEquip = Z_Equip[equip.TemplateId]
                UIPublic.InitEquipBg(zEquip,starBg)
                UIUtil.SetSprite(avatar,AtlasConfig.Equip,zEquip.EquipIcon)
                starBg.gameObject:SetActive(true)
                avatar.gameObject:SetActive(true)
            end
        end
    end
    
end

local function InitFightSouls(self,card)
    local fightSoulList = self.playerInfo.FightSoulList
    local transform = self.fightSoulRoot
    local fightSoul1 =  transform:Find("FightSoul1/FightSoul").gameObject
    local fightSoul2 =  transform:Find("FightSoul2/FightSoul").gameObject
    local fightSoul3 =  transform:Find("FightSoul3/FightSoul").gameObject
    local fightSoulTab = {{id = card.FightSoul1, gameObject = fightSoul1},{id = card.FightSoul2, gameObject = fightSoul2},
                          {id = card.FightSoul3, gameObject = fightSoul3}}
    for k,v in pairs(fightSoulTab) do
        local fightSoul
        local tra = v.gameObject.transform
        if self.playerInfo.Type == 1 then
            fightSoul = table.first(fightSoulList,function(a) return v.id == a.FightSoulId  end)
            tra.parent:Find("Add").gameObject:SetActive(false)
            UIUtil.AddBtnEvent(v.gameObject,function() UIManager:GetInstance():OpenWindow(UIWindowNames.UIFightSoulState,
                    {card = card, fightSoul = fightSoul}) end)

        elseif self.playerInfo.Type == 3 then
            fightSoul = table.first(fightSoulList,function(a) return v.id == a.Id  end)
            tra.parent:Find("Add").gameObject:SetActive(false)
            UIUtil.AddBtnEvent(v.gameObject,function() UIManager:GetInstance():OpenWindow(UIWindowNames.UIFightSoulState,
                    {card = card, fightSoul = fightSoul}) end)
        else
            fightSoul = table.first(fightSoulList,function(a) return v.id == a.Id  end)
            tra.parent:Find("Add").gameObject:SetActive(true)

            if v.id ~= 0 then
                local fightSouls = Game.Scene.Player:GetComponent("FightSoulComponent").FightSouls
                local fightSoul = fightSouls[v.id]
                UIUtil.AddBtnEvent(v.gameObject,function() UIManager:GetInstance():OpenWindow(UIWindowNames.UIFightSoulChangeState1,
                        {card = card,index = k,state = 2,fightSoul = fightSoul})
                    UIManager:GetInstance():CloseWindow(UIWindowNames.UICompetitionPlayerInfo)end)
            else
                UIUtil.AddBtnEvent(tra.parent:Find("Add").gameObject,function() UIPublic.OpenChangeFightSoulWindow(card) UIManager:GetInstance():CloseWindow(UIWindowNames.UICompetitionPlayerInfo) end)
            end
            
        end
        v.gameObject:SetActive(false)
        if fightSoul ~= nil then
            UIUtil.SetFightSoulSprite(v.gameObject:GetComponent("Image"),fightSoul.config.Id,FightSoulPictureType.Little)
            v.gameObject:SetActive(true)
            LangUtil.BindText(v.gameObject.transform:Find("Zh_label/Text"))
        end
    end
end

local isBuysing = false

local function OnCardItem(self,id) 
    if isBuysing then return end
    local card
    local cardInfo = self.playerInfo.CardList[id]
    if cardInfo == nil then
        return
    end
    if self.playerInfo.Type == 1 then
        card = Game.Registry:NewObject("Card",cardInfo)
        card:AddComponent("NumericComponent")
        card:AddComponent("CardCharacterComponent")
        --查看其他玩家的战魂
        if self.playerInfo.PlayerId ~=  Game.Scene.Player.Id then
            card.FightSoul1 =  cardInfo.FightSoul1
            card.FightSoul2 =  cardInfo.FightSoul2
            card.FightSoul3 =  cardInfo.FightSoul3
        end
    else
        card = cardInfo
    end
    
    
    coroutine.start(function()
        isBuysing = true
        UIPublic.InitNumerical(self.numericalRoot.gameObject,card)
        UIPublic.InitSkillArea(self.skillRoot.gameObject,card)
        UIPublic.InitCardItemDataNew(card,self.cardItem)
        InitEquips(self,card)
        InitFightSouls(self,card)
        self.cardPanel:SetActive(true)
        isBuysing = false
    end)
    
end

local function InitCardInfo(self,transform,cardInfo)
    local zCard = Z_Card[cardInfo.TemplateId]
    local starRoot = transform:Find("Star")
    local icon = transform:Find("Icon/Value"):GetComponent("Image")
    local frame = transform:Find("Frame"):GetComponent("Image")
    local lvFrame = transform:Find("Level"):GetComponent("Image")
    local lvTxt = transform:Find("Level/Value"):GetComponent("Text")
    LangUtil.BindText(lvTxt).text=""
    starRoot.gameObject:SetActive(true)
    lvFrame.gameObject:SetActive(true)
    for i = 0,starRoot.childCount - 1 do
        starRoot:GetChild(i).gameObject:SetActive((i + 1 )<= cardInfo.Star)
    end
    
    lvTxt.text=  "LV "..cardInfo.Level
    UIUtil.SetCardSprite(icon,zCard.Id,cardInfo.SkinId,CardPictureType.Little,true)
  --  UIUtil.SetSprite(icon,AtlasConfig.CardLittle,zCard.IconName,true)
    UIUtil.SetSprite(frame,AtlasConfig.CardLittleFrame,UIPublic.RareNames[zCard.Rare]..".png",true)
    --UIUtil.SetSprite(lvFrame,AtlasConfig.CardLittleFrame,"L_"..UIPublic.RareNames[zCard.Rare]..".png",true)

end

local function InitCardInfoDefault(self,transform)
    --local zCard = Z_Card[cardInfo.TemplateId]
    local starRoot = transform:Find("Star")
    local icon = transform:Find("Icon/Value"):GetComponent("Image")
    local frame = transform:Find("Frame"):GetComponent("Image")
    local lvFrame = transform:Find("Level"):GetComponent("Image")
    --local lvTxt = transform:Find("Level/Value"):GetComponent("Text")
    starRoot.gameObject:SetActive(false)
    lvFrame.gameObject:SetActive(false)
    
    UIUtil.SetSprite(icon,AtlasConfig.Dangrad,"default" .. ".png",true)
    --  UIUtil.SetSprite(icon,AtlasConfig.CardLittle,zCard.IconName,true)
    UIUtil.SetSprite(frame,AtlasConfig.CardLittleFrame,0 ..".png",true)
    --UIUtil.SetSprite(lvFrame,AtlasConfig.CardLittleFrame,"L_"..UIPublic.RareNames[zCard.Rare]..".png",true)

end


local function  InitPlayerInfo(self)
    local captionTxt = self.caption:Find("CaptionTxt"):GetComponent("Text")
    local badgeTxt = self.caption:Find("Badge/Text"):GetComponent("Text")
    local badgeImg = self.caption:Find("Badge"):GetComponent("Image")
    local zb = Game.Scene:GetComponent("CompetitionComponent")
    captionTxt.text = Z_Competition[self.playerInfo.Captain].Name
    badgeTxt.text = "0"
    self.levelTxt.text = "LV."..self.playerInfo.Lv
    
    self.PlayerCombatPower.text = LangUtil.GetSysLang(433)..":"..zb:GetCombat(self.playerInfo)
    UIUtil.SetSprite(badgeImg,AtlasConfig.Dangrad,Z_Competition[self.playerInfo.Captain].Id..".png",true)
    self.nameTxt.text = self.playerInfo.Name
    UIUtil.SetPlayerIcon(self.iconImg,self.playerInfo.Avatar)

    for k,v in table.pairsByKeys(self.cardList) do
        local cardInfo = self.playerInfo.CardList[k]
        if cardInfo ~= nil then
            v:SetActive(true)
            InitCardInfo(self,v.transform,cardInfo)
        else
            InitCardInfoDefault(self,v.transform)
        end
    end

end


local function CreateCardInfo(self)
    local rc = self.cardPanel:GetComponent("ReferenceCollector")
    self.fightSoulRoot = rc:GetObject("FightSoul").transform
    self.skillRoot = rc:GetObject("SKill").transform
    local equipRoot = rc:GetObject("Equip").transform
    self.cardItem = rc:GetObject("CardItemNew").transform:Find("CardInfo")
    self.numericalRoot = rc:GetObject("Numerical").transform
    LangUtil.BindText(self.numericalRoot:Find("HP")).text = LangUtil.GetSysLang(3036)
    LangUtil.BindText(self.numericalRoot:Find("HP/Value"),"Number").text=""
    LangUtil.BindText(self.numericalRoot:Find("ATK")).text = LangUtil.GetSysLang(3038)
    LangUtil.BindText(self.numericalRoot:Find("ATK/Value"),"Number").text=""
    LangUtil.BindText(self.numericalRoot:Find("SPEED")).text = LangUtil.GetSysLang(3037)
    LangUtil.BindText(self.numericalRoot:Find("SPEED/Value"),"Number").text=""
    LangUtil.BindText(self.numericalRoot:Find("DEF")).text = LangUtil.GetSysLang(3039)
    LangUtil.BindText(self.numericalRoot:Find("DEF/Value"),"Number").text=""
    LangUtil.BindText(rc:GetObject("Title").transform:Find("1/Text"))
    LangUtil.BindText(rc:GetObject("Title").transform:Find("2/Text"))
    LangUtil.BindText(rc:GetObject("Title").transform:Find("3/Text"))
    self.equipListObj = {}
    for i = 0, equipRoot.childCount - 1 do
        self.equipListObj[i + 1] = equipRoot:GetChild(i).gameObject
    end

end

local function CreatePlayerInfo(self)
    
    local rc = self.playerPanel:GetComponent("ReferenceCollector")
    self.caption = rc:GetObject("Caption").transform
    self.levelTxt = rc:GetObject("Level"):GetComponent("Text")
    self.iconImg = rc:GetObject("Icon"):GetComponent("Image")
    self.nameTxt =  rc:GetObject("Name"):GetComponent("Text")
    local cardRoot = rc:GetObject("CardRoot").transform
    LangUtil.BindText(self.caption.transform:Find("CaptionTxt")).text=""
    LangUtil.BindText(self.levelTxt).text=""
    LangUtil.BindText(self.nameTxt).text=""
    self.cardList = {}
    for i = 0,cardRoot.childCount  -1 do
        local child = cardRoot:GetChild(i).gameObject
        self.cardList[i+1] = child
        UIUtil.AddBtnEvent(child,function()OnCardItem(self,i+1)  end)
    end
end


function this.OnCreate(self)
    base.OnCreate(self)
    self.cardPanel = self.rc:GetObject("CardInfo")
    self.playerPanel = self.rc:GetObject("PlayerInfo")
    local eventBg = self.rc:GetObject("EventBg")
    local close = self.rc:GetObject("Close")
    local CardClose = self.rc:GetObject("CardClose")
    self.PlayerCombatPower = self.rc:GetObject("PlayerCombatPower"):GetComponent(typeof(UE_UI.Text))
    
    self.playerPanel:SetActive(true)
    self.cardPanel:SetActive(false)
    UIUtil.AddBtnEvent(close,function()UIManager:GetInstance():CloseWindow(UIWindowNames.UICompetitionPlayerInfo)  end)
    EventTriggerListener.Get(eventBg).onLuaClick = function()
        if self.cardPanel.activeInHierarchy then
            self.cardPanel:SetActive(false)
        end
        if self.model.playerInfo.Type == 2 or self.playerInfo.Type == 3 then
            UIManager:GetInstance():CloseWindow(UIWindowNames.UICompetitionPlayerInfo)
        end
    end
    UIUtil.AddBtnEvent(CardClose,function() 
        if self.cardPanel.activeInHierarchy then
            self.cardPanel:SetActive(false)
        end
        if self.model.playerInfo.Type == 2 or self.playerInfo.Type == 3 then
            UIManager:GetInstance():CloseWindow(UIWindowNames.UICompetitionPlayerInfo)
        end
    end)
end
function this.OnLangCreate(self)
    LangUtil.BindText(self.playerPanel.transform:Find("Title/Text"))
    LangUtil.BindText(self.PlayerCombatPower).text = ""
    LangUtil.BindText(self.cardPanel.transform:Find("Title/Text")).text = LangUtil.GetSysLang(852)
end

function this.OnEnable(self)
    base.OnEnable(self);
    self.playerInfo = self.model.playerInfo
    CreateCardInfo(self)
    CreatePlayerInfo(self)
    self:OnRefresh();
end


function this.OnRefresh(self)
   
    if self.playerInfo.Type ==1 then
        self.playerPanel:SetActive(true)
        self.cardPanel:SetActive(false)
        InitPlayerInfo(self)
    else
        self.playerPanel:SetActive(false)
        OnCardItem(self,self.playerInfo.Id)
    end
    
end


function this.OnAddListener(self)
    base.OnAddListener(self)
  
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
end

function this.OnDisable(self)
    base.OnDisable(self);
    self.fightSoulRoot:Find("FightSoul1/FightSoul"):GetComponent("Image").sprite = DeActiveSprite
    self.fightSoulRoot:Find("FightSoul2/FightSoul"):GetComponent("Image").sprite = DeActiveSprite
    self.fightSoulRoot:Find("FightSoul3/FightSoul"):GetComponent("Image").sprite = DeActiveSprite
    for k, v in pairs(self.equipListObj) do
        v.transform:Find("StarBg"):GetComponent("Image").sprite = DeActiveSprite
        v.transform:Find("Avatar"):GetComponent("Image").sprite = DeActiveSprite
    end
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

UICompetitionPlayerInfoView.OnCardItem=OnCardItem
return this;

