---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UIOriginalPaintingView = BaseClass("UIOriginalPaintingView",UIBaseView);
local base = UIBaseView
local this = UIOriginalPaintingView

local maxScale = 2.5
local minScale = 1
local ButtonRot = 1
local delay = 0.3

local function OnButton(self)
    if self.btnState == 1 then
        self.btnState = 2
        self.bgImage.enabled = false
        self.btnImage:SetActive(true)
        --self.paint1:DOFade(0,delay)
        --self.btnTxt.text = LangUtil.GetSysLang(2041)
    else
        self.btnState = 1
        self.bgImage.enabled = true
        self.btnImage:SetActive(false)
        --self.paint1:DOFade(1,delay)
        --self.btnTxt.text = LangUtil.GetSysLang(2042)
    end
end

local function OnButtonRot(self)
    --print("点击按钮")
    if ButtonRot ~= 1 then
        ButtonRot = 1
        self.paintRoot.transform:DOScale(Vector2.New(self.model.scale,self.model.scale),0.5)
        self.paintRoot.transform:DOLocalRotate(Vector3.New(0,0,90),0.5)
        self.button_rot.transform:DOLocalRotate(Vector3.New(0,0,90),0)
        self.btn.transform:DOLocalRotate(Vector3.New(0,0,90),0)
    else
        ButtonRot = 2
        self.paintRoot.transform:DOScale(Vector2.New(self.model.scaleRot,self.model.scaleRot),0.5)
        self.paintRoot.transform:DOLocalRotate(Vector3.New(0,0,0),0.5)
        self.button_rot.transform:DOLocalRotate(Vector3.New(0,0,0),0)
        self.btn.transform:DOLocalRotate(Vector3.New(0,0,0),0)
    end
end


local function OnSingleClick(self)
    --print("点击事件")
    if Input.touchCount ~= nil and Input.touchCount > 1 then
        return
    end
    if(self.mainTouchRect.localScale.x == 1 and self.mainTouchRect.localScale.y == 1 and 
            self.mainTouchRect.localPosition.x == 0 and self.mainTouchRect.localPosition.y == 0) then
        if self.model.callBack ~= nil then
            self.model.callBack()
        end
        UIManager:GetInstance():CloseWindow(UIWindowNames.UIOriginalPainting)
    end 
end


function this.OnCreate(self)
    base.OnCreate(self);
    self.mainTouchRect = self.rc:GetObject("MainTouch"):GetComponent("RectTransform")
    self.paint1 = self.rc:GetObject("Pic1"):GetComponent("Image")
    self.paint2 = self.rc:GetObject("Pic2"):GetComponent("Image")
    self.combRoot =  self.rc:GetObject("CombRoot").transform
    self.btn =  self.rc:GetObject("Button")
    self.button_rot =  self.rc:GetObject("button_rot")
    self.btnImage = self.btn.transform:Find("Image").gameObject
    self.paintRoot = self.rc:GetObject("Root").transform
    self.ButtonRoot = self.rc:GetObject("ButtonRoot")
    self.LeanPinchScale = self.mainTouchRect.gameObject:GetComponent("LeanPinchScale")
    self.leanDragTranslate= self.mainTouchRect.gameObject:GetComponent("LeanDragTranslate")
    self.leanDragTranslate.moveState = 1

    self.LeanPinchScale.maxScale = maxScale
    self.LeanPinchScale.minScale = minScale
    
    EventTriggerListener.Get(self.gameObject).onLuaClick = function() OnSingleClick(self) end
    EventTriggerListener.Get(self.btn).onLuaClick = function()OnButton(self) end
    UIUtil.AddBtnEvent(self.button_rot,function()OnButtonRot(self) end)
end

function this.OnEnable(self)
    base.OnEnable(self)
    ButtonRot = 1
    self.combRoot.gameObject:SetActive(false)
    self.paint2.gameObject:SetActive(false)
    self.btn.gameObject:SetActive(false)

    local image = self.model.image
    local scale = self.model.scale
    local image_rect = image:GetComponent("RectTransform").rect

    local rect_x = (image_rect.height*scale > 1920 and {image_rect.height*scale} or{1920})[1]
    local rect_y = (image_rect.width*scale > 1080 and {image_rect.width*scale} or{1080})[1]

    self.mainTouchRect:DOLocalMove(Vector2.New(0,0),0)
    self.mainTouchRect.transform:DOScale(Vector2.New(1,1),0)
    self.paint1.sprite = image.sprite
    local rectTra = self.paint1.transform:GetComponent("RectTransform")
    rectTra.sizeDelta = Vector2.New(image_rect.width,image_rect.height)

    if self.model.state == 1 then -- 战魂
        self.paint1.gameObject:SetActive(true)
        local image1 = self.model.image
        local image1_rect = image1.transform:GetComponent("RectTransform")
        local rect = image1_rect.rect
        self.paint1.sprite = image1.sprite
        local cardRectTra = self.paint1.transform:GetComponent("RectTransform")
        cardRectTra.sizeDelta = Vector2.New(rect.width,rect.height)
        local cardOffset = self.model.cardOffset or Vector2.New(0,0)
        cardRectTra:DOLocalMove(cardOffset,0)
        rect_x = rect.height*scale -- (rect_x > rect.height*scale  and {rect_x} or{rect.height*scale })[1]
        rect_y = rect.width*scale -- (rect_y > rect.width*scale and {rect_y} or{rect.width*scale})[1]
    end

    if self.model.state == 2 then -- 角色
        self.btn.gameObject:SetActive(true)
        self.btnState = 1
        self.btnImage:SetActive(false)
        self.paint1.gameObject:SetActive(false)
        self.paint2.gameObject:SetActive(false)
        self.clone = CS.UnityEngine.GameObject.Instantiate(self.model.bgCard)
        self.bgImage = self.clone.transform:Find(self.model.id.."_"..self.model.stage):GetComponent("Image")
        self.clone.transform:SetParent(self.paintRoot, false)
        local subImage = self.model.subImage
        local sub_image_rect = subImage.transform:GetComponent("RectTransform")
        local sub_rect = sub_image_rect.rect
        self.paint2.sprite = self.model.subImage.sprite
        local cardRectTra = self.paint2.transform:GetComponent("RectTransform")
        cardRectTra.sizeDelta = Vector2.New(sub_rect.width,sub_rect.height)
        local cardOffset = self.model.cardOffset
        cardRectTra:DOLocalMove(cardOffset,0)
        rect_x = sub_rect.height*scale -- (rect_x > sub_rect.height*scale  and {rect_x} or{sub_rect.height*scale })[1]
        rect_y = sub_rect.width*scale -- (rect_y > sub_rect.width*scale and {rect_y} or{sub_rect.width*scale})[1]
    end

    if self.model.state == 3 then -- 特殊角色
        self.btn.gameObject:SetActive(true)
        self.btnState = 1
        self.btnImage:SetActive(false)
        self.paint1.gameObject:SetActive(false)
        self.paint2.gameObject:SetActive(false)
        self.clone = CS.UnityEngine.GameObject.Instantiate(self.model.bgCard)
        self.bgImage = self.clone.transform:Find(self.model.id .. "_" .. 1):GetComponent("Image")
        self.clone.transform:SetParent(self.paintRoot, false)
        local subImage = self.model.subImage
        local sub_image_rect = subImage.transform:GetComponent("RectTransform")
        local sub_rect = sub_image_rect.rect
        self.paint2.sprite = self.model.subImage.sprite
        local cardRectTra = self.paint2.transform:GetComponent("RectTransform")
        cardRectTra.sizeDelta = Vector2.New(sub_rect.width,sub_rect.height)
        local cardOffset = self.model.cardOffset
        cardRectTra:DOLocalMove(cardOffset,0)
        rect_x = sub_rect.height*scale -- (rect_x > sub_rect.height*scale  and {rect_x} or{sub_rect.height*scale })[1]
        rect_y = sub_rect.width*scale -- (rect_y > sub_rect.width*scale and {rect_y} or{sub_rect.width*scale})[1]
    end

    coroutine.start(function()
        coroutine.waitforframes(2)
        self.ButtonRoot.transform:SetAsLastSibling()
    end)
    
    self.mainTouchRect.sizeDelta = Vector2.New(rect_x, rect_y)
    self.paintRoot.localScale = Vector2.New(scale,scale)
    self.paintRoot.transform:DOLocalRotate(Vector3.New(0,0,90),0)
end



function this.OnRefresh(self) 
    
end


function this.OnAddListener(self)
    base.OnAddListener(self)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
end

function this.OnDisable(self)
    base.OnDisable(self);
    self.paintRoot.localScale = Vector2.New(1,1)
    self.paintRoot.transform:DOLocalRotate(Vector3.New(0,0,0),0)

    if not IsNull(self.clone) then
        CS.UnityEngine.GameObject.Destroy(self.clone.gameObject)
    end
    
    self.paint1:DOFade(1,0)
    self.paint1.sprite = nil
    self.paint2.sprite = nil

    for i = 0,self.combRoot.childCount - 1 do
        local img = self.combRoot:GetChild(i):GetComponent("Image")
        img.sprite = nil
    end
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this;

