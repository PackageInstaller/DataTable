---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/3 13:59
---

local UISevenStarView = BaseClass("UISevenStarView",UIBaseView)
local base = UIBaseView
local this = UISevenStarView
local diffCtrl

local function InitSectionContent(self)
    local info = {
        levelId = self.sevenStarComponent.Days[self.model.type][self.selectDay][self.selectDiff].LevelId,
        levelTypeId = LevelType.LevelTypeSevenStar
    }
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIStorySectionInfo,info)
end

local function OnBtn(self, id, hide) --点击切换日期
    self.selectDay = id
    self.sevenStarComponent.selectDay = id
    for k,v in pairs(self.btnList) do
        if v.selectImage ~= nil then
            v.selectImage:SetActive( k == id)
        end
        -- v.selectImage:SetActive( k == id)
    end
    -- self.OpenInfo:SetActive(true)
    -- self.OpenInfoText.text = string.gsub(LangUtil.GetSysLang(877), "XX", LangUtil.GetSysLang(106 + id))

    self.selectDiff = nil
    -- local diff = self.sevenStarComponent.Days[self.model.type][id].OpenDiff
    -- for k,v in pairs(self.diffList) do
    --     v.gameObject:SetActive(k <= diff)
    -- end

    for index, levelInfo in ipairs(self.sevenStarComponent.Days[self.model.type][id]) do
        self.diffList[index].gameObject:SetActive(levelInfo.IsUnlock)
    end

    --print(table.dump(self.sevenStarComponent.Days[self.model.type][id]))
end

local function InitSevenStarButton(self,btnData,day)
    if self.player == nil  or self.sevenStarComponent == nil then return end
    -- if self.model.type == 2 and day >6 then
    --     return
    -- end
    
    local data = self.sevenStarComponent.Days[self.model.type][day]--[1]

    btnData.gameObject:SetActive(data ~= nil)
    if data == nil then 
        return 
    end
    btnData.activityBut:SetActive(false)
    --btnData.Name.text = data.Name
    --local isCurDay = (day == self.day)
    for _, value in ipairs(data[1].BoostDate) do
        if value == self.day then
            btnData.activityBut:SetActive(true)
        end
    end
end

function this.ConvertTimeForm(second)
    if second < 0 then second = 0 end
    local tb = {}
    tb.day     = math.floor(second/86400)--math.modf(s/(24*60*60))
    tb.hour    = math.fmod(math.floor(second/3600), 24)--math.modf(s/(60*60))
    tb.minute  = math.fmod(math.floor(second/60), 60)--math.modf(s/60%60)
    tb.second  = math.floor(math.fmod(second, 60))-- math.modf(s%60)
    return tb
end

local function OnOpen(self,id) --点击开启
    self.ctrl:OpenSevenStarTime(id)
end

local function OnDiff(self,id) --点击难度
    self.selectDiff = id
    InitSectionContent(self)
end

function this.OnCreate(self)
    base.OnCreate(self)
    
    self.backBtn = self.rc:GetObject("BackButton")
    self.TipsPanel = self.rc:GetObject("TipsPanel").transform
    local TipsBgBtn = self.rc:GetObject("TipsBgBtn")
    local TipsBtn = self.TipsPanel:Find("TipsBtn")
    local Tips = self.TipsPanel:Find("Tips").gameObject
    Tips:SetActive(false)
    TipsBgBtn:SetActive(false)
    UIUtil.AddBtnEvent(TipsBtn,function(go)
        local localActive = Tips.activeInHierarchy
        TipsBgBtn:SetActive(not localActive)
        Tips:SetActive(not localActive)
    end)
    UIUtil.AddBtnEvent(TipsBgBtn,function(go)
        Tips:SetActive(false)
        TipsBgBtn:SetActive(false)
    end)

    UIPublic.SetBackButton(
        self.backBtn,
        UIWindowNames.UISevenStar,
        nil
    )
    UIPublic.SetHelpButton(self.rc:GetObject("HelpButton"), UIWindowNames.UISevenStar)
    
    --新手引导剧情
    local guide=Game.Scene:GetComponent("GuideComponent")
    local guideData = table.first(guide.GuideList,function (h) return h.Id == 8001  end)
    if guideData == nil or guideData.Step < 2 then
        guide:CheckStart(7,0)
    end
end

function this.OnLangCreate(self)
   
end

function this.OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh()
end

function this.OnRefresh(self)
    local isSpecify = false
    self.player = Game.Scene.Player
    self.sevenStarComponent = self.player:GetComponent("SevenStarComponent")
    if self.model.type == 1 then
        diffCtrl = self.rc:GetObject("PropLevelBtnList").transform
        self.sevenStarComponent.selectType = self.model.type
        self.sevenStarComponent.selectDay = self.model.selectDay
    elseif self.model.type == 2 then
        diffCtrl = self.rc:GetObject("ClassLevelBtnList").transform
        self.sevenStarComponent.selectType = self.model.type
        self.sevenStarComponent.selectDay = self.model.selectDay
    else
        isSpecify = true
        self.model.type = self.sevenStarComponent.selectType
        self.model.selectDay = self.sevenStarComponent.selectDay
        if self.model.type == 1 then
            diffCtrl = self.rc:GetObject("PropLevelBtnList").transform
        else
            diffCtrl = self.rc:GetObject("ClassLevelBtnList").transform
        end
    end

    self.rc:GetObject("PropLevelBtnList").gameObject:SetActive(self.model.type == 1)
    self.rc:GetObject("ClassLevelBtnList").gameObject:SetActive(self.model.type == 2)
    
    
    
    self.OpenInfo = self.rc:GetObject("OpenInfo")
    self.OpenInfo:SetActive(false)
    self.btnCtrl = self.rc:GetObject("BtnCtrl").transform
    
    self.btnList = {}
    self.diffList = {}

    for i = 0, diffCtrl.childCount - 1 do
        local child = diffCtrl:GetChild(i).transform
        self.diffList[i+1] = {}
        self.diffList[i+1].gameObject = child.gameObject
        UIUtil.AddBtnEvent(child,function()OnDiff(self,i+1)  end)
    end

    self.secList = {}
    self.clientData = ClientData:GetInstance()
    --self.player = Game.Scene.Player
    --self.sevenStarComponent = self.player:GetComponent("SevenStarComponent")
    self.againstComponent = Game.Scene:GetComponent("AgainstComponent")
    self.day = UIUtil.GetDayForWeek()
    self.selectDay = UIUtil.GetDayForWeek()
    self.selectDiff = nil

    -- if self.model.type == nil then
    --     self.model.type = self.sevenStarComponent.selectType
    --     self.model.selectDay = self.sevenStarComponent.selectDay
    -- else
    --     self.sevenStarComponent.selectType = self.model.type
    --     self.sevenStarComponent.selectDay = self.model.selectDay
    -- end

    
    local childCount = 0
    if self.model.type == 1 then
        childCount = 7 --8种属性
    elseif self.model.type == 2 then
        childCount = 5 --6种职业
    end

    for i = 0, 7 do
        local child = self.btnCtrl:GetChild(i)
        self.btnList[i+1] = {}
        self.btnList[i+1].gameObject = child.gameObject
        self.btnList[i+1].gameObject:SetActive(false)
    end

    for i = 0, childCount do
        local child = self.btnCtrl:GetChild(i)
        self.btnList[i+1] = {}
        self.btnList[i+1].gameObject = child.gameObject
        self.btnList[i+1].gameObject:SetActive(true)
        self.btnList[i+1].selectImage = child:Find("Select").gameObject
        self.btnList[i+1].LockImage = child:Find("LockImage"):GetComponent("Image")
        self.btnList[i+1].activityBut = child:Find("activityBut").gameObject

        if self.model.type == 1 then
            LangUtil.GetSpriteLang(370 + i, function(sprite) self.btnList[i+1].LockImage.sprite = sprite end)
            LangUtil.GetSpriteLang(381 + i, function(sprite) self.btnList[i+1].selectImage:GetComponent("Image").sprite = sprite end)
        elseif self.model.type == 2 then
            LangUtil.GetSpriteLang(391 + i, function(sprite) self.btnList[i+1].LockImage.sprite = sprite end)
            LangUtil.GetSpriteLang(399 + i, function(sprite) self.btnList[i+1].selectImage:GetComponent("Image").sprite = sprite end)
        end

        self.btnList[i+1].LockImage:SetNativeSize()
        self.btnList[i+1].selectImage:GetComponent("Image"):SetNativeSize()

        UIUtil.AddBtnEvent(child,function() OnBtn(self,i+1) end)
    end

    for k,v in pairs(self.btnList) do
        InitSevenStarButton(self,v,k)
    end

    
    if isSpecify then
        OnBtn(self, self.model.selectDay)
    else
        OnBtn(self, 1)
    end

    self.btnCtrl:DOLocalMoveY(self.model.scrollValue or 0, 0)
    self:onSevenStarModeChg(self)

    self.rc:GetObject("PropLevelBtnList").gameObject:SetActive(self.model.type == 1)
    self.rc:GetObject("ClassLevelBtnList").gameObject:SetActive(self.model.type == 2)

    local backText 
    if self.model.type == 1 then
        backText = 409
    elseif self.model.type == 2 then
        backText = 411
    end
    UIPublic.SetBackButtonText(self.backBtn.transform:Find("TextImage"):GetComponent("Image"), backText)

    UIUtil.AddBtnEvent(self.backBtn,function()
        UIManager:GetInstance():CloseWindow(UIWindowNames.UISevenStar)
    end)

    --coroutine.start(function()
    --    coroutine.waitforframes(4)
    --    --image:SetNativeSize()
    --    LayoutRebuilder.ForceRebuildLayoutImmediate(self.btnCtrl:GetComponent("RectTransform"))
    --end)
    --LayoutRebuilder.ForceRebuildLayoutImmediate(self.btnCtrl:GetComponent("RectTransform"))    

    coroutine.start(function()
       coroutine.waitforframes(5)
        for i = 0, childCount do
            self.btnList[i+1].LockImage:SetNativeSize()
            self.btnList[i+1].selectImage:GetComponent("Image"):SetNativeSize()
            LayoutRebuilder.ForceRebuildLayoutImmediate(self.btnCtrl:GetComponent("RectTransform")) 
        end
    end)

    if self.model.openDetail then
        local levelInfo = Z_SevenStar[self.model.openId]
        OnBtn(self,levelInfo.Day)
        OnDiff(self,levelInfo.Diff)
    end
end

function this.onSevenStarModeChg(self)
    --self.diffTime = UIUtil.GetDiffTime(1)
end

    
function this.OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(UIMessageNames.ON_SEVEN_STAR_MODE_CHG, self.onSevenStarModeChg)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(UIMessageNames.ON_SEVEN_STAR_MODE_CHG)
end

function this.OnDisable(self)
    base.OnDisable(self)
    self.model.selectDay = self.selectDay
    self.model.scrollValue = self.btnCtrl.localPosition.y
end

function this.OnViewTop(self)
    base.OnViewTop(self)
    -- UIManager:GetInstance():OpenWindow(UIWindowNames.UIComTop)
    -- self.comTopView = UIManager:GetInstance():GetWindow(UIWindowNames.UIComTop).View
    -- self.comTopView:InitComTop(self, self:GetName())
end

function this.OnDisViewTop(self)
    base.OnDisViewTop(self)
    --UIManager:GetInstance():CloseWindow(UIWindowNames.UIComTop)
end

function this.OnDestroy(self)
    base.OnDestroy(self)
end

return this

