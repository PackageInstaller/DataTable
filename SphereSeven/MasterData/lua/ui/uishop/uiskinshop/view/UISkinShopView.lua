---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/12 21:12
---


---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/12 21:12
---

local UISkinShopView = BaseClass("UISkinShopView",UIBaseView)
local base = UIBaseView
local this = UISkinShopView


local pfbName = "SkinShopItem"
local y1 = -10
local y2 = 9.1


local function InitSkinPicture(self,skinId)
    local skin = Z_Skin[skinId]
  
    self.mainSkin:DOFade(0,0)
    coroutine.start(function()
        local path = "UI/SkinShopPaint"..skin.SkinShopPaint.."/"..(skin.CharacterId.."_"..skin.Stage)..".png"
        self.mainSkin.sprite = AtlasManager:GetInstance():CoLoadImageAsync(path)
        self.mainSkin:DOFade(1,0.3)
        self.qImage:GetComponent("Image").sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/Risk/CardQ/"..(skin.CharacterId.."_"..skin.Stage)..".png")
    end)
end

local function SetItemState(self,gameObject,_bool)
    local transform = gameObject.transform
    local rectTransform =transform:Find("Root"):GetComponent("RectTransform")
    local active = transform:Find("Root/Active").gameObject
    local deActive = transform:Find("Root/DeActive").gameObject
    active:SetActive(_bool)
    deActive:SetActive(not _bool)
    if not IsNull(gameObject:GetComponent("Button")) then
        gameObject:GetComponent("Button").enabled  = (not _bool)
    end
    if _bool then
        rectTransform:DOLocalMoveY(y2,0.3 )
    else
        rectTransform:DOLocalMoveY(y1,0.3)
    end
end

local function InitSkinInfo(self)
    self.skinName.text = self.zSkin.Name
    self.cardName.text = Z_Card[self.zSkin.CharacterId].Name
    self.priceTxt.text = self.zSkin.StorePrice
    self.buyBtn:SetActive(true)

    if table.any(self.skins,function(v) return v.TemplateId == self.zSkin.Id  end) then
        UIPublic.InitButton(self.buyBtn,false,1,LangUtil.GetSysLang(803))
    elseif table.any(self.postSkinIds, function(p) return p.Id == self.zSkin.Id end) or
            table.any(self.activtySkinIds, function(p) return p.Id == self.zSkin.Id end) then
        self.buyBtn:GetComponent("Button").enabled = true
        UIPublic.InitGoState(self.buyBtn,false)
    else
        UIPublic.InitButton(self.buyBtn,true,1,LangUtil.GetSysLang(223))
    end
    
    self.live2dImage:SetActive(self.zSkin.IsSpine == 1)
    local skinA = loadtable(Z_CardSound[self.zSkin.CharacterId].A)
    local skinB = loadtable(Z_CardSound[self.zSkin.CharacterId].B)
    self.voiceImage:SetActive(table.count(skinA) > 0 or table.count(skinB) > 0)
    
    InitSkinPicture(self,self.zSkin.Id)
end



local function OnItem(self,zSkin)
    self.zSkin = zSkin
    for k,v in pairs(self.objectList) do
        SetItemState(self,v,k == self.zSkin.Id)
    end
    InitSkinInfo(self)
end


local function OnLeft(self)
    local zSkin
    for i = 1,#self.zSkins do
        if self.zSkins[i].Id == self.zSkin.Id then
            if i == 1 then
                zSkin =  self.zSkins[#self.zSkins]
                self.scrollView.horizontalScrollbar.value = 1
            else
                zSkin =self.zSkins[i-1]
                local num = ((i-1) > 1 and{ i-1} or{0})[1]
                self.scrollView.horizontalScrollbar.value = num/table.count(self.zSkins)
            end
            
        end
    end
    OnItem(self,zSkin)
    
end

local function OnRight(self)
    local zSkin
    for i = 1,#self.zSkins do
        if self.zSkins[i].Id == self.zSkin.Id then
            if i == #self.zSkins then
                zSkin =  self.zSkins[1]
                self.scrollView.horizontalScrollbar.value = 0
            else
                zSkin =self.zSkins[i+1]
                self.scrollView.horizontalScrollbar.value = (i+1)/table.count(self.zSkins)
            end
        end
    end
    OnItem(self,zSkin)
end

local function OnBuy(self)
    local postSkin = table.first(self.postSkinIds,function(v) return v.Id == self.zSkin.Id  end)
    if postSkin then--邮箱皮肤提示
        local time = TimeUtil.FormatUnixTime2Date(postSkin.Time)
        if self.zSkin.Id == 100704 and time and time.year == 2022 and (time.month == 7 or time.month == 8) then
            UIUtil.ToolTipFourth(LangUtil.GetSysLang(917), nil, nil, {type = 2})
        end
        return
    end
    local activtySkin = table.first(self.activtySkinIds,function(v) return v.Id == self.zSkin.Id end)
    if activtySkin then--活动奖励皮肤提示 
        if activtySkin.type == 1 then
            UIUtil.ToolTipFourth(string.gsub(LangUtil.GetSysLang(906),"XX", Z_ActivityLogin[activtySkin.ActivityId].Title))--此衣装可在【XX】活动领取
        end
        return
    end


    local PaidStarStone = UIPublic.GetItemAmount( Z_Misc["DIAMOND_ID"].Value[1])
    local FreeStarStone = Game.Scene.Player.FreeStarStone
    local data = {}
    data.title = LangUtil.GetSysLang(468) -- "皮肤购买"
    data.SkinId = self.zSkin.Id
    data.CharacterId = self.zSkin.CharacterId
    data.Stage = self.zSkin.Stage
    data.StorePrice = self.zSkin.StorePrice
    data.skinName = self.zSkin.Name
    data.StoreId = self.skinToGoods[self.zSkin.Id]
    if PaidStarStone >= self.zSkin.StorePrice then
        data.PaidStarStone = self.zSkin.StorePrice
        data.FreeStarStone = 0
        data.type = 1
        data.Event = function() self.ctrl:SendBuyRequest(data) end
    else
        data.type = 2
        data.msg =  LangUtil.GetSysLang(467) --"星光石不足，是否立即购买？"
        data.Event = function() UIManager:GetInstance():OpenWindow(UIWindowNames.UIStarLightStoneShop) end
    end
     local skinA = loadtable(Z_CardSound[self.zSkin.CharacterId].A)
    local skinB = loadtable(Z_CardSound[self.zSkin.CharacterId].B)
    data.hasVoice = table.count(skinA) > 0 or table.count(skinB) > 0
    --data.StoreID = self.skinToGoods[data.SkinId]
    UIManager:GetInstance():OpenWindow(UIWindowNames.ToolTipSkin , data)
end

local function InitContent(self)
    coroutine.start(function()
        local zSkins = table.choose(Z_Skin,function(k,v) 
            return v.StorePrice ~= 0 and Z_Card[v.CharacterId].NotOpen ~= 1 and v.MarryUnlock ~= 1
        end)

        local shopComponent = Game.Scene.Player:GetComponent("ShopComponent")
        
        table.sort(zSkins,function(a,b)  return a.Id < b.Id  end)
        for k,v in ipairs(self.zSkins) do
            ListChildPool:GetInstance():GetChild(pfbName,self.content,function(gameObject)
                if self.active == false then ListChildPool:GetInstance():Remove(gameObject) return end
                self.objectList[v.Id] = gameObject
                local transform = gameObject.transform:Find("Root")
                local new = transform:Find("New").gameObject
                local icon = transform:Find("Mask/Icon"):GetComponent("Image")
                local active = transform:Find("Active").gameObject
                local deActive = transform:Find("DeActive").gameObject
                local isGet = transform:Find("IsGet").gameObject
                new:SetActive(false)
                UIUtil.SetCardSprite(icon,v.CharacterId,v.Stage,CardPictureType.Middle, true)
                active:SetActive(false)
                deActive:SetActive(true)
                local _bool = false --table.any(self.skins,function(a) return a.TemplateId == v.Id  end)

                if shopComponent.PurchasesDetailList[7][self.skinToGoods[v.Id]] ~= nil then
                    _bool = shopComponent.PurchasesDetailList[7][self.skinToGoods[v.Id]].buy_times > 0 
                end

                isGet:SetActive(_bool)
                
                local idInZStore = self.skinToGoods[v.Id]
                local hint = transform:Find("Hint").gameObject
                UIUtil.AddBtnEvent(gameObject,function()OnItem(self,v)  end)
                SetItemState(self,gameObject,self.zSkin.Id == v.Id)
            end)
        end
    end)
end

local function InitActivitySkins(self)
    self.activtySkinIds = {}
    local loginInfo = table.choose(Z_ActivityLoginInfo,function(_, v)
        for _, r in pairs(v.RewardType) do
            if r == 50 then
                return true
            end
        end
        return false
    end)
    local activityDemonComponent = Game.Scene.Player:GetComponent("GameEventComponent")
    table.walk(loginInfo,function(_, v)
        if activityDemonComponent:LoginIsOpen(v.ActivityId) then
            for i, r in pairs(v.RewardType) do
                if r == 50 then
                    local skin = {}
                    skin.Id = v.TemplateId[i]
                    skin.ActivityId = v.ActivityId
                    skin.type = 1
                    table.insert(self.activtySkinIds, skin)
                end
            end
        end
    end)
end


function this.OnCreate(self)
    base.OnCreate(self)

    self.mainSkin = self.rc:GetObject("Skin"):GetComponent("Image")
    self.paint = self.rc:GetObject("Paint"):GetComponent("Image")
    self.scrollView = self.rc:GetObject("Scroll View"):GetComponent("ScrollRect")
    
    local img = self.rc:GetObject("FreeStarStoneImage"):GetComponent("Image")
    UIUtil.SetSprite(img, AtlasConfig.Item, GetItemIcon(Z_Item[ tonumber(Z_Misc["FREE_DIAMOND_ID"].Value[1]) ]))
    self.buyBtn = self.rc:GetObject("BuyButton") 
    self.backBtn = self.rc:GetObject("BackButton")

    self.live2dImage = self.rc:GetObject("LiveImage")
    self.voiceImage = self.rc:GetObject("VoiceImage")
    self.qImage = self.rc:GetObject("QImage")
    
    local rightBtn = self.rc:GetObject("RightBtn")
    local leftBtn = self.rc:GetObject("LeftBtn")
    self.content = self.rc:GetObject("Content").transform
    
    UIUtil.AddBtnEvent(self.buyBtn,function()OnBuy(self)end)
    UIUtil.AddBtnEvent(leftBtn,function()OnLeft(self)end)
    UIUtil.AddBtnEvent(rightBtn,function()OnRight(self)end)
    UIUtil.AddBtnEvent(self.backBtn,function()
        UIManager:GetInstance():CloseWindow(UIWindowNames.UISkinShop)
        -- local window =UIManager:GetInstance():GetWindow(UIWindowNames.UIHome)
        -- local view =window.View
        -- view:ToolTip()
    end)

end
function this.OnLangCreate (self)
    self.skinName = LangUtil.BindText(self.rc:GetObject("SkinName"), FontType.All_Number)
    self.priceTxt = LangUtil.BindText(self.rc:GetObject("Price"), FontType.All_Number)
    self.cardName = LangUtil.BindText(self.rc:GetObject("CardName"))
    LangUtil.BindText(self.backBtn.transform:Find("Text")).text = LangUtil.GetSysLang(457) -- 衣装
    --LangUtil.BindText(self.rc:GetObject("Desc")).text = LangUtil.GetSysLang(466) --获得该角色全属性
    LangUtil.GetSpriteLang(327, function (sprite) self.buyBtn:GetComponent("Image").sprite = sprite end)
    LangUtil.GetSpriteLang(328, function (sprite) 
        local img = self.live2dImage:GetComponent("Image")
        img.sprite = sprite
        img:SetNativeSize()
    end)
    LangUtil.GetSpriteLang(329, function (sprite) 
        local img = self.voiceImage:GetComponent("Image")
        img.sprite = sprite
        img:SetNativeSize()
    end)
end

local function OnSkinInfoChg(self)
    self.skins = Game.Scene.Player:GetComponent("SkinComponent").Skins
    self.buyBtn:SetActive(true)
    UIPublic.InitButton(self.buyBtn,false,1,LangUtil.GetSysLang(803))
    
    for k,v in pairs(self.objectList) do
        local transform = v.transform:Find("Root")
        local deActive = transform:Find("DeActive").gameObject
        local isGet = transform:Find("IsGet").gameObject
        local _bool = table.any(self.skins,function(a) return a.TemplateId == k  end)
        deActive:SetActive(not _bool)
        isGet:SetActive(_bool)
    end
end

function this.OnEnable(self)
    base.OnEnable(self)
    self.info = self.model.info 
    self.zSkins = {}
    self.skinToGoods = {}
    -- for k,v in table.pairsByKeys(Z_Skin) do
    --     if v.StorePrice ~= 0 and Z_Card[v.CharacterId].NotOpen ~= 1 and v.MarryUnlock ~= 1 then -- 卡片开放  且不是结婚解锁
    --         table.insert(self.zSkins,v)
    --     end
    -- end
    for _, goodsInfo in pairs(Z_Store) do
        if goodsInfo.StoreType == StoreType.Skin then
            local skinInfo = Z_Skin[goodsInfo.GoodsId]
            if skinInfo ~= nil then
                table.insert(self.zSkins, skinInfo)
                self.skinToGoods[goodsInfo.GoodsId] = goodsInfo.Id
            end
        end
    end
    table.sort(self.zSkins,function(a,b)  return a.Id > b.Id  end) ---2023新增 编号大的排前面

    self.postSkinIds = Game.Scene.Player:GetComponent("PostBoxComponent").SkinIds
    InitActivitySkins(self)

    self:OnRefresh()
    InitContent(self)
    --if self.model.modeType ~= 1 then
    --    coroutine.start(function()
     --       Game.Scene:GetComponent("BgmComponent"):CoPlay(BgmType.UI,"Store")
      --  end)
   -- end
end

function this.OnRefresh(self)
    self.objectList = {}
    self.content.transform:DOLocalMoveX(0,0)
    self.skins = Game.Scene.Player:GetComponent("SkinComponent").Skins
    -- if self.info ~= nil and self.info.skinId ~= nil then
    --     self.zSkin = table.first(Z_Skin,function(v)return v.Id == self.info.skinId   end)
    -- else
    --     self.zSkin = Z_Skin[100104]
    -- end
    --self.zSkin = table.first(self.zSkins,function(v)return v.Id == self.info.skinId   end)
    self.zSkin = Z_Skin[self.zSkins[1].Id] ---默认显示第一个皮肤
    InitSkinInfo(self)
end

function this.OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(UIMessageNames.ON_SKIN_INFO_CHG,OnSkinInfoChg)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveUIListener(UIMessageNames.ON_SKIN_INFO_CHG)
end

function this.OnViewTop(self)
    base.OnViewTop(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIComTop)
end

function this.OnDisViewTop(self)
    base.OnDisViewTop(self)
    UIManager:GetInstance():CloseWindow(UIWindowNames.UIComTop)
end

function this.OnDisable(self)
    base.OnDisable(self)
    self.objectList = nil
    ListChildPool:GetInstance():ClearContent(self.content)
    --if self.model.modeType ~= 1 then
    --    coroutine.start(function()
    --        coroutine.waitforframes(3)
    --        Game.Scene:GetComponent("BgmComponent"):CoPlay(BgmType.UI,"Home")
    --    end)
    --end
end

function this.OnDestroy(self)
    base.OnDestroy(self)
end

return this
