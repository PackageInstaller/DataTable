---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UIActivityWeiShopView = BaseClass("UIActivityWeiShopView",UIBaseView);
local base = UIBaseView
local this = UIActivityWeiShopView
local pfbName = "ActivityShopWeiItem"

local color1 = Color.New(102/255,102/255,102/255)

local function OnToolTip(self, zStore)
    local data = {component = self.activityDemonComponent, activityInfos = self.activityInfos}
    local info = UIActivityData.OnStoreBuyLimit(zStore, data)
    --if info == 3 then--碎片不足
    --    self.face:CoPlay(1014)
    --end

    if info ~= 1 then return end
    --info == 1 可购买
end

local function SetPurCountCell(cell, num)
    if num > 0 then
        cell.activeImg:SetActive(true)
        cell.pImage:DOFade(0, 1)
        cell.LimitNumText.color = Color.white
        cell.NameText.color = Color.white
        cell.PriceText.color = Color.white
    else
        cell.activeImg:SetActive(false)
        cell.pImage:DOFade(0, 0.5)
        cell.LimitNumText.color = color1
        cell.NameText.color = color1
        cell.PriceText.color = color1
    end
end

local function InitContent(self)
    if self.isBusing then return end
    self.isBusing = true
    
    ListChildPool:GetInstance():ClearContent(self.content)
    coroutine.start(function()
        local childLines = UIActivityData.GetLinesCount(table.count(self.zData), self.constNum)
        for row = 1, childLines do
            ListChildPool:GetInstance():GetChild(pfbName, self.content, function(gameObject)
                if self.active == false then ListChildPool:GetInstance():Remove(gameObject) return end
                local itemTran = gameObject.transform:Find("Bg")
                local rowNum = UIActivityData.GetCellItemCounts(table.count(self.zData), self.constNum, row)
                
                for index = 1, self.constNum do
                    local transform = itemTran:GetChild(index - 1)
                    if index > rowNum then
                        transform.gameObject:SetActive(false)
                    else
                        transform.gameObject:SetActive(true)
                        local rank = self.constNum * (row - 1) + index
                        local zd = self.zData[rank]
                        transform.gameObject:SetActive(true)
                        local purCount = UIActivityData.GetStorePurCount(self.activityInfos, zd.Id)
                        self.ShopList[rank] = {}
                        self.ShopList[rank].go = gameObject

                        local LimitNumText= LangUtil.BindText(transform:Find("NumImg/LimitNumText"))
                        local ImageMask = transform:Find("ImageMask"):GetComponent("SoftMask")
                        local Icon = transform:Find("ImageMask/Icon"):GetComponent("Image")
                        local NumText = LangUtil.BindText(transform:Find("NumText"))
                        local NameText = LangUtil.BindText(transform:Find("Size/NameText"))
                        local PriceText = LangUtil.BindText(transform:Find("PriceText"), FontType.All_Number)
                        local buyBtn = transform:Find("Buy")
                        local activeImg = transform:Find("ActiveImg").gameObject
                        local pImage = transform:Find("Image"):GetComponent("Image")
                        local zInfo = UIActivityData.GetStoreZItemInfo(zd.GoodsType, zd.GoodsId)
                        ImageMask.enabled = zInfo.maskEnabled
                        if zInfo.maskEnabled  then
                            Icon.transform.sizeDelta = Vector2.New(130, 130)
                        else
                            Icon.transform.sizeDelta = Vector2.New(120, 120)
                        end
                        NumText.text = "x" .. zd.Amount
                        NameText.text = zInfo.name
                        UIUtil.ScrollText(NameText)
                        PriceText.text = zd.TotalPrice
                        local num = 1
                        if zd.QuotaNum > 0 then
                            num = zd.QuotaNum - purCount
                            LimitNumText.transform.parent.gameObject:SetActive(true)
                            LimitNumText.text = LangUtil.GetSysLang(461) .. " " .. num .. "/" .. zd.QuotaNum--限购 LangUtil.GetSysLang(461) ..
                        else
                            LimitNumText.transform.parent.gameObject:SetActive(false)
                        end

                        coroutine.start(function()
                            UIPublic.InitItemIcon(Icon, nil, zd.GoodsType, zd.GoodsId)
                            UIUtil.AddBtnEvent(buyBtn, function()
                                local data = {demonCount = self.activityInfos.DemonCount}
                                UIActivityData.OnStoreBuy(zd, zInfo, data, function() OnToolTip(self, zd) end)
                            end)
                        end)
                        self.ShopList[rank].LimitNumText = LimitNumText
                        self.ShopList[rank].NameText = NameText
                        self.ShopList[rank].PriceText = PriceText
                        self.ShopList[rank].activeImg = activeImg
                        self.ShopList[rank].pImage = pImage
                        SetPurCountCell(self.ShopList[rank], num)
                        
                    end
                end
            end)
        end
       
        self.isBusing = nil
    end)
end

function this.OnCreate(self)
    base.OnCreate(self);
    self.content = self.rc:GetObject("Content").transform
    local npIcon = self.rc:GetObject("NpcIcon"):GetComponent("Image")
    self.ShopList = {}
    self.face = UILandlady.New(npIcon, 1008, self.rc:GetObject("Lines"))
    UIUtil.AddBtnEvent(self.rc:GetObject("BackButton"), function() UIManager:GetInstance():CloseWindow(UIWindowNames.UIActivityWeiShop) end)
end

function this.OnLangCreate(self)
    self.timeText = LangUtil.BindText(self.rc:GetObject("timeText"))
    self.timeText.text = ""
    self.countText = LangUtil.BindText(self.rc:GetObject("WraithText"), FontType.All_Number)
    
    LangUtil.GetSpriteLang(287, function(sprite) self.rc:GetObject("TopImage"):GetComponent("Image").sprite = sprite end)
 
end

function this.OnEnable(self)
    base.OnEnable(self)
    self.isBusing = nil
    self.activityId = 1002
    self.constNum = 3
    local WraithImage = self.rc:GetObject("WraithImage"):GetComponent("Image")
    UIPublic.InitItemIcon(WraithImage, nil, GoodsKind.DemonPoint, self.activityId)
    UIUtil.AddBtnEvent(WraithImage.transform.parent, function()
        UIPublic.OpenThingsDetail(GoodsKind.DemonPoint, self.activityId)
    end)
    self.activityDemonComponent = Game.Scene.Player:GetComponent("GameEventComponent")
    self.activityInfos = self.activityDemonComponent.ActivityInfos[self.activityId]
    self.zData = UIActivityData.InitStoreData(self.activityId)

    self:OnRefresh()
    
    self.face:CoPlay(1008)
    self.countDownId = TimeUtil.GetCountDownId()
    local timeSlots = self.activityDemonComponent.TimeSlots[self.activityId]
    local countDownData = {type = TimeType.One, text = self.timeText, endTime = TimeUtil.getNewDate(timeSlots.End, 7,"DAY")}
    self.timeText.text = TimeUtil.BindTime(self.countDownId, 1, countDownData)
end

function this.OnRefresh(self)
    self.content.transform:DOLocalMoveY(0, 0)
    self.countText.text = UIUtil.ScientificCount(self.activityInfos.DemonCount)
    coroutine.start(function()
        self.activityDemonComponent:ActiveIsOpen(self.activityId, 1)
        self.countText.text = UIUtil.ScientificCount(self.activityInfos.DemonCount)
        InitContent(self)
    end)
end

local function OnItemInfoChg(self)
    self.activityDemonComponent = Game.Scene.Player:GetComponent("GameEventComponent")
    self.activityInfos = self.activityDemonComponent.ActivityInfos[self.activityId]
    self.countText.text = UIUtil.ScientificCount(self.activityInfos.DemonCount)
    for i, v in pairs(self.ShopList) do
        local store = self.zData[i]
        if store.QuotaNum > 0 then
            local purCount = UIActivityData.GetPurCount(self.activityInfos, store.Id)
            v.LimitNumText.text = LangUtil.GetSysLang(461) .. " " .. (store.QuotaNum - purCount) .. "/" .. store.QuotaNum--限购
            if store.QuotaNum - purCount <= 0 then
                SetPurCountCell(v, 0)
            end
        end
    end
end

function this.OnAddListener(self)
    base.OnAddListener(self);
    self:AddUIListener(UIMessageNames.ON_BD_INFO_CHG, OnItemInfoChg)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
    self:RemoveUIListener(UIMessageNames.ON_BD_INFO_CHG)
end

function this.OnViewTop(self)
    base.OnViewTop(self)
end

function this.OnDisViewTop(self)
    base.OnDisViewTop(self)
    self.face:Stop()
end

function this.OnDisable(self)
    base.OnDisable(self);
    ListChildPool:GetInstance():ClearContent(self.content)
    self.ShopList = {}
    self.face:Disable()
    TimeUtil.RemoveCountDown(self.countDownId)
    self.isBusing = nil
end


return this;

