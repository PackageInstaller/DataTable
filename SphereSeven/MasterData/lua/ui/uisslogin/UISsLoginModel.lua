---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by daiyi.
--- DateTime: 2019/3/21 15:22
---

local UISsLoginModel = BaseClass("UISsLoginModel", UIBaseModel)
local base = UIBaseModel

-- 创建
local function OnCreate(self)
    base.OnCreate(self)
    -- 窗口生命周期内保持的成员变量放这
end

-- 打开
local function OnEnable(self, AutoLogin)
    base.OnEnable(self)
    -- 窗口关闭时可以清理的成员变量放这
    -- 账号
    self.uid = nil
    -- 密码
    self.password = nil
    -- 服务器版本号
    self.client_ver = nil
    -- 区域名
    self.area_name = nil
    -- 服务器名
    self.server_name = nil

    self:OnRefresh(AutoLogin)
end

-- 关闭
local function OnDisable(self)
    base.OnDisable(self)
    -- 清理成员变量
    self.uid = nil
    self.password = nil
    self.client_ver = nil
    self.area_name = nil
    self.server_name = nil

    self.AutoBattleValue = nil
    self.isOptEnemySkill = nil
    self.isIgnoreCooldown = nil
end

-- 销毁
local function OnDestroy(self)
    base.OnDestroy(self)
    -- 清理成员变量
end

-- 刷新全部数据
local function OnRefresh(self,AutoLogin)
    local client_data = ClientData:GetInstance()
    --client_data:SetAccountInfo()-- 测试用
    self.uid = client_data.uid
    self.password = client_data.password
    self.client_ver = client_data.version
    self.server_id = client_data.login_server_id
    self.AutoLogin = AutoLogin
end

local function OnSelectedSvrChg(self, id)
    self.server_id = id
    self:UIBroadcast(UIMessageNames.UILOGIN_ON_SELECTED_SVR_CHG)
end

local function SetServerData(self, g2CLoginData)
    self.recommendList = {};
    self.g2CLoginData = g2CLoginData
    for a, b in pairs(Z_Server)do
        local server = table.first(g2CLoginData.ServerInfoList,function(a) return a.ServerId == b.Id end) -- 不存在该服的信息是维护
        b.Ip = server and server.Ip or nil
        b.Port = server and server.Port or nil
        b.StateInfo = server and server.StateInfo or nil
        b.ServerId = server and server.ServerId or nil
        if b.Recommended == 1 and server ~= nil then
            table.insert(self.recommendList, b.AreaId);
        end
    end
    if g2CLoginData.AccountSrvInfoList then
        self.accountList = g2CLoginData.AccountSrvInfoList;
    end
end
local function OnLoginAccountServerSucceed(self,g2CLoginData) -- 玩家账号服，服务器信息列表
    SetServerData(self, g2CLoginData)
    self:UIBroadcast(UIMessageNames.ON_LOGIN_ACCOUNT_SERVER_SUCCEED);
end

local function OnServersStateChanged(self, g2CLoginData) -- 玩家账号服，服务器信息列表
    SetServerData(self, g2CLoginData)
    self:UIBroadcast(UIMessageNames.ON_SERVERS_STATE_CHANGED);
end

local function OnLangTypeChg(self)
    self:UIBroadcast(UIMessageNames.ON_LANG_TYPE_CHG)
end

-- 监听选服变动
local function OnAddListener(self)
    base.OnAddListener(self)
    self:AddDataListener(DataMessageNames.ON_LOGIN_SERVER_ID_CHG, OnSelectedSvrChg)
    self:AddDataListener(DataMessageNames.ON_LANG_TYPE_CHG, OnLangTypeChg)
end

local function OnRemoveListener(self)
    base.OnRemoveListener(self)
    self:RemoveDataListener(DataMessageNames.ON_LOGIN_SERVER_ID_CHG, OnSelectedSvrChg)
    self:RemoveDataListener(DataMessageNames.ON_LANG_TYPE_CHG)
end

UISsLoginModel.OnCreate = OnCreate
UISsLoginModel.OnEnable = OnEnable
UISsLoginModel.OnRefresh = OnRefresh
UISsLoginModel.OnLoginAccountServerSucceed = OnLoginAccountServerSucceed
UISsLoginModel.OnServersStateChanged = OnServersStateChanged
UISsLoginModel.OnAddListener = OnAddListener
UISsLoginModel.OnRemoveListener = OnRemoveListener
UISsLoginModel.OnDisable = OnDisable
UISsLoginModel.OnDestroy = OnDestroy

return UISsLoginModel