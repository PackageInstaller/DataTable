---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/12 17:40
---
local ToolTipEightView = BaseClass("ToolTipEightView",UIBaseView)
local base = UIBaseView
local this = ToolTipEightView

local function CloseWindow()
    UIManager:GetInstance():CloseWindow(UIWindowNames.ToolTipEight)
end

local function InitBtnPanel(self)
    if self.model.data.But1 ~= nil then
        UIUtil.AddBtnEvent(self.CancelBtn,function() CloseWindow() self.model.data.But1()  end)
    else
        UIUtil.AddBtnEvent(self.CancelBtn,function() CloseWindow() end)
    end
    if self.model.data.But2 then
        self.ConfirmBtn:SetActive(true)
        UIUtil.AddBtnEvent(self.ConfirmBtn,function() CloseWindow() self.model.data.But2() end)
    else
        self.ConfirmBtn:SetActive(false)
    end
end

local function InitTypePanel(self, type)
    if IsNull(self.typeList[type]) then
        CloseWindow()
        return
    end
    local transform = self.typeList[type]
    if self.model.data.TemplateId and not self.model.data.goodsKind then--只有TemplateId时  goodsKind默认为 Item
        self.model.data.goodsKind = GoodsKind.Item
    end
    
    if type == 1 then--需要 goodsKind、TemplateId
        LangUtil.BindText(transform:Find("MsgText")).text = self.model.data.message
        local avatar = transform:Find("ItemPrefab/Icon"):GetComponent("Image")
        local itemBg = transform:Find("ItemPrefab/ItemBg"):GetComponent("Image")
        UIPublic.InitItemIcon(avatar, itemBg, self.model.data.goodsKind, self.model.data.TemplateId)
        
    elseif type == 2 then--需要 goodsKind、TemplateId
        LangUtil.BindText(transform:Find("MsgText")).text = self.model.data.message
        local ItemPrefab = transform:Find("ItemPrefab")
        local avatar = ItemPrefab:Find("Icon"):GetComponent("Image")
        local itemBg = ItemPrefab:Find("ItemBg"):GetComponent("Image")
        local Label = ItemPrefab:Find("Label")
        local InfoBtn = ItemPrefab:Find("InfoBtn")
        LangUtil.BindText(ItemPrefab:Find("Num")).text = self.model.data.num ~= nil and self.model.data.num or 1 
        LangUtil.BindText(InfoBtn:Find("Text"))--.text = LangUtil.GetSysLang()
        UIUtil.AddBtnEvent(ItemPrefab, function() 
            UIPublic.OpenThingsDetail(self.model.data.goodsKind, self.model.data.TemplateId)
        end)

        if self.model.data.goodsKind == GoodsKind.FightSoul then
            if Z_FightSoul[self.model.data.TemplateId].Id > 40000 then
                LangUtil.BindText(Label:Find("Text")).text = LangUtil.GetSysLang(943)--缘结战魂
            else
                LangUtil.BindText(Label:Find("Text")).text = LangUtil.GetSysLang(259)--战魂
            end
            Label.gameObject:SetActive(true)
        else
            Label.gameObject:SetActive(false)
        end
        UIPublic.InitItemIcon(avatar, itemBg, self.model.data.goodsKind, self.model.data.TemplateId)
        
        --持有
        local item1 = transform:Find("ItemPanle/Item1")
        local item2 = transform:Find("ItemPanle/Item2")
        if self.model.data.Item1Text then--需要 Item1Text / Item1goodsKind / Item1TemplateId
            LangUtil.BindText(item1:Find("Text")).text = LangUtil.GetSysLang(312)--持有数
            LangUtil.BindText(item1:Find("Value")).text = self.model.data.Item1Text
            UIPublic.InitItemIcon(item1:Find("Image"):GetComponent("Image"), nil, self.model.data.Item1goodsKind, self.model.data.Item1TemplateId)
            item1.gameObject:SetActive(true)
        else
            item1.gameObject:SetActive(false)
        end
        if self.model.data.Item2Text then--Item2Text / Item2goodsKind / Item2TemplateId
            LangUtil.BindText(item2:Find("Text")).text = LangUtil.GetSysLang(312)
            LangUtil.BindText(item2:Find("Value")).text = self.model.data.Item2Text
            UIPublic.InitItemIcon(item2:Find("Image"):GetComponent("Image"), nil, self.model.data.Item2goodsKind, self.model.data.Item2TemplateId)
            item2.gameObject:SetActive(true)
        else
            item2.gameObject:SetActive(false)
        end
    end
    

end


function this.OnCreate(self)
    base.OnCreate(self);
    self.eventBg = self.rc:GetObject("eventBg")
    self.ConfirmBtn = self.rc:GetObject("ConfirmBtn")
    self.CancelBtn = self.rc:GetObject("CancelBtn")
    self.closeBut = self.rc:GetObject("CloseButton")
    
    local typePanel = self.rc:GetObject("TypePanel").transform
    self.typeList = {}
    for i = 0, typePanel.childCount - 1 do 
        table.insert(self.typeList, typePanel:GetChild(i))
    end
    
    UIUtil.AddBtnEvent(self.eventBg,function() CloseWindow() end)
    UIUtil.AddBtnEvent(self.closeBut,function() CloseWindow() end)
end

function this.OnLangCreate(self)
    LangUtil.BindText(self.ConfirmBtn.transform:Find("Text")).text = LangUtil.GetSysLang(370)
    LangUtil.BindText(self.CancelBtn.transform:Find("Text")).text = LangUtil.GetSysLang(371)
    
    self.title_text = LangUtil.BindText(self.rc:GetObject("TitleText"))
end

function this.OnEnable(self)
    base.OnEnable(self);
    self:OnRefresh();
end

function this.OnRefresh(self)
    self.title_text.text = self.model.data.title;
    InitBtnPanel(self)
    local type = self.model.data.type

    for k, v in pairs(self.typeList) do
        v.gameObject:SetActive(type == k)
    end
    
    InitTypePanel(self, type)
end

function this.OnAddListener(self)
    base.OnAddListener(self);
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
end

function this.OnDisable(self)
    base.OnDisable(self)
end

function this.OnDestroy(self)
    self.eventBg = nil
    self.ConfirmBtn = nil
    self.CancelBtn = nil
    self.closeBut = nil
    self.title_text = nil
    base.OnDestroy(self);
end

return this

