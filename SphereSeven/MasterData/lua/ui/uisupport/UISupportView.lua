---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/6/14 11:39
---

local UISupportView = BaseClass("UISupportView",UIBaseView)
local base = UIBaseView;
local this = UISupportView;
local prefabItemPath = "SupportItem"
local maxCount = 5

local function OnSelect(self,supCard)
    for k,v in pairs(self.team.TeamDetailList) do
        if v.MatrixPos ~= self.MatrixPos then
            if v.IsSupport == true then
                UIUtil.ToolTipFourth(LangUtil.GetSysLang(1025))--"最多只能存在一个支援角色"
                return
            end
            local card = Game.Scene.Player:GetComponent("CardComponent").Cards[v.CardId]
            if card.TemplateId == supCard.TemplateId then
                UIUtil.ToolTipFourth(LangUtil.GetSysLang(1026))--"不能选择相同角色"
                return
            end
        end
    end

    --self.selectSupCardId = supCard.Id
    --self:InitContent()
    self.team.ReplayMatrixPos = self.MatrixPos
    for k,v in pairs(self.team.TeamDetailList) do
        if v.MatrixPos == self.MatrixPos then
            table.removebyvalue(self.team.TeamDetailList,v)
        end
    end
    local teamDetail = Game.Registry:NewObject("TeamDetail",
            {CardId = supCard.Id,MatrixPos = self.MatrixPos,IsSupport = true})
    table.insert(self.team.TeamDetailList,teamDetail)
    UIManager:GetInstance():CloseWindow(UIWindowNames.UIFormatNew)
    coroutine.start(function()
        coroutine.waitforseconds(0.1)
        -- 播放援助声音
        Game.Scene:GetComponent("SoundComponent"):PlayAidSound(supCard)
        DataManager:GetInstance():Broadcast(DataMessageNames.ON_FORMAT_ARRAY_CHG)
        UIManager:GetInstance():CloseWindow(UIWindowNames.UISupport)
    end)
    
end


local function InitItem(self,transform,card)
    local zCard = Z_Card[card.TemplateId];
    local avatar = transform:Find("Icon/Value"):GetComponent("Image")
    local Icon = transform:Find("Icon").gameObject
    local frame = transform:Find("Frame"):GetComponent("Image")
    local nameTxt = LangUtil.BindText(transform:Find("NameTxt"))
    local levelTxt = LangUtil.BindText(transform:Find("LevelTxt"))
    local cardNameTxt = LangUtil.BindText(transform:Find("CardNameTxt"))
    LangUtil.BindText(transform:Find("holdText")).text = LangUtil.GetSysLang(165)..":"
    LangUtil.BindText(transform:Find("skillText"))
    local numerical = transform:Find("Numerical")
    local skillRoot = transform:Find("SKill").gameObject
    local fightSoulRoot = transform:Find("FightSoul").gameObject

    LangUtil.BindText(numerical:Find("HP")).text = LangUtil.GetSysLang(3036)
    LangUtil.BindText(numerical:Find("HP/Value"),"Number").text=""
    LangUtil.BindText(numerical:Find("ATK")).text = LangUtil.GetSysLang(3038)
    LangUtil.BindText(numerical:Find("ATK/Value"),"Number").text=""
    LangUtil.BindText(numerical:Find("SPEED")).text = LangUtil.GetSysLang(3037)
    LangUtil.BindText(numerical:Find("SPEED/Value"),"Number").text=""
    LangUtil.BindText(numerical:Find("DEF")).text = LangUtil.GetSysLang(3039)
    LangUtil.BindText(numerical:Find("DEF/Value"),"Number").text=""
    
    local subProp = transform:Find("Frame/MainProp")
    local mainProp = transform:Find("Frame/SubProp")
    local atkType = transform:Find("Frame/AtkType")
    
    UIPublic.InitSubProp(subProp,zCard)
    UIPublic.InitMainProp(mainProp,zCard)
    UIPublic.InitAtkDistance(atkType,zCard)
    
    local btn = transform:Find("Button").gameObject
    LangUtil.BindText(btn.transform:Find("Text")).text = LangUtil.GetSysLang(2049)

    nameTxt.text = card.Name
    levelTxt.text = "LV "..card.Level
    cardNameTxt.text = zCard.Name
    UIPublic.InitNumerical(numerical,card)
    UIPublic.InitSkillArea(skillRoot,card,true)
    UIPublic.InitFightSoul(fightSoulRoot,card)
    UIUtil.SetCardSprite(avatar,zCard.Id,card.SkinId,CardPictureType.Middle)
    frame.sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/RareFrame/"..UIPublic.RareNames[zCard.Rare].."_s.png")
    UIUtil.AddBtnEvent(btn,function()OnSelect(self,card)  end)
    UIUtil.AddBtnEvent(Icon,function()
        local infos = {}
        infos.CardList = {}
        table.insert(infos.CardList, card)
        infos.EquipList = card.Equips
        infos.FightSoulList = card.FightSouls
        infos.Type = 3
        infos.Id = 1
        UIManager:GetInstance():OpenWindow(UIWindowNames.UICompetitionPlayerInfo,infos)
    end)
    
    if card.IsUse == false then
        UIPublic.InitButton(btn,true,2,LangUtil.GetSysLang(2049))
    else
        UIPublic.InitButton(btn,false,2,LangUtil.GetSysLang(2050))
    end
end

function this.InitContent(self)
  self.list = {}
    for i, v in pairs(self.supCardComponent.SupCards) do
        table.insert(self.list,v)
    end
   self.scroll:RefreshData(self.list)
end


local function OnFresh(self) --点击刷新
    if self.supCardComponent.UpdataNum == maxCount then
        UIPublic.InitButton(self.freshBtn,false,1,LangUtil.GetSysLang(817)) -- 4点更新
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1027))--"刷新达到上限"
        return
    end
    UIPublic.InitButton(self.freshBtn,true,1,LangUtil.GetSysLang(326)) -- 更新
    coroutine.start(function()
        self.supCardComponent:GetAids(nil,true)
        self:Enable()
    end)
end

local function OnOrder(self,notSort) --点击倒序
    if self.orderState == 1 then
        self.orderState =2
        LangUtil.BindText(self.orderBtn.transform:Find("Text")).text = LangUtil.GetSysLang(154)
    else
        self.orderState =1
        LangUtil.BindText(self.orderBtn.transform:Find("Text")).text = LangUtil.GetSysLang(153)
    end
    if not notSort then
        self.list = {}
        for i, v in pairs(self.supCardComponent.SupCards) do
            table.insert(self.list,v)
        end
        if self.orderState ~= 1 then
            self.list = table.reverseTable(self.list)
        end
        --if  self.orderState == 1  then
        --    for k,v in table.pairsByKeys(self.objectList) do
        --        v.gameObject.transform:SetAsFirstSibling()
        --    end
        --else
        --    for k,v in table.pairsByKeys(self.objectList) do
        --        v.gameObject.transform:SetAsLastSibling()
        --    end
        --end
        self.scroll:RefreshData(self.list)
    end
    
end



function this.OnCreate(self)
    base.OnCreate(self);
    self.list={}
    self.scroll = VerticalScroll.New()
    self.scroll:SetUpdateCount(5)
    self.vertical = self.rc:GetObject("Scrollbar Vertical")
    self.scrollView = self.rc:GetObject("Scroll View"):GetComponent("ScrollRect")
    self.handle = self.vertical.transform:Find("Sliding Area/Handle")
    
    self.content = self.rc:GetObject("Content");
    self.backBtn = self.rc:GetObject("ReturnButton")
    self.freshBtn = self.rc:GetObject("FreshButton")
    self.orderBtn = self.rc:GetObject("Order")
    UIUtil.AddBtnEvent(self.backBtn,function()self.ctrl:CloseSelf() end,"Back")
    UIUtil.AddBtnEvent(self.freshBtn,function() OnFresh(self) end)
    UIUtil.AddBtnEvent(self.orderBtn,function() OnOrder(self) end)

    self.scroll:Clear()
    self.scroll:ScrollInit(self.list, self.scrollView, prefabItemPath, function (arg)
        self.objectList = {}
        local tb = {id = arg.data.Id,gameObject = arg.go}
        table.insert(self.objectList,tb)
        InitItem(self,arg.go.transform,arg.data)
    end)
end

function this.OnLangCreate(self)
    LangUtil.BindText(self.freshBtn.transform:Find("Text"))
    LangUtil.BindText(self.backBtn.transform:Find("Text")).text = LangUtil.GetSysLang(615)
    self.countTxt = LangUtil.BindText(self.rc:GetObject("Count").transform:Find("Value"),"Number")
    LangUtil.BindText(self.rc:GetObject("Count").transform:Find("Text")).text =LangUtil.GetSysLang(741)--刷新次数  
end

function this.Enable(self)
    if self.supCardComponent.UpdataNum == maxCount then
        UIPublic.InitButton(self.freshBtn,false,1,LangUtil.GetSysLang(817)) -- 4点更新
    else
        UIPublic.InitButton(self.freshBtn,true,1,LangUtil.GetSysLang(326)) -- 更新
    end
    
    self.countTxt.text =  maxCount - self.supCardComponent.UpdataNum.."/"..maxCount
    self.orderState = 2
    OnOrder(self,true)
    self:OnRefresh()
end

function this.OnEnable(self)
    base.OnEnable(self)
    self.supCardComponent = Game.Scene:GetComponent("SupCardComponent")
    if not self.supCardComponent.IsInit then
        coroutine.start(function()
            if table.count(self.supCardComponent.SupCards)== 0 then
                self.supCardComponent:GetAids()
            end
            self:Enable()
        end)
    else
        self:Enable()
    end
end

function this.OnRefresh(self)
    self.MatrixPos = self.model.MatrixPos
    self.cardList = self.supCardComponent.SupCards
    self.team = UIData.GetCurTeam()
    self:InitContent()
end

function this.Refresh(self)
    self:InitContent()
end

local function OnSupportChg(self)
   
end

function this.OnAddListener(self)
    base.OnAddListener(self);
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
end

function this.OnDisable(self)
    base.OnDisable(self);
end

function this.OnDestroy(self)
    base.OnDestroy(self);
    self.scroll:Dispose()
end

return this;