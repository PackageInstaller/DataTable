---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/3 13:59
---

local UITestLaunchAtkView = BaseClass("UITestLaunchAtkView",UIBaseView);
local base = UIBaseView;
local this = UITestLaunchAtkView

local sectionPfbName = "TestStoryItem"; -- 节预制体
local distance = 300;

--local DiffImgName = {[1] = "初级.png",[2] = "中级.png",[3] = "高级.png"};

--================================敌人区域=====================================================
local function GetMonsterData(v,zStoryLevel) --获取敌人数据
    local temp_tab = {};
    temp_tab.TemplateId = v.id;
    temp_tab.Kind = (v.boss == nil and {2} or {1})[1];
    temp_tab.Level = v.level or zStoryLevel.Level;
    temp_tab.Stage = v.stage or zStoryLevel.Stage;
    temp_tab.Star = v.star or zStoryLevel.Star;
    temp_tab.JadePearlLevel = v.jadePearlLevel or zStoryLevel.JadePearl;
    return temp_tab;
end

local function InsertData(self,batch,zStoryLevel) --填充敌人boss数据
    for k,v in table.pairsByKeys(batch) do
        local tb = GetMonsterData(v,zStoryLevel);
        if tb.Kind == 1 then
            self.bossData = tb;
        else
            if table.first(self.monsterData,function(a) return a.TemplateId == tb.TemplateId end) == nil then
                table.insert(self.monsterData,tb);
            end
        end
    end
end

local function InitMonsterAvatar(self,gameObject,monsterData) --初始化敌人头像
    if monsterData ~= nil then
        gameObject:SetActive(true)
        UIUtil.SetCardSprite(gameObject:GetComponent("Image"),monsterData.TemplateId,1,CardPictureType.Little)
      --  UIUtil.SetSprite(gameObject:GetComponent("Image"), AtlasConfig.CardLittle,Z_Card[monsterData.TemplateId].IconName);
        UIUtil.AddBtnEvent(gameObject,function(go) UIUtil.OpenThingsDetailWindow({monster = monsterData, showType = 4}) end)
    else
        gameObject:SetActive(false);
    end
end

local function InitMonsterArea(self,transform,zStoryLevel) --初始化敌人区域
    local againstComponent = Game.Scene:GetComponent("AgainstComponent");
    local bool1,batch1 = againstComponent:LoadBatch(zStoryLevel.Batch1);
    local bool2,batch2 = againstComponent:LoadBatch(zStoryLevel.Batch2);
    local bool3,batch3 = againstComponent:LoadBatch(zStoryLevel.Batch3);
    local boss = transform:Find("Boss/Avatar").gameObject
    local monsterRoot = transform:Find("MonsterList")
    
    self.bossData = nil
    self.monsterData = {}

    if bool1 then InsertData(self,batch1,zStoryLevel); end
    if bool2 then InsertData(self,batch2,zStoryLevel); end
    if bool3 then InsertData(self,batch3,zStoryLevel); end
    
    InitMonsterAvatar(self,boss,self.bossData)
    for i = 0,monsterRoot.childCount - 1 do
        InitMonsterAvatar(self,monsterRoot:GetChild(i):Find("Avatar").gameObject,self.monsterData[i + 1])
    end
end

--==========================================================================================

--====================================条件奖励区域======================================================
local function InitItemAvatar(self,transform,itemData,starNum) 
    if itemData == nil then transform.gameObject:SetActive(false) return end
    transform.gameObject:SetActive(true)
    local star = transform:Find("Star")
    if star ~= nil then
       -- local starText = star:Find("Text"):GetComponent("Text")
        if starNum ~= nil then
            star.gameObject:SetActive(true)
         --   starText.text = starNum
        else
            star.gameObject:SetActive(false)
        end
    end
    local numText = transform:Find("Text"):GetComponent("Text")
    local avatar = transform:GetComponent("Image")
    local data = itemData.reward or itemData
    numText.text = "x"..(data.num or 1)
    local rewardType = data.type or 1   --奖励类型
    
    UIPublic.InitItemIcon(avatar, nil, rewardType, data.id)
    UIUtil.AddBtnEvent(transform.gameObject, function()
        UIPublic.OpenThingsDetail(rewardType, data.id)
    end)
end

local function InitMustObtainArea(self,transform,zStoryLevel) --初始化必定奖励
    local conditionRewards = loadtable(zStoryLevel.ConditionRewards) --条件奖励 
    local firstPassRewards = loadtable(zStoryLevel.FirstPassRewards) --初通奖励 

    local itemRoot = transform:Find("ItemList")
    local firstPass = transform:Find("FirstPass/Avatar")

    InitItemAvatar(self,firstPass,firstPassRewards[1])
    for i = 0,itemRoot.childCount - 1 do
        local avatar = itemRoot:GetChild(i):Find("Avatar")
        InitItemAvatar(self,avatar,conditionRewards[i+1],i+1)
    end
end

local function InitOddObtainArea(self,transform,zStoryLevel) --初始化几率奖励
    local dropData = loadtable(zStoryLevel.DropRateRewards)
    local itemRoot = transform:Find("DropItemList")
    for i = 0,itemRoot.childCount -1 do
        local avatar = itemRoot:GetChild(i):Find("Avatar")
        InitItemAvatar(self,avatar,dropData[i+1])
    end
end


--==========================================================================================
--===================================奖励条件=====================================================

local function IsCompleteCondition(self)
    --local StoryLevelScores = Game.Scene.Player:GetComponent("StoryComponent").StoryLevelScores
    --if StoryLevelScores[self.clientData.CurTestLevelId] == nil then return {0,0,0} end
    --if StoryLevelScores[self.clientData.CurTestLevelId][1] == nil then return {0,0,0} end
    --local levelStory = StoryLevelScores[self.clientData.CurTestLevelId][1]
    --return {levelStory.IsReachRewardCond1,levelStory.IsReachRewardCond2, levelStory.IsReachRewardCond3}
end

local function InitCondition(self,transform,conditionData,id,isComplete)
    local conditionText = transform:Find("Text"):GetComponent("Text")
   -- local star = transform:Find("Star1/Star2").gameObject
    --star:SetActive(isComplete == 1)
    conditionText.text = UIPublic.GetConditionStr(conditionData);
end

local function InitConditionsArea(self,transform,zStoryLevel) --初始化奖励条件
    local conditionRewards = loadtable(zStoryLevel.ConditionRewards)
    local conditionRoot = transform:Find("bg/Condition")
   -- local sweepHint = self.fightBtn.transform:Find("Hint").gameObject
    local completeInfo = IsCompleteCondition(self)
    for i = 0,conditionRoot.childCount -1 do
        local id = i + 1
        InitCondition(self,conditionRoot:GetChild(i),conditionRewards[id],id,completeInfo[id])
    end
    local _bool = table.all(completeInfo,function(v) return v == 1  end)
   -- sweepHint:SetActive(not _bool)
   -- self.fightBtn:GetComponent("Button").enabled = _bool
end

--[[local function InitPanelDiffButton(self)
    local image = self.diffBtn:GetComponent("Image")
    UIUtil.SetSprite(image,AtlasConfig.Other,DiffImgName[self.clientData.CurLevelDifficulty])
end]]

--==========================================================================================
local function InitSectionInfoPanel(self,active) --刷新章节信息面板
    local sectionId = self.clientData.CurTestLevelId
    local diff = 1
    local zStorySection = Z_StoryTestSection[sectionId]
    self.sectionInfoPanel:SetActive(false)
    if zStorySection.LevelId == 0 and active then
        local data = {}
        data.StoryScript = zStorySection.StoryScript
        data.Id = zStorySection.Id
        self.ctrl:PlaySectionStory(data,diff);
    elseif zStorySection.LevelId ~= 0 then
        local zStoryLevel = Game.Scene:GetComponent("AgainstComponent"):GetZStoryLevel(sectionId,diff)
        local transform = self.sectionInfoPanel.transform
        local titleTxt = transform:Find("LevelTitle"):GetComponent("Text") --关卡标题
        local energyTxt = transform:Find("EnergyOutput"):GetComponent("Text") --体力消耗
        local monsterArea = transform:Find("MonsterIntellig") --敌人区域
        local mustObtainArea = transform:Find("Conditions/MustObtain") --必定奖励区域
        local oddsObtainArea = transform:Find("OddsObtain") --几率奖励区域
        local conditionsArea = transform:Find("Conditions") --奖励条件区域
        titleTxt.text = zStorySection.Name --关卡标题
        energyTxt.text = "--体力消耗:".. zStoryLevel.EnergyExpend --体力
        coroutine.start(function()
            InitMonsterArea(self,monsterArea,zStoryLevel)
            InitMustObtainArea(self,mustObtainArea,zStoryLevel)
            InitOddObtainArea(self,oddsObtainArea,zStoryLevel)
            InitConditionsArea(self,conditionsArea,zStoryLevel) --初始化奖励条件
          --  InitPanelDiffButton(self) --初始化界面难度按钮
            self.sectionInfoPanel:SetActive(true)
            UIPublic.SetPopWindowScale(self.sectionInfoPanel.transform,true);
        end)
    end
end


local function OnClickSectionButton(self,sectionId,active) --点击节
    for k,v in pairs(self.secList) do
        v.gameObject.transform:GetChild(0).gameObject:SetActive(sectionId == v.Id)
    end

   -- local diffInfoTab = self.model:GetSelectData(sectionId)
    local localDiff = 1
  --[[  if localDiff == 3 then
        if diffInfoTab[3] == false then
            localDiff = 2
            if diffInfoTab[2] == false then
                localDiff = 1
            end
        end
    elseif localDiff == 2 and diffInfoTab[2] == false then
        localDiff = 1
    end]]
    self.clientData:SetTestLevel(sectionId,localDiff)

    InitSectionInfoPanel(self,active)
end

local function InitSectionButton(self,secListData) --初始节按钮
    local gameObject = secListData.gameObject
    local transform = gameObject.transform
    local sectionId = secListData.Id
    transform:Find("Text"):GetComponent("Text").text = Z_StoryTestSection[sectionId].Name

    if not secListData.IsVir then
        gameObject:GetComponent("Image").color = Color.New(1,1,1,1)
        UIUtil.AddBtnEvent(gameObject,function(go) OnClickSectionButton(self,sectionId,true)  end)
    else
        gameObject:GetComponent("Button").enabled = false
        gameObject:GetComponent("Image").color = Color.New(1,1,1,0.65)
    end
end

local function InitSectionContent(self)
    ListChildPool:GetInstance():ClearContent(self.secContent)
    coroutine.start(function()
        for k,v in table.pairsByKeys(self.model.chapter_section_data[1].Section) do
            ListChildPool:GetInstance():GetChild(sectionPfbName,self.secContent,function(gameObject)
                local secData = {}
                secData.gameObject = gameObject
                gameObject.transform:SetAsFirstSibling()
                secData.Id = v.Id
                secData.IsVir = false
                table.insert(self.secList, secData)
                InitSectionButton(self,secData)
            end)
        end
        local lastData = self.secList[#self.secList]  --获取后2关
        local virTab = {}
        for k,v in table.pairsByKeys(Z_StoryTestSection) do
            if v.ChapterId == 1 and v.Id > lastData.Id and v.Id <=  (lastData.Id + 2) then
                table.insert(virTab,v)
            end
        end
        for k,v in table.pairsByKeys(virTab) do
            ListChildPool:GetInstance():GetChild(sectionPfbName,self.secContent,function(gameObject)
                local secData = {}
                secData.gameObject = gameObject
                gameObject.transform:SetAsFirstSibling()
                secData.Id = v.Id
                secData.IsVir = true
                table.insert(self.secList, secData)
                InitSectionButton(self,secData)
            end)
        end
        OnClickSectionButton(self,self.clientData.CurTestLevelId)

        coroutine.waitforframes(2)
        local selectData = table.first(self.secList,function(v) return v.Id == self.clientData.CurTestLevelId end)
        if selectData ~= nil then
            local select = selectData.gameObject
            local index = select.transform:GetSiblingIndex();
            local childCount = select.transform.parent.childCount;
            self.sectionView:GetComponent("ScrollRect"):DOVerticalNormalizedPos(1- index/childCount,0);
        else
            self.sectionView:GetComponent("ScrollRect"):DOVerticalNormalizedPos(0,0);
        end

    end)
end

local function OnClickReadyButton(self) --点击出击准备
    local sectionId = self.clientData.CurTestLevelId
    local diff = 1
    local zStoryLevel = Game.Scene:GetComponent("AgainstComponent"):GetZStoryLevel(sectionId,diff)
    local launchAtkData = {}
    launchAtkData.Skip = self.toggle:GetComponent("Toggle").isOn;
    launchAtkData.CurLevelId = sectionId
    launchAtkData.CurLevelDifficulty = diff
    launchAtkData.LevelType = LevelType.Test
    launchAtkData.EnergyExpend = zStoryLevel.EnergyExpend
    self.ctrl:OpenReadyWindow(launchAtkData);
end

--[[local function OnClickFightButton(self) --点击扫荡
    local sectionId = self.clientData.CurLevelId
    local diff = self.clientData.CurLevelDifficulty
    local zStoryLevel = Game.Scene.Player:GetComponent("AgainstComponent"):GetZStoryLevel(sectionId,diff)
    if zStoryLevel.EnergyExpend > Game.Scene.Player.Energy then
        UIUtil.ToolTipFourth("--体力不足");
        return;
    end
    local send_data = {};
    send_data.LevelTypeInfo = 0;
    send_data.LevelId = sectionId
    send_data.Difficulty = diff
    send_data.IsReachRewardCond1 = 1;
    send_data.IsReachRewardCond2 = 1;
    send_data.IsReachRewardCond3 = 1;
    send_data.IsSweep = 1;
    self.ctrl:SendMopUpRequest(send_data);
end]]

--[[local function InitDiffButton(self,gameObject,isOpen,id) --初始化难度按钮
    UIUtil.AddBtnEvent(gameObject,function(go)
        if self.clientData.CurLevelDifficulty ~= id then
         self.clientData:SetCurLevel(self.clientData.CurLevelId,id)
            local image = self.diffBtn:GetComponent("Image")
            UIUtil.SetSprite(image,AtlasConfig.Other,DiffImgName[id],true)
            InitSectionInfoPanel(self)
        end
        self.selectPanel:SetActive(false)
    end)
    gameObject:GetComponent("Image").color = (isOpen and {Color.New(1,1,1)} or {Color.New(0.3,0.3,0.3)})[1]
    gameObject:GetComponent("Button").enabled = isOpen
end--


--[[local function OnClickDiffButton(self) --点击难度
    self.selectPanel:SetActive(true)
    local btnRoot =  self.selectPanel.transform:Find("bg")
    local diffInfoTab = self.model:GetSelectData(self.clientData.CurLevelId)
    for i = 0,btnRoot.childCount -1 do
        local btn = btnRoot:GetChild(i).gameObject
        InitDiffButton(self,btn,diffInfoTab[i + 1],i + 1)
    end
end]]

local function ActiveAnimation(self)
    local transform = self.sectionView.transform
    transform:DOLocalMoveX(transform.localPosition.x + distance,0)
    transform:DOLocalMoveX(self.sectionViewPosX,0.5)
    --DataManager:GetInstance():Broadcast(DataMessageNames.ON_UI_TOP_CHG);
end

local function InitCurLevelId(self)
    local zStoryTestSection = Z_StoryTestSection[self.model.completed_sectionId] or table.first(Z_StoryTestSection)
    local sectionId
    if zStoryTestSection.NextSectionId ~= 0 then
        sectionId = zStoryTestSection.NextSectionId
    else
        sectionId = zStoryTestSection.Id
    end

    if self.clientData.CurTestLevelId > sectionId then
        self.clientData:SetTestLevel(1001)
    end
end

function this.OnCreate(self)
    base.OnCreate(self);
    self.secContent = self.rc:GetObject("SectionList")
    --self.selectPanel = self.rc:GetObject("SelectBg")
    self.sectionInfoPanel = self.rc:GetObject("LevelIntellig")
    self.sectionView = self.rc:GetObject("Scroll View")
    self.sectionViewPosX = self.sectionView.transform.localPosition.x
    
    self.backBtn = self.rc:GetObject("ReturnButton")
    self.intensBtn = self.rc:GetObject("IntensButton")
    self.formatBtn = self.rc:GetObject("FormatButton")
    self.toggle = self.rc:GetObject("Toggle")
   -- self.diffBtn = self.rc:GetObject("DiffButton")
    --self.fightBtn = self.rc:GetObject("FightButton")
    self.readyBtn = self.rc:GetObject("ReadyButton")
    
    UIUtil.AddBtnEvent(self.backBtn,function(go) self.ctrl:CloseSelf() end)
    UIUtil.AddBtnEvent(self.intensBtn,function(go) self.ctrl:OpenIntensWindow() end)
    UIUtil.AddBtnEvent(self.formatBtn,function(go) self.ctrl:OpenFormatWindow() end)
   -- UIUtil.AddBtnEvent(self.diffBtn,function(go)  OnClickDiffButton(self)  end)
    --UIUtil.AddBtnEvent(self.fightBtn,function(go) OnClickFightButton(self) end)
    UIUtil.AddBtnEvent(self.readyBtn,function(go) OnClickReadyButton(self) end)
   -- EventTriggerListener.Get(self.selectPanel.transform:Find("EventBg").gameObject).onLuaClick = function(go) self.selectPanel:SetActive(false)  end
   -- self.selectPanel:SetActive(false)
end

function this.OnEnable(self)
    base.OnEnable(self);
    ActiveAnimation(self)
    self:OnRefresh()
end

function this.OnRefresh(self)
    print("--刷新数据")
    self.secList = {}
    self.clientData = ClientData:GetInstance()
    InitCurLevelId(self)
    InitSectionContent(self)
end

local function OnTestCompletedChg(self)
    self:OnRefresh()
end

function this.OnAddListener(self)
    base.OnAddListener(self);
    self:AddUIListener(UIMessageNames.ON_TEST_COMPLETED_CHG,OnTestCompletedChg)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
    self:RemoveUIListener(UIMessageNames.ON_TEST_COMPLETED_CHG)
end

function this.OnDisable(self)
    base.OnDisable(self);
    ListChildPool:GetInstance():ClearContent(self.secContent)
    self.secList = {}
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this

