---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/7/11 9:54
---

---@class FriendComponent
local FriendComponent = BaseClass("FriendComponent", Component)
local base = Component
local this = FriendComponent

function this:Awake()
    base.Awake(self)
    self.Friends = {} --好友列表
    self.Requests = {} -- 申请列表

    ---@type HintComponent
    local hintComponent = Game.Scene:GetComponent("HintComponent")
    self.friendHint = hintComponent.Friend
    self.friendHint:SetCount(0)
    self.friendHint:AddChild("Requests", 0)
end

function this:CoLoadData()
    ---@type protocol.FriendDataResp
    local request = coroutine.yieldstart(Game.Scene.Session.CoCall,nil,Game.Scene.Session,
            PROTOCOL.FriendDataReq, {ActorId=1})

    if request.friends ~= nil then
        for _, friend in ipairs(request.friends) do
            self:AddOrUpdateFriend(friend)
        end
    end

    if request.requests ~= nil then
        for _, request in ipairs(request.requests) do
            self:AddOrUpdateRequest(request)
        end
    end

    return coroutine.yieldbreak(request)
end

function this:Dispose()
    base.Dispose(self)
end

---@param friend protocol.Friend
function this:AddOrUpdateFriend(friend)
    if self.Friends[friend.role.info.role_id] == nil then
        self.Friends[friend.role.info.role_id] = Game.Registry:NewObject("Friend", friend)
    else
        self.Friends[friend.role.info.role_id]:UpdateData(friend)
    end
end

---@param request protocol.SocietyRole
function this:AddOrUpdateRequest(request)
    if self.Requests[request.info.role_id] == nil then
        self.Requests[request.info.role_id] = Game.Registry:NewObject("SocietyRole", request)
        self.friendHint:GetChild("Requests"):AddChild(request.info.role_id, 1)
    else
        self.Requests[request.info.role_id]:UpdateData(request)
    end
end

function this:RemoveFriend(friendId)
    self.Friends[friendId] = nil
end

function this:RemoveRequest(roleId)
    self.Requests[roleId] = nil
    self.friendHint:GetChild("Requests"):RemoveChild(roleId)
end

function this:CheckIsFriend(releId)
    return self.Friends[releId] ~= nil
end

function this:GetFriends()
    return self.Friends
end

function this:Get(roleId)
    return self.Friends[roleId]
end

function this:GetRequests()
    return self.Requests
end

function this:GetRequest(roleId)
    return self.Requests[roleId]
end

function this:ClearApplyFriends()
    for id, value in pairs(self.Requests) do
        PublicRequest.SendRequest(
            PROTOCOL.RemoveFriendRequestReq,
            {
                role_id = id,
            },
            nil
        )
    end
end

-------------------下面是没在用的----------------------------

function this:Add(friend) --好友列表
    Logger.LogError("接口失效")
end

function this:RemoveAddFriends(friendId)
    Logger.LogError("接口失效")
end

function this:OnClickAddButton(Id)

    Logger.LogError("接口失效")

end

function this:OnClickDeleteButton(friendId, callback)
    Logger.LogError("接口失效")

end

return this