---
--- Generated by EmmyLua(https://github.com/EmmyLua)
---
local SoundComponent = BaseClass("SoundComponent",Component);
local base = Component
local soundEffectPath = "Sound/UI/点击.wav"; --ignoreCN
local soundPathTab = {
    ["Start"] = "Sound/UI/开始战斗.mp3", --ignoreCN
    ["Save"] = "Sound/UI/确定保存.mp3", --ignoreCN
    ["Back"] = "Sound/UI/返回.mp3", --ignoreCN
    ["Enter"] = "Sound/UI/进入游戏.mp3", --ignoreCN
    ["Section"] = "Sound/UI/选关3.mp3", --ignoreCN
    ["Choose"] = "Sound/UI/选择.mp3", --ignoreCN
}
local isFristLoginSoundPlayed=false
--把字符转成table
local function ZtoTable()
    table.walk(Z_CardSound,function (k,v)
        v.Face= loadtable(v.Face)
        --v.A= loadtable(v.A)
        --v.B= loadtable(v.B)
        table.insertto(v.Attack,v.AttackBreak)
    end)
end

local function Awake(self)
    base.Awake(self)
    ZtoTable()
    local ssAudio = GameObject.Find("SsAudio")
    if ssAudio == nil then
        ssAudio = GameObject("SsAudio")
        CS.UnityEngine.Object.DontDestroyOnLoad(ssAudio)
    end
    local button_sound = GameObject.Find("SsAudio/ButtonSound")
    if button_sound == nil then
        button_sound = GameObject("ButtonSound")
        button_sound.transform.parent = ssAudio.transform
    end
    local sound = GameObject.Find("SsAudio/Sound")
    if sound == nil then
        sound = GameObject("Sound")
        sound.transform.parent = ssAudio.transform
        sound.transform.parent = ssAudio.transform
    end
    self.audio_source = sound:AddComponent(typeof(AudioSource))
    self.btn_audio_source = button_sound:AddComponent(typeof(AudioSource))
    self:SetVolume(ClientData:GetInstance():GetVolume("SoundVolume"))

    local CardSound = GameObject.Find("SsAudio/CardSound")
    if CardSound == nil then
        CardSound = GameObject("CardSound")
        CardSound.transform.parent = ssAudio.transform
        CardSound.transform.parent = ssAudio.transform
    end
    self.card_audio_source = CardSound:AddComponent(typeof(AudioSource))
    self:SetCardVolume(ClientData:GetInstance():GetVolume("CardVolume"))
    self.playingPaths = nil
    --self.btnClipTab = {}
    --coroutine.start(function ()
    --    self.btnClipTab["btn"] = ResourcesManager:GetInstance():CoLoadAsync(soundEffectPath,typeof(AudioClip))
    --    self.btnClipTab["Start"] = ResourcesManager:GetInstance():CoLoadAsync(soundPathTab["Start"],typeof(AudioClip))
    --    self.btnClipTab["Save"] = ResourcesManager:GetInstance():CoLoadAsync(soundPathTab["Save"],typeof(AudioClip))
    --    self.btnClipTab["Back"] = ResourcesManager:GetInstance():CoLoadAsync(soundPathTab["Back"],typeof(AudioClip))
    --    self.btnClipTab["Enter"] = ResourcesManager:GetInstance():CoLoadAsync(soundPathTab["Enter"],typeof(AudioClip))
    --    self.btnClipTab["Section"] = ResourcesManager:GetInstance():CoLoadAsync(soundPathTab["Section"],typeof(AudioClip))
    --    self.btnClipTab["Choose"] = ResourcesManager:GetInstance():CoLoadAsync(soundPathTab["Choose"],typeof(AudioClip))
    --end)
end

local function Play(self,audioClip)
    self.audio_source.clip = audioClip
    self:SetVolume(ClientData:GetInstance():GetVolume("SoundVolume"))
    self.audio_source:Play()
end

local function AddBtnEvent(self,gameObject,soundType)
    if IsNull(gameObject:GetComponent("Button")) then return end
    local func = function()
        --if soundType == nil then
        --    self.btn_audio_source.clip = self.btnClipTab["btn"];
        --else
        --    self.btn_audio_source.clip = self.btnClipTab[soundType];
        --end
        coroutine.start(function ()
            if soundType == nil then
                self.btn_audio_source.clip = ResourcesManager:GetInstance():CoLoadAsync(soundEffectPath,typeof(AudioClip))
            else
                self.btn_audio_source.clip = ResourcesManager:GetInstance():CoLoadAsync(soundPathTab[soundType],typeof(AudioClip))
            end
            self.btn_audio_source:Play()
        end)
    end
    local btn = gameObject:GetComponent("Button")
    btn.onClick:RemoveAllListeners()
    btn.onClick:AddListener(func)
end

local function PlayButtonSound(self,soundType)
    --if string.IsNullOrEmpty(soundType)then
    --    self.btn_audio_source.clip = self.btnClipTab["btn"];
    --else
    --    self.btn_audio_source.clip = self.btnClipTab[soundType];
    --end
    coroutine.start(function ()
        if string.IsNullOrEmpty(soundType)then
            self.btn_audio_source.clip = ResourcesManager:GetInstance():CoLoadAsync(soundEffectPath,typeof(AudioClip))
        else
            self.btn_audio_source.clip = ResourcesManager:GetInstance():CoLoadAsync(soundPathTab[soundType],typeof(AudioClip))
        end
        self.btn_audio_source:Play()
    end)
end

--[[
local function Stop(self)
    self.audio_source:Stop()
end
--]]

local function SetVolume(self, vol, unBtn)
    if ClientData:GetInstance().SoundIsOn == 0 then
        vol = 0
    end
    self.audio_source.volume = vol
    if not unBtn then
        self.btn_audio_source.volume = vol
    end
end
local function  SetCardVolume(self,vol)
    if ClientData:GetInstance().CardIsOn == 0 then
        vol = 0
    end
    self.card_audio_source.volume = vol
end

local function Dispose(self)
    base.Dispose(self)
end

local function Stop(self)
    self.playingPaths = nil
    print("--停止播放音效")
    self.card_audio_source:Stop()
end

local function MainStop(self)
    print("--停止播放音效")
    self.audio_source:Stop()
end

local function GetActive(self)
    return self.audio_source.isPlaying
end


local function CoPlay(self,resPath,audio,isPreLoad)
    if audio==nil then
        audio=self.audio_source
        self:SetVolume(ClientData:GetInstance():GetVolume("SoundVolume"), true)
    end
    coroutine.start(function()
        local asset = ResourcesManager:GetInstance():CoLoadAsync(resPath,typeof(AudioClip))
        if not isPreLoad then
            audio.clip = asset
            audio:Play()
        end
   end)
end

local function CoCardPlay(self,resPath,audio,isPreLoad, isPlay)
    if audio==nil then
        audio = self.card_audio_source
        SetCardVolume(self, ClientData:GetInstance():GetVolume("CardVolume"))
    else
        audio.volume = ClientData:GetInstance():GetVolume("CardVolume")
    end
    coroutine.start(function()
        local asset = ResourcesManager:GetInstance():CoLoadAsync(resPath,typeof(AudioClip))
        if isPlay == 1 then
            if self.playingPaths == resPath then
                audio.clip = asset
                audio:Play()
            end
        elseif not isPreLoad then
            audio.clip = asset
            audio:Play()
        end
    end)
end

local function CardStop(self)
    if self.card_audio_source ~= nil then
        self.card_audio_source:Stop()
    end
end

--新加角色声音的管理----------------------------------
---每次登录游戏第一次进入主界面
local function PlayFirstLoginSound(self)
    if isFristLoginSoundPlayed then return end
    local player=Game.Scene.Player
    local mainId=player.MainUICardId
    local cardComp=Game.Scene.Player:GetComponent("CardComponent")
    local card=cardComp:Get(mainId)
    if card~=nil then
        isFristLoginSoundPlayed=true;
        return self:PlayCardSound(SoundType.Main,card,nil)
    end
end
---每次从游戏登录界面点击进入游戏时播放的语音（玩家设置的主菜单助手是谁便播放谁的这个语音）
local function PlayTitleSound(self,cardId)

    return self:PlayCardIdSound(SoundType.Title,cardId)
end
---将角色设为助手时在主界面时或在主界面点击触碰角色立绘随机播放主界面1-5的语音
local function PlayMainSound(self,card)
    if self.audio_source.isPlaying then return 0 end
    if card==nil then
        card=table.first(Game.Scene.Player:GetComponent("CardComponent").Cards)--Game.Scene.Player:GetComponent("CardComponent"):Get(Game.Scene.Player.MainUICardId)
    end
    if card~=nil then
        return self:PlayCardSound(SoundType.Main,card,nil)
    end
end
--将角色设为正宫时 每次进入自宅时或在自宅界面点击触碰角色立绘随机播放自宅1-5的语音
local function PlayHomeSound(self,card)
    if self.audio_source.isPlaying then return 0 end
    if card==nil then
        card=Game.Scene.Player:GetComponent("CardComponent"):Get(Game.Scene.Player.BedroomCardId)
    end
    if card~=nil then
        return self:PlayCardSound(SoundType.Home,card,nil)
    end
end
--在自宅点击侍寝按钮时角色播放的语音
local function PlayRestSound(self,card)
    if card==nil then
        card=Game.Scene.Player:GetComponent("CardComponent"):Get(Game.Scene.Player.BedroomCardId)
    end
    if card~=nil then
        return self:PlayCardSound(SoundType.Rest,card,nil)
    end
end
--侍寝完毕玩家恢复体力获得侍寝buff后角色播放的语音
local function PlayAfterRestSound(self,card)
    if card==nil then
        card=Game.Scene.Player:GetComponent("CardComponent"):Get(Game.Scene.Player.BedroomCardId)
    end
    if card~=nil then
        return self:PlayCardSound(SoundType.AfterRest,card,nil)
    end
end
--在援助界面被选择为援助角色时播放的语音
local function PlayAidSound(self,card)   ---------------援助功能待完善
    return self:PlayCardSound(SoundType.Aid,card,nil)
end
--在编成界面将角色加入队伍时播放的语音
local function PlayIntoSound(self,card)
    return self:PlayCardSound(SoundType.Into,card,nil)
end
--在召唤中抽到该角色时播放的语音
local function PlaySummonSound(self,card)
    self.playingPaths = nil
    return self:PlayCardSound(SoundType.Summon, card, nil, nil, nil, 1)
end
--在图鉴中进入该角色的图鉴界面时播放的语音
local function PlayArchiveSound(self,cardId)
    return self:PlayCardIdSound(SoundType.Archive,cardId)
end
--赠送角色好感度增加的礼物时播放的语音   num为加的数值(1-5%普通 6-10好的)
local function PlayGiftSound(self,card,num)
    if num<5 then
        return self:PlayCardSound(SoundType.Gift,card,nil)
    else
        return self:PlayCardSound(SoundType.GoodGift,card,nil)
    end
end
--角色在强化界面升级成功时播放的语音
local function PlayIntensifySound(self,card)
    return self:PlayCardSound(SoundType.Intensify,card,nil)
end
--角色在进化界面进化成功时播放的语音
local function PlayEvolutionSound(self,card)
    return self:PlayCardSound(SoundType.Evolution,card,nil)
end
--角色在极限突破界面时突破成功时播放的语音
local function PlayLvBreakSound(self,card)
    return self:PlayCardSound(SoundType.LvBreak,card,nil)
end
--角色在亲密度界面 id=1第一次亲密度到达25%时播放的语音
--               id=2第一次亲密度到达50%时播放的语音
--               id=3第一次亲密度到达75%时播放的语音
--               id=4第一次亲密度到达100%时播放的语音
local function PlayDegreeSound(self,card,id)
   return self:PlayCardSound(SoundType.Degree,card,nil,id)
end
--在帝国系统中给角色指派任务执行时播放的语音（帝国系统则实装后才增加）
local function PlayMissionSound(self,card)
    return self:PlayCardSound(SoundType.Mission,card,nil)
end
--在帝国系统中给角色指派任务完成时播放的语音（帝国系统则实装后才增加）
local function PlayMissionSuccessSound(self,card)
    return self:PlayCardSound(SoundType.MissionSuccess,card,nil)
end
--在召唤中抽到该角色战魂时播放的语音
--local function PlaySoulGetSound(self,fightSoulId,isPreLoad)
--    return self:PlayFightSoulIdSound(SoundType.SoulGet,fightSoulId,isPreLoad)
--end
--在战魂装备界面中被选为装备的战魂并装备成功时播放的语音
local function PlaySoulEquipSound(self,fightSoulId)
    return self:PlayFightSoulIdSound(SoundType.SoulEquip,fightSoulId)
end

--角色在亲密度界面进行结婚时播放的语音
local function PlayMarrySound(self,card)
    return self:PlayCardSound(SoundType.Marry,card,nil)
end

local function PlayBattleWinSound(self,card)
    return self:PlayCardSound(SoundType.Win,card,nil)
end

---通过Id来播放语音
function SoundComponent:PlayFightSoulIdSound(soundType,fightSoulId,isPreLoad)
    local zFightSoul=Z_FightSoul[fightSoulId]
    if zFightSoul==nil then 
        Logger.LogError("zFightSoul is nil, id is "..fightSoulId)
        return 
    end
    local soundList= zFightSoul[soundType]
    local sound
    if soundList==nil then return end
    if type(soundList) == "string" then
       sound=soundList
    else
       sound=table.randget(soundList)
    end
    if string.IsNullOrEmpty(sound) then return end
    local resPath="Sound/FightSoulSound/"..fightSoulId.."/" ..sound..".mp3"
    CoPlay(self,resPath,nil,isPreLoad)
end

---通过Id来播放语音
local function PlayCardIdSound(self,soundType,cardId,isPreLoad)
    local id=cardId
    local zs=Z_CardSound[id]
    if zs==nil then return end
    local head="N"
    if soundType==SoundType.Title then
        head="T"
    end
    local soundList= zs[soundType]
    local sound
    if soundList==nil then return end
    if type(soundList) == "string" then
       sound=soundList
    else
       sound=table.randget(soundList)
    end
    if string.IsNullOrEmpty(sound) then return end
    local resPath="Sound/"..id.."/"..head.."/"..sound..".mp3"
    CoPlay(self,resPath,nil,isPreLoad)
    return  zs.Face[head..sound]
end

---播放角色声音  返回Id为表情，立绘根据返回的表情做动作，nil为没有对应的
local function GetCardSoundPath(self, soundType, card,audio,listId,isPreLoad)
    Logger.Log("soundType:"..soundType.."  zCardId:"..card.TemplateId)
    if not isPreLoad and self.card_audio_source.isPlaying == true then return end
    local id= card.TemplateId
    local zs=Z_CardSound[id]
    if zs==nil then return end
    local head="N"
    if soundType==SoundType.Title then
        head="T"
    end
    local soundList= zs[soundType]
    --查看声音
    local sound
    if soundList==nil then return end
    if type(soundList) == "string" then
        sound=soundList
    else
        if listId==nil then
            sound=table.randget(soundList)
        else
            sound=soundList[listId]
        end
    end
    if string.IsNullOrEmpty(sound) then return end
    return "Sound/"..id.."/"..head.."/"..sound..".mp3", head, sound
end

local function PlayCardSound(self, soundType, card,audio,listId,isPreLoad, isPlay) --isPreLoad 是否是预加载
    print("soundType:"..soundType.."  zCardId:"..card.TemplateId)
    if not isPreLoad and self.card_audio_source.isPlaying == true then return end
    local id= card.TemplateId
    local zs=Z_CardSound[id]
    if zs==nil then return end
    local resPath, head, sound = self:GetCardSoundPath(soundType, card,audio,listId,isPreLoad)
    if isPlay == 1 then
        self.playingPaths = resPath
    end
    print("--播放语音:"..resPath)
    CoCardPlay(self, resPath, audio, isPreLoad, isPlay)
    --这里返回表情ID
    return  zs.Face[head..sound]
end

local function CoPlayBattleVoice(self, soundType, card, audio)
    local id= card.TemplateId
    local zs = Z_CardSound[id]
    if zs == nil then return end
    local soundList = zs[soundType]
    --查看声音
    local sound
    if soundList == nil then return end
    if type(soundList) == "string" then
        sound = soundList
    else
        sound=table.randget(soundList)
    end
    if string.IsNullOrEmpty(sound) then return end
    local resPath = "Sound/"..id.."/N/"..sound..".mp3"
    CoCardPlay(self,resPath,audio)
end

local function CoPlayCardEffect(self, soundType, card, audio, soundName)
    local id = card.TemplateId
    local zs = Z_CardSound[id]
    local name = Z_SsUnit[card.TemplateId].AbDir
    if zs == nil then return end
    local soundList= zs[soundType]
    --查看声音
    local sound
    if string.IsNullOrEmpty(soundName) then
        if soundList == nil then return end
        if type(soundList) == "string" then
            sound = soundList
        else
            sound = table.randget(soundList)
        end
    else
        sound = soundName
    end

    if string.IsNullOrEmpty(sound) then return end
    local resPath = name.."/Sounds/"..sound..".mp3"
    CoCardPlay(self,resPath,audio)
end

local function CoPlayEmperorStorm(self, audio, soundName)
    if string.IsNullOrEmpty(soundName) then
        Logger.LogError("CoPlayEmperorStorm")
        return
    end
    local resPath = "Storm/"..soundName..".mp3"
    CoCardPlay(self, resPath, audio)
end

--区别播放角色不同类型声音
SoundType = {
    Title="Title",
    Main="Main",
    Home="Home",
    Rest="Rest",
    AfterRest="AfterRest",
    Attack="Attack",
    AttackBreak="AttackBreak",
    Hurt="Hurt",
    HurtSkill="HurtSkill",
    HurtSpSkill="HurtSpSkill",
    Unable="Unable",
    Relife="Relife",
    Skill1="Skill1",
    Skill2="Skill2",
    PassivityEffect = "PassivityEfx",
    AttackEffect="AttackEfx",
    Skill1Effect="Skill1Efx",
    Skill2Effect="Skill2Efx",
    Skill3Effect="Skill3Efx",
    CutInEffect="CutInEffect",
    EmperorStorm = "EmperorStorm",
    Skill2Fast="Skill2Fast",
    BattleStart="BattleStart",
    Aid="Aid",
    Into="Into",
    Win="Win",
    Summon="Summon",
    Archive="Archive",
    Gift="Gift",
    GoodGift="GoodGift",
    Intensify="Intensify",
    Evolution="Evolution",
    LvBreak="LvBreak",
    Degree="Degree",
    Mission="Mission",
    MissionSuccess="MissionSuccess",
    SoulGet="SoulGet",
    SoulEquip="SoulEquip",
    Marry="Marry",
    Extra1="Extra1",
    Extra2="Extra2",
    Extra3="Extra3"
}
SoundComponent.Awake = Awake
SoundComponent.Play = Play
SoundComponent.SetVolume = SetVolume
SoundComponent.SetCardVolume = SetCardVolume
SoundComponent.AddBtnEvent = AddBtnEvent
SoundComponent.PlayButtonSound = PlayButtonSound
SoundComponent.Dispose = Dispose
--
SoundComponent.PlayTitleSound=PlayTitleSound
SoundComponent.PlayCardSound = PlayCardSound
SoundComponent.CoPlayCardEffect = CoPlayCardEffect
SoundComponent.PlayCardIdSound=PlayCardIdSound
SoundComponent.PlayFirstLoginSound=PlayFirstLoginSound
SoundComponent.PlayMainSound=PlayMainSound
SoundComponent.PlayHomeSound=PlayHomeSound
SoundComponent.PlayRestSound=PlayRestSound
SoundComponent.PlayAfterRestSound=PlayAfterRestSound
SoundComponent.PlayIntoSound=PlayIntoSound
SoundComponent.PlaySummonSound = PlaySummonSound
--SoundComponent.PlaySoulGetSound = PlaySoulGetSound
SoundComponent.PlayDegreeSound = PlayDegreeSound
SoundComponent.PlayLvBreakSound = PlayLvBreakSound
SoundComponent.PlayArchiveSound = PlayArchiveSound
SoundComponent.PlayAidSound = PlayAidSound
SoundComponent.PlayGiftSound = PlayGiftSound
SoundComponent.PlayIntensifySound = PlayIntensifySound
SoundComponent.PlayEvolutionSound = PlayEvolutionSound
SoundComponent.PlayMissionSound = PlayMissionSound
SoundComponent.PlayMissionSuccessSound = PlayMissionSuccessSound
SoundComponent.PlaySoulEquipSound = PlaySoulEquipSound
SoundComponent.PlayMarrySound = PlayMarrySound
SoundComponent.PlayBattleWinSound = PlayBattleWinSound
SoundComponent.Stop = Stop
SoundComponent.CoPlay = CoPlay
SoundComponent.CoCardPlay=CoCardPlay
SoundComponent.CardStop = CardStop
SoundComponent.MainStop = MainStop
SoundComponent.GetActive = GetActive
SoundComponent.CoPlayEmperorStorm = CoPlayEmperorStorm
SoundComponent.CoPlayBattleVoice = CoPlayBattleVoice 
SoundComponent.GetCardSoundPath = GetCardSoundPath 

return SoundComponent