---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by daiyi.
--- DateTime: 2019/4/18 10:36
---
local Skill = BaseClass("Skill")

local function __init(self, skillId, skillName, srcUnit, stage, zSkill, replaceParams, animEvt)
    self.SkillId = skillId
    self.Name = skillName
    self.SrcUnit = srcUnit
    --是否主动技能
    self.IsActiveSkill = false
    self.Stage = stage
    self.IsCloseFull = false
    if srcUnit.BattleCharacter.CloseDegree ~= nil then
        if srcUnit.BattleCharacter.CloseDegree>=100 then
            self.IsCloseFull = true
        end
    end
    self.LeftCooldownTurn = 0
    self.IsBuffActive = false
    self.LeftBuffActiveTurn = 0
    self.IsPanelAttrDisabled = false ---面板属性失效开关
    self.IsDisabled = false ---被动技能效果失效开关
    --self.IsExclusive = false
    self.IsDoubleHurt = false
    self.ExpectCompleteNum = 0
    self.Completes = {}
    self.TargetUnits = {}
    self.UnitResults = {}
    --由配置Z_AnimEvt的伤害或弹道事件数组的个数来决定，不需要写死在代码里，不然经常两边对不上，导致战斗卡死
    self.MultistageNum = 1
    self.LeftComboNum = 0
    
    self.ComboRates_Skill = {} -- 技能连击  key是连击次数  value是概率
    self.ComboRates_Equip = {} -- 装备连击
    self.ComboRates_FightSoul = {} -- 战魂连击
    self.ComboRates_FaithBuff = {} -- 信条buff连击
    self.ComboRates_JadePearl = {} -- 玉珠连击

    self.__scc = srcUnit:GetComponent("CharacterComponent")
    self.__snc = srcUnit:GetComponent("NumericComponent")
    self.__ssc = nil
    
    self.__smc = nil
    self.__sbc = nil
    self.__sui = nil
    self.__subc = nil
    self.__sec = nil
    self.__bc = nil

    self.ZSkill = zSkill
    if zSkill ~= nil then
        self.CooldownTurn = UIData.GetSkillAttr(SkillAttr.CooldownTurn, zSkill, srcUnit.BattleCharacter)--self.ZSkill.CooldownTurn
        -- self.CooldownTurn = 0
    end

    self.EventActions = {}
    for _, v in pairs(TriggerEvent) do
        self.EventActions[v] = {}
    end

    self.Triggers = {}
    self.Data = {}
    if zSkill ~= nil then
        self.Params = table.clone(zSkill.Params)
    end

    if replaceParams ~= nil then
        self.Params = table.clone(replaceParams)
    end

    self.AnimEvt = animEvt

    self.DoNotCd = false
end

local function onParamsInited()

end

local function GetDesc(self)
    -- todo暂时屏蔽
    -- if string.IsNullOrEmpty(self.SkillDesc) then
    --     local stageName = {LangUtil.GetSysLang(150), LangUtil.GetSysLang(151), LangUtil.GetSysLang(152)} -- 初阶 高阶 觉醒
    --     if self.ZSkill ~= nil then
    --         local skillDesc = loadtable(LangUtil.GetConfLang(self.ZSkill,"SkillDesc"))
    --         if self.IsActiveSkill then
    --             for i = 1, #self.ZSkill.Stage do
    --                 if #skillDesc > 0 then
    --                     if self.ZSkill.Stage[i] == self.Stage then
    --                         self.SkillDesc = skillDesc[i]
    --                     end
    --                 end
    --             end
    --         else -- 被动
    --             self.SkillDesc = ""
    --             for i = 1, self.Stage do
    --                 if #skillDesc > 0 then
    --                     local desc = skillDesc[i] or "" 
    --                     self.SkillDesc = self.SkillDesc.."<color=#fff2aa>"..stageName[i].."：</color>".."\n"..desc
    --                     if i ~= self.Stage then
    --                         self.SkillDesc = self.SkillDesc.."\n"
    --                     end
    --                 end
    --             end
    --         end
    --     end
    -- end
    self.SkillDesc = self.ZSkill.SkillDesc
    for index, value in ipairs(self.Params) do
        self.SkillDesc = string.gsub(self.SkillDesc, "XX" .. index, value)
    end
    
    return self.SkillDesc
end

local function __log_header(self)
    local group = self.SrcUnit.IsPlayer and "--我方" or "--敌方"
    local who = self.SrcUnit.Name
    return group.." "..who.." "..self.Name..": "
end

local function GetCooldownTurn(self)
    if self.CooldownTurn == 0 then return 0 end
    return self.CooldownTurn + math.modf(self.__snc:Get(NumericType.CooldownTurn))
end

local function SetCooldownTurn(self,turn)
    self.LeftCooldownTurn = turn
end

local function ReduceCoolDownTurn(self, turn)
    self.LeftCooldownTurn = self.LeftCooldownTurn - turn
    if self.LeftCooldownTurn < 0 then
        self.LeftCooldownTurn = 0
    end
end

local function __get_friend_all(self)
    return self.__bc:GetGroupUnits(self.__smc.Group)
end

local function __get_friend_front(self)
    return self.__bc:GetRowUnits(self.__smc.Group,MatrixRow.Front)
end

local function __get_friend_back(self)
    return self.__bc:GetRowUnits(self.__smc.Group,MatrixRow.Back)
end

local function __get_enemy_all(self)
    return self.__bc:GetGroupUnits(self.__smc:GetEnemyMatrixGroup())
end

local function __get_enemy_front(self)
    return self.__bc:GetRowUnits(self.__smc:GetEnemyMatrixGroup(),MatrixRow.Front)
end

local function __get_enemy_back(self)
    return self.__bc:GetRowUnits(self.__smc:GetEnemyMatrixGroup(),MatrixRow.Back)
end

---当战斗开始时
local function OnBattleStart(self)
    self.__smc = self.SrcUnit:GetComponent("SsUnitMatrixComponent")
    self.__sbc = self.SrcUnit:GetComponent("BuffComponent")
    self.__sui = self.SrcUnit:GetComponent("SsUnitUIComponent")
    self.__subc = self.SrcUnit:GetComponent("SsUnitBattleComponent")
    self.__sec = self.SrcUnit:GetComponent("SsUnitEffectComponent")
    self.__bc = Game.Scene:GetComponent("BattleComponent")
end

local function OnBatchStart(self)

end

---当回合开始时
local function OnRoundStart(self)

end

local function OnUnitSelfTurnStart(self)

end

---当单位行动开始时
local function OnUnitTurnStartEvent(self, unit)

end

---当行动开始时
local function OnActStart(self)

end

local function OnActStartEvent(self, unit)

end

---当攻击开始时
local function OnAtkStart(self)
    self:GetComboNum()
end

local function GetComboNum(self)
    if self.__subc.IsCac then -- 反击不允许连击
        self.LeftComboNum = 0
        return
    end
    
    if self.LeftComboNum > 0 then -- 连击数大于1时消耗1次
        self.LeftComboNum = self.LeftComboNum - 1 
    elseif self.LeftComboNum == 0 then  -- 等于0时 检测连击几率
        -- 没有连击
        if table.count(self.ComboRates_Skill) == 0 and table.count(self.ComboRates_Equip) == 0 and table.count(self.ComboRates_FightSoul) == 0 and
                table.count(self.ComboRates_FaithBuff) == 0 and table.count(self.ComboRates_JadePearl) == 0 then
            self.LeftComboNum = 0
            return
        end
        local func = function(comboRates) -- 遍历各连击次数的概率，以最高连击次数为准
            local comboNum = 0
            table.walk(comboRates, function (k, v)
                if ss.IsRandHit(v) then
                    if comboNum < k then
                        comboNum = k
                    end
                end
            end)
            return comboNum
        end
        -- 玉珠连击可以叠加
        self.LeftComboNum = math.max(func(self.ComboRates_Skill), func(self.ComboRates_Equip), func(self.ComboRates_FightSoul), func(self.ComboRates_FaithBuff)) + func(self.ComboRates_JadePearl)
    end
end

local function OnBuff(self)

end

local function BeforeSkillEffect(self, targetUnit)

end

local function AfterSkillEffect(self, targetUnit)

end

---当使用主动技能造成伤害时
local function OnUseActiveSkill(self,targetUnit)
    local result = ActiveSkillResult.New()
    for _, action in pairs(self.EventActions[TriggerEvent.OnUseActiveSkill]) do
        action(self, targetUnit, result)
    end
    return result
end

---数值逻辑 攻击前
local function BeforeHit(self,activeSkillResult,targetUnit)
    for _, action in pairs(self.EventActions[TriggerEvent.BeforeHit]) do
        action(self, targetUnit, activeSkillResult)
    end
    return activeSkillResult
end

local function BeforeHitEvent(self, activeSkillResult, atkUnit, targetUnit)
end

local function BeforeBeHit(self, activeSkillResult, atkUnit)

end

---数值逻辑 攻击命中时
local function OnHit(self,activeSkillResult,targetUnit) 
    
end

-- 表现效果击中时
local function OnHitEffect(self)
    
end

---产生暴击时
local function OnCri(self, targetUnit, activeSkillResult)
    for _, action in pairs(self.EventActions[TriggerEvent.OnCri]) do
        action(self, targetUnit, activeSkillResult)
    end
end

-----造成一段伤害之后
local function AfterDamage(self, activeSkillResult, hurtUnit)
   
end

---受到一段伤害之后
local function AfterHurt(self, activeSkillResult, atkUnit)
    for _, action in pairs(self.EventActions[TriggerEvent.AfterHurt]) do
        action(self, atkUnit, activeSkillResult)
    end
end

---受到全部伤害之后
local function AfterAllHurt(self, atkUnit, activeSkillResult)
    for _, action in pairs(self.EventActions[TriggerEvent.AfterAllHurt]) do
        action(self, atkUnit, activeSkillResult)
    end
end

---受到闪避的全部伤害之后
local function AfterAllHurtByPry(self, atkUnit, activeSkillResult)
    for _, action in pairs(self.EventActions[TriggerEvent.AfterAllHurtByPry]) do
        action(self, atkUnit, activeSkillResult)
    end
end

--- 造成任意伤害之后
local function AfterDealDamage(self, damageData, reduceHp, hurtUnit)

end

--- 被技能攻击且结算之后
local function AfterBeHitAll(self, atkUnit, activeSkillResult)
end

--- 技能结算之后
local function AfterOneTargetAllHit(self, targetUnit, activeSkillResult)
end

---当攻击结束时
local function OnAtkEnd(self)
    for _, action in pairs(self.EventActions[TriggerEvent.OnAtkEnd]) do
        action(self, activeSkillResult)
    end
end

---当有单位攻击结束时
local function OnAtkEndEvent(self, atkUnit)

end

---当行动结束时
local function OnActEnd(self)
    for _, action in pairs(self.EventActions[TriggerEvent.OnActEnd]) do
        action(self, activeSkillResult)
    end
end

---当有人行动结束时
local function OnActEndEvent(self, unit)

end

local function OnUnitSelfTurnEnd(self)
    self:ReduceCoolDownTurn(1)
end

---当单位回合结束时
local function OnUnitTurnEndEvent(self, unit)

end

---当回合结束时
local function OnRoundEnd(self)
end

---当战斗结束时
local function OnBattleEnd(self)

end

local function OnPanelAttrEnabled(self) --面板属性激活
    self.IsPanelAttrDisabled = false
end

local function OnPanelAttrDisabled(self) --面板属性反激活
    self.IsPanelAttrDisabled = true
end

---当被动技能激活时
local function OnPassiveSkillEnabled(self)
    self.IsDisabled = false
    if self.IsPanelAttrDisabled then
        self:OnPanelAttrEnabled()
    end
end

local function OnPassiveSkill2EnemyEnabled(self, entity)
    
end

---当被动技能失效时
local function OnPassiveSkillDisabled(self)
    self.IsDisabled = true
    if not self.IsPanelAttrDisabled then
        self:OnPanelAttrDisabled()
    end
end

local function OnPrySuccess(self, activeSkillResult) --闪避成功时
    
end

local function OnDead(self) --死亡时
    
end

local function OnRevive(self) --复活时

end

local function OnDeadEvent(self, unit)

end

local function OnFriendDead(self) -- 队友被打死
    
end

local function OnFriendRevive(self) -- 队友复活
    
end

local function OnContinueDebuff(self) -- 持续性debuff
    
end

local function OnBuffCalcEvent(self, unit, buff)

end

local function OnBuffAdd(self, buff)

end

local function OnBuffRemove(self, buff)

end

local function BeforeBuffAddEvent(self, buff)
end

local function OnBuffAddEvent(self, buff)

end

local function OnBuffRemoveEvent(self, buff)

end

local function OnBuffMultiply(self, buff, val, data)
end

local function AfterDeadAnim(self)
    return 0
end

local function OnHpChange(self) --血量变化时
    
end

local function BeforeHpReduceEvent(self, unit, reduceHpData)

end

local function OnReduceHpEvent(self, unit, reduceHpData)

end

local function OnHeal(self)

end

local function OnHealEvent(self, unit, hp)

end

local function OnNpChange(self) --蓝量变化时

end

local function OnKillEnemy(self, deadUnits) --杀死敌人时
    
end

local function OnUseAwaken(self) --使用觉醒时
    
end

local function GetBuffActiveAddTurn(self, level, count)
    local addTurn = 0
    return addTurn
end

local function OnDamageEvent(self, atkUnit, hurtUnit, activeSkillResult)

end

local function Dispose(self)
    
end

Skill.__init = __init
Skill.__log_header = __log_header
Skill.onParamsInited = onParamsInited

Skill.GetDesc = GetDesc
Skill.GetCooldownTurn = GetCooldownTurn
Skill.SetCooldownTurn = SetCooldownTurn
Skill.ReduceCoolDownTurn = ReduceCoolDownTurn

Skill.__get_friend_all = __get_friend_all
Skill.__get_friend_front = __get_friend_front
Skill.__get_friend_back = __get_friend_back
Skill.__get_enemy_all = __get_enemy_all
Skill.__get_enemy_front = __get_enemy_front
Skill.__get_enemy_back = __get_enemy_back

Skill.OnBuff=OnBuff
Skill.OnBattleStart = OnBattleStart
Skill.OnBatchStart = OnBatchStart
Skill.OnRoundStart = OnRoundStart
Skill.OnUnitSelfTurnStart = OnUnitSelfTurnStart
Skill.OnUnitTurnStartEvent = OnUnitTurnStartEvent
Skill.OnActStart = OnActStart
Skill.OnActStartEvent = OnActStartEvent
Skill.OnAtkStart = OnAtkStart
Skill.GetComboNum = GetComboNum
Skill.BeforeSkillEffect = BeforeSkillEffect
Skill.AfterSkillEffect = AfterSkillEffect
Skill.OnUseActiveSkill = OnUseActiveSkill
Skill.BeforeHit = BeforeHit
Skill.BeforeHitEvent = BeforeHitEvent
Skill.BeforeBeHit = BeforeBeHit
Skill.OnHit = OnHit
Skill.OnHitEffect = OnHitEffect
Skill.OnCri = OnCri
Skill.AfterDamage = AfterDamage
Skill.AfterHurt = AfterHurt
Skill.AfterAllHurt = AfterAllHurt
Skill.AfterAllHurtByPry = AfterAllHurtByPry
Skill.AfterDealDamage = AfterDealDamage
Skill.AfterBeHitAll = AfterBeHitAll
Skill.AfterOneTargetAllHit = AfterOneTargetAllHit
Skill.OnAtkEnd = OnAtkEnd
Skill.OnAtkEndEvent = OnAtkEndEvent
Skill.OnActEnd = OnActEnd
Skill.OnActEndEvent = OnActEndEvent
Skill.OnUnitSelfTurnEnd = OnUnitSelfTurnEnd
Skill.OnUnitTurnEndEvent = OnUnitTurnEndEvent
Skill.OnRoundEnd = OnRoundEnd
Skill.OnBattleEnd = OnBattleEnd

Skill.OnPanelAttrEnabled = OnPanelAttrEnabled
Skill.OnPanelAttrDisabled = OnPanelAttrDisabled
Skill.OnPassiveSkillEnabled = OnPassiveSkillEnabled
Skill.OnPassiveSkill2EnemyEnabled = OnPassiveSkill2EnemyEnabled
Skill.OnPassiveSkillDisabled = OnPassiveSkillDisabled
Skill.OnPrySuccess = OnPrySuccess
Skill.OnDead = OnDead
Skill.OnRevive = OnRevive
Skill.OnHpChange = OnHpChange
Skill.BeforeHpReduceEvent = BeforeHpReduceEvent
Skill.OnReduceHpEvent = OnReduceHpEvent
Skill.OnHeal = OnHeal
Skill.OnHealEvent = OnHealEvent
Skill.OnNpChange = OnNpChange
Skill.OnKillEnemy = OnKillEnemy
Skill.OnUseAwaken = OnUseAwaken
Skill.AfterDeadAnim = AfterDeadAnim
Skill.OnDeadEvent = OnDeadEvent
Skill.OnFriendDead = OnFriendDead
Skill.OnFriendRevive = OnFriendRevive
Skill.OnContinueDebuff = OnContinueDebuff
Skill.OnBuffCalcEvent = OnBuffCalcEvent
Skill.OnBuffAdd = OnBuffAdd
Skill.OnBuffRemove = OnBuffRemove
Skill.BeforeBuffAddEvent = BeforeBuffAddEvent
Skill.OnBuffAddEvent = OnBuffAddEvent
Skill.OnBuffRemoveEvent = OnBuffRemoveEvent
Skill.OnBuffMultiply = OnBuffMultiply
Skill.OnDamageEvent = OnDamageEvent
Skill.Dispose = Dispose
Skill.GetBuffActiveAddTurn = GetBuffActiveAddTurn

return Skill