---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/3 13:59
---

local UITestBattleLevelView = BaseClass("UITestBattleLevelView", UIBaseView);
local base = UIBaseView;
local this = UITestBattleLevelView

local pfbName = "TestBattleLevelItem"

function this.OnCreate(self)
    base.OnCreate(self);
    self.scroll = VerticalScroll.New()
    self.scroll:SetUpdateCount(3)
    self.scrollView = self.rc:GetObject("Scroll View"):GetComponent("ScrollRect")

    UIUtil.AddBtnEvent(self.rc:GetObject("bg"), function(go)
        UIManager:GetInstance():CloseWindow(UIWindowNames.UITestBattleLevel);
    end)
    UIUtil.AddBtnEvent(self.rc:GetObject("CloseButton"), function(go)
        UIManager:GetInstance():CloseWindow(UIWindowNames.UITestBattleLevel);
    end)
end

function this.OnLangCreate(self)

end

function this.OnEnable(self)
    base.OnEnable(self);

    self:OnRefresh()
end

local function InsertData(monsterData, batch, zData, batchi)
    --local posTem = { [1] = { 6, 3, 9 }, [2] = { 5, 2, 8 }, [3] = { 4, 1, 7 } }
    
    for _, v in table.pairsByKeys(batch) do
        local num = v.num and v.num or 1
        if num > 1 and v.pos ~= nil then
            Logger.Log(zData.Id .. "  " .. batchi .. "  " .. "-----------人数：" .. num .. "--------------位置：" .. v.pos)
        elseif not v.row or v.row < 1 or v.row > 3 then
            Logger.Log(zData.Id ..  "  " .. batchi .. "  " .. "-------------------行数有误--------------------------")
        else
            for i = 1, num do
                local temp_tab = table.clone(v)
                temp_tab.TemplateId = v.id
                temp_tab.BattleArrayKind = zData.BattleArrayKind
                temp_tab.BattleArrayLevel = zData.BattleArrayLevel
                temp_tab.FormatIntens = zData.FormatIntens
                temp_tab.boss = (v.boss == nil and { 2 } or { 1 })[1]
                temp_tab.row = v.row

                if v.pos ~= nil then
                    if not table.any(monsterData, function(mmv) return mmv.pos == v.pos end) then
                        temp_tab.pos = v.pos
                    else
                        Logger.Log(zData.Id ..  "  " .. batchi .. "  " .. "-------------------位置重复--------------------------")
                    end 
                elseif v.row ~= nil then
                    local curRowMonsters = table.choose(monsterData,function (mmk, mmv)
                        return v.row == mmv.row
                    end)
                    if table.count(curRowMonsters) == 0 then
                        if v.row == 1 then temp_tab.pos = 6
                        elseif v.row == 2 then temp_tab.pos = 5
                        elseif v.row == 3 then temp_tab.pos = 4 end
                    elseif table.count(curRowMonsters) == 1 then
                        if v.row == 1 then temp_tab.pos = 9
                        elseif v.row == 2 then temp_tab.pos = 8
                        elseif v.row == 3 then temp_tab.pos = 7 end
                    elseif table.count(curRowMonsters) == 2 then
                        if v.row == 1 then temp_tab.pos = 3
                        elseif v.row == 2 then temp_tab.pos = 2
                        elseif v.row == 3 then temp_tab.pos = 1 end
                    end
                end
                --if v.pos == nil then
                --    for _, vpos in ipairs(posTem[v.row]) do
                --        if not table.any(monsterData, function(mmv) return mmv.pos == vpos end) then
                --            temp_tab.pos = vpos
                --            break
                --        end
                --    end
                --else
                --    temp_tab.pos = v.pos
                --end
                if temp_tab.pos == nil then
                    Logger.Log(zData.Id ..  "  " .. batchi  .. "  " .. "-------------------数据有误--------------------------")
                    break
                end
                table.insert(monsterData, temp_tab)
            end
        end
    end
    
end

local function InitData(self)
    local z_DataLevel = Z_LordLandLevel
    self.data = {}
    local againstComponent = Game.Scene:GetComponent("AgainstComponent");
    for k,v in table.pairsByKeys(z_DataLevel) do
        local dataTem = {}
        dataTem.ConditionRewards = loadtable(v.FirstPassRewards)
        dataTem.dataId = v.Id

        for i = 1, 3 do
            local bool, batch = againstComponent:LoadBatch(v["Batch" .. i])
            if bool then
                dataTem["Batch" .. i] = {}
                InsertData(dataTem["Batch" .. i], batch, v, i)
            end
        end

        table.insert(self.data, dataTem)
    end

end

function this.OnRefresh(self)
    self.scroll:Clear()
    InitData(self)
    
    self.scroll:ScrollInit(self.data, self.scrollView, pfbName, function(arg)
        local transform = arg.go.transform
        local data = arg.data
        local IdText = transform:Find("IdText"):GetComponent("Text")
        if data.dataId then
            IdText.text = data.dataId
        else
            IdText.text = 111111
        end
        local conditionRoot = transform:Find("Conditions/Condition")
        UIBattelModeInfo.InitConditionsArea(conditionRoot, data.ConditionRewards, { 0, 0, 0 })--条件

        local batchTransform = {}
        for i = 1, 3 do
            local tran = {}
            tran.trans = transform:Find("Batch" .. i)
            tran.cells = {}
            for icc = 0, tran.trans.childCount - 1 do
                tran.cells[icc + 1] = {}
                tran.cells[icc + 1].icc = tran.trans:GetChild(icc)
                tran.cells[icc + 1].Name = tran.cells[icc + 1].icc:Find("Name"):GetComponent("Text")
                tran.cells[icc + 1].Name.text = ""
            end
            table.insert(batchTransform, tran)
        end
        
        for i = 1, 3 do
            if data["Batch" .. i] then
                for k, v in pairs(data["Batch" .. i]) do
                    local cell = batchTransform[i].cells[v.pos]
                    cell.icc.gameObject:SetActive(true)
                    cell.Name.text = Z_Card[v.TemplateId].Name
                    if v.boss == 1 then
                        cell.Name.color = Color.red
                    else
                        cell.Name.color = Color.white
                    end
                end
                batchTransform[i].trans.gameObject:SetActive(true)
            else
                batchTransform[i].trans.gameObject:SetActive(false)
            end
        end

    end)
end

function this.OnAddListener(self)
    base.OnAddListener(self);
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
end

function this.OnViewTop(self)
    base.OnViewTop(self)
end

function this.OnDisViewTop(self)
    base.OnDisViewTop(self)
end

function this.OnDisable(self)
    base.OnDisable(self);
    self.scroll:Dispose()

end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this

