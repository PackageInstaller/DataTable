---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/19 23:10
---

local UIDetailView = BaseClass("UIDetailView",UIBaseView)
local base = UIBaseView
local this = UIDetailView
local enhanceType = "EnhanceAttack"

function this.FinalMessage(self)
    local data = self.model.data
    if data.skillType == SkillType.Attack then
        enhanceType = "EnhanceAttack"
    elseif data.skillType == SkillType.PassiveSkill then
        enhanceType = "EnhancePassiveSkill"
    elseif data.skillType == SkillType.Skill then
        enhanceType = "EnhanceSkill"
    elseif data.skillType == SkillType.Ultimate then
        enhanceType = "EnhanceUltimate"
    end
    this.InitBead(self)
    this.InitConstellation(self)
    this.InitEvolution(self)
    for index, value in ipairs(self.params) do
        data.message = string.gsub(data.message, "XX" .. index, value)
    end
    self.descTxt.text = string.sub(data.message, 2, -2)
end

function this.InitBead(self)
    local data = self.model.data
    local beadInfo = {}

    if data.character == nil then
        return
    end

    if data.character.Id == nil then
        return
    end

    for index, value in ipairs(Z_CharacterBead[data.character.Id]) do
        table.insert(beadInfo, value)
    end

    if beadInfo == nil then
        return
    end
    for i = 0, data.character.Bead do
        if beadInfo[i] ~= nil then
            for index, value in ipairs(beadInfo[i][enhanceType]) do
                if self.params[index] ~= nil then
                    self.params[index] = value + self.params[index]
                end
            end
        end
    end
end

function this.InitConstellation(self)
    local data = self.model.data
    local constellationInfo = {}

    if data.character == nil then
        return
    end

    if data.character.Id == nil then
        return
    end

    for index, value in ipairs(Z_CharacterConstellation[data.character.Id]) do
        table.insert(constellationInfo, value)
    end

    if constellationInfo == nil then
        return
    end
    for i = 0, data.character.Constellation do
        if constellationInfo[i] ~= nil then
            for index, value in ipairs(constellationInfo[i][enhanceType]) do
                if self.params[index] ~= nil then
                    self.params[index] = value + self.params[index]
                end
            end
        end
    end
end

function this.InitEvolution(self)
    local data = self.model.data
    local evoInfo = {}

    if data.character == nil then
        return
    end

    if data.character.Id == nil then
        return
    end

    for index, value in ipairs(Z_CharacterEvolution[data.character.Id]) do
        table.insert(evoInfo, value)
    end

    if evoInfo == nil then
        return
    end
    for i = 0, data.character.Star do
        if evoInfo[i] ~= nil then
            for index, value in ipairs(evoInfo[i][enhanceType]) do
                if self.params[index] ~= nil then
                    self.params[index] = value + self.params[index]
                end
            end
        end
    end
end

local function InitSkillIcon(self,id)
    local zSkill = Z_Skill[id]--self.model.data.zSkill
    if zSkill == nil and self.model.data.type == 1 then
        UIUtil.SetSprite(self.icon,AtlasConfig.SkillIcon,self.model.data.iconName,true)
    else
        UIUtil.SetSprite(self.icon,AtlasConfig.SkillIcon,zSkill.SkillIcon,true)
    end
end

local function InitPanel(self)
    local data = self.model.data
    
    self.titleTxt.text = data.title
    self.subTitleTxt.text = data.subTitle
    self.cdText.text = data.cd


    self.params = {}--data.params
    for index, value in ipairs(self.model.data.params) do
        table.insert(self.params, value)
    end
    this.FinalMessage(self)
    InitSkillIcon(self,data.id)
end

function this.InitBuff(self)
    for i = 1, 5 do
        local buffItem = self.ContentRoot.transform:Find("DescriptionObj" .. i)
        buffItem.gameObject:SetActive(false)
    end

    local data = self.model.data
    local zSkill = Z_Skill[data.id]
    if zSkill.BuffList ~= nil then
        for index, buffId in ipairs(zSkill.BuffList) do
            local buff = Z_Buff[buffId]
            if buff ~= nil then
                local buffItem = self.ContentRoot.transform:Find("DescriptionObj" .. index)
                buffItem.gameObject:SetActive(true)
                local buffIcon = buffItem.transform:Find("BG/BuffImage"):GetComponent("Image")
                local buffName = buffItem.transform:Find("BuffName"):GetComponent("Text")
                local buffDesc = buffItem.transform:Find("DescriptionText"):GetComponent("Text")
                buffName.text = "[" .. buff.Name .. "]"
                buffDesc.text = buff.Desc
                coroutine.start(function()
                    buffIcon.sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/Atlas/LittleBuff/" .. buff.LittleIcon .. ".png")
                 end)
            end
        end
    end
end

function this.OnLangCreate(self)
    self.titleTxt = LangUtil.BindText(self.langRc:GetObject("TitleText"))
    self.subTitleTxt = LangUtil.BindText(self.langRc:GetObject("SkillText"))
    self.descTxt = LangUtil.BindText(self.langRc:GetObject("DescText"))
    self.cardName = LangUtil.BindText(self.langRc:GetObject("CardName"))
    self.cdText = LangUtil.BindText(self.langRc:GetObject("CD"))
end

function this.OnCreate(self)
    base.OnCreate(self)
    self.icon = self.rc:GetObject("Value"):GetComponent("Image")
    self.ContentRoot = self.rc:GetObject("ContentRoot")
    EventTriggerListener.Get(self.rc:GetObject("EventBg")).onLuaClick = self.ctrl.CloseSelf
    UIUtil.AddBtnEvent(self.rc:GetObject("CloseButton"),function()
        self.ctrl:CloseSelf()
    end)
end

function this.OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh()
end

function this.OnRefresh(self)
    InitPanel(self)
    this.InitBuff(self)

    coroutine.start(function()
       coroutine.waitforframes(5)
       LayoutRebuilder.ForceRebuildLayoutImmediate(self.ContentRoot:GetComponent("RectTransform"))
    end)
end

function this.OnAddListener(self)
    base.OnAddListener(self)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self)
end

function this.OnDisable(self)
end

function this.OnDestroy(self)
    base.OnDestroy(self)
end

return this