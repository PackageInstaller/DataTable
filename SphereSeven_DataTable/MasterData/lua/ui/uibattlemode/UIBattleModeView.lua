---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UIBattleModeView = BaseClass("UIBattleModeView",UIBaseView);
local base = UIBaseView
local this = UIBattleModeView

CommonSettleBattleType = 
{
    [LevelType.LevelTypeStory] = true,
    [LevelType.LevelTypeSevenStar] = true,
    [LevelType.LevelTypeMonthlyTower] = true,     
    [LevelType.LevelTypeTower] = true,   
    [LevelType.LevelTypeChallenge] = true,
    [LevelType.LevelTypeGameEvent] = true,
}

local function OnStoryMode(self) --剧情
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIStoryChapter,{mode =2, kind = 1})
end
local function OnEmperorWayMode(self) --帝王之路
    UIManager:GetInstance():OpenWindow(UIWindowNames.UILordMode)
end
local function OnSevenStarMode(self) --七星
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIChallenge)
    --UIManager:GetInstance():OpenWindow(UIWindowNames.UISevenStar)
end
local function OnFourEmperorMode(self) --争霸模式
    ---@type CompetitionComponent
    local competitionComponent = Game.Scene:GetComponent("CompetitionComponent")
    competitionComponent:OpenCompetitionUI()
end

local function OnAbysmMode(self) --深渊
    UIManager:GetInstance():OpenWindow(UIWindowNames.UICommonLevel, {
        levelType = LevelType.LevelTypeChallenge,
        challengeType = ChallengeType.Dragon
    })
end

local function OnAbyssMode(self) --挑战模式
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIChallenge2)
end

local function OnBossraid()
    ---@type BossraidComponent
    local bossraidComponent = Game.Scene.Player:GetComponent("BossraidComponent")
    if bossraidComponent:GetFirstBossraid() == nil then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1419))
        return
    end
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIBossraid)
end

local function OnActivityMode(self) 
    if self.gameEventLevel == nil then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1472))
        return
    end
    ---@type GameEventComponent
    local gameEventComponent = Game.Scene.Player:GetComponent("GameEventComponent")
    local entryModule = gameEventComponent:GetGameEventModule(self.gameEventLevel.entryModuleId)
    UIManager:GetInstance():OpenWindow(entryModule.config.UIWindowsName, {
        eventId = self.gameEventLevel.eventId,
     })
end

-- local function InitActivityBtn(self)
--     local chapter = table.choose(Z_StoryChapter, function(k, v) return v.IsOpen == 1 and v.ChapterId > 1000 end) 
--     table.sort(chapter, function(a,b)  return a.ActivityType > b.ActivityType  end)

--     local activityType
--     for _, v in pairs(chapter) do
--         if self.storyComponent:ActiveStoryIsOpen(v.ActivityType, 1) then
--             activityType = v.ActivityType
--             break
--         end
--     end
    
--     local activityBtn = self.Activity:Find("Value"):GetComponent("Button")
--     if activityType then--活动开始之后的显示、按最新的活物语
--         activityBtn.enabled = true
--         LangUtil.GetSpriteByName("battle_" .. activityType, function(sprite)
--             self.Activity:GetComponent("Image").sprite = sprite
--         end)
--     else
--         activityBtn.enabled = false
--         LangUtil.GetSpriteLang(590, function(sprite)
--             self.Activity:GetComponent("Image").sprite = sprite
--         end)
--     end

-- end 

function this.OnLangCreate(self)

    local spriteKeys = {
        37, -- 主线
        584, -- 帝王
        585, -- 七星
        586, -- 争霸
        587, -- 深渊
        588, -- 双子
        589, -- 总力战
    }

    for i =1,table.count(self.btnList) do
        local img = self.btnList[i]:GetComponent("Image")
        LangUtil.GetSpriteLang(spriteKeys[i],function(sprite)
            img.sprite = sprite
        end)
    end
   
    -- UIUtil.activityBUt( self.Abysm.transform:Find("activityBut"),1,self.canvas.unity_canvas.sortingOrder,0)
    
    -- UIUtil.activityBUt( self.Abyss.transform:Find("activityBut"),1,self.canvas.unity_canvas.sortingOrder,0)
    
    -- UIUtil.activityBUt( self.SevenStar.transform:Find("activityBut"),1,self.canvas.unity_canvas.sortingOrder,1)
    
    
    -- InitActivityBtn(self)
end

function this.OnCreate(self)
    base.OnCreate(self);
    UIPublic.SetBackButton(
        self.rc:GetObject("BackButton"),
        UIWindowNames.UIBattleMode,
        407,
        function()
            local window =UIManager:GetInstance():GetWindow(UIWindowNames.UIHome)
            local view =window.View
            view:ToolTip()
        end
    )
    
    self.btnList={}
    --self.btnCtrl = self.rc:GetObject("BtnCtrl").transform
    self.Activity = self.rc:GetObject("Activity").transform
    self.FourEmperor = self.rc:GetObject("FourEmperor").transform
    self.Story = self.rc:GetObject("Story").transform
    self.Abysm = self.rc:GetObject("Abysm").transform
    self.EmperorWay = self.rc:GetObject("EmperorWay").transform
    self.SevenStar = self.rc:GetObject("SevenStar").transform
    self.Abyss = self.rc:GetObject("Abyss").transform
    self.Bossraid = self.rc:GetObject("Bossraid").transform
    table.insert(self.btnList,self.Story) -- 主线
    table.insert(self.btnList,self.EmperorWay) -- 帝王
    table.insert(self.btnList,self.SevenStar) -- 七星
    table.insert(self.btnList,self.FourEmperor) -- 争霸
    table.insert(self.btnList,self.Abysm) -- 深渊
    table.insert(self.btnList,self.Abyss) -- 双子
    table.insert(self.btnList,self.Bossraid) -- 总力战
    
    local OnModeFuncs = {OnStoryMode,OnEmperorWayMode,OnSevenStarMode,OnFourEmperorMode,OnAbysmMode,OnAbyssMode, OnBossraid}

    for i = 1, table.count(self.btnList) do
        local btn = self.btnList[i]:Find("Value")
        UIUtil.AddBtnEvent(btn,function(go) OnModeFuncs[i](self) end)  --Game.Scene:GetComponent("GuideComponent"):AutoGuide() 
    end
    
    self.storyComponent = Game.Scene.Player:GetComponent("StoryComponent")
    UIUtil.AddBtnEvent(self.Activity:Find("Value"), function(go) OnActivityMode(self) end)

    --新手引导
    local guide=Game.Scene:GetComponent("GuideComponent")
    local guideData = table.first(guide.GuideList,function (h) return h.Id == 5001  end)
    if guideData == nil or guideData.Step < guide.TotalStep[5] then
        guide:CheckStart(4,1)

        ChannelManager:GetInstance():CommonCallback(GameEvent.AtkTutorial)
    end
end

function this.OnRefresh(self)
    self.EmperorWay:Find("Mask").gameObject:SetActive(not UIPublic.CheckUIOpen(UIWindowNames.UILordMode))
    self.SevenStar:Find("Mask").gameObject:SetActive(not UIPublic.CheckUIOpen(UIWindowNames.UIChallenge))
    self.FourEmperor:Find("Mask").gameObject:SetActive(not UIPublic.CheckUIOpen(UIWindowNames.UICompetition))
    self.Abysm:Find("Mask").gameObject:SetActive(not UIPublic.CheckUIOpen(UIWindowNames.UICommonLevel, {levelType = LevelType.LevelTypeChallenge, challengeType = ChallengeType.Dragon}))
    self.Abyss:Find("Mask").gameObject:SetActive(not UIPublic.CheckUIOpen(UIWindowNames.UIChallenge2))

    ---@type BossraidComponent
    local bossraidComponent = Game.Scene.Player:GetComponent("BossraidComponent")
    self.Bossraid:Find("Mask").gameObject:SetActive(bossraidComponent:GetFirstBossraid() == nil)

    ---@type GameEventComponent
    local gameEventComponent = Game.Scene.Player:GetComponent("GameEventComponent")

    local modules = gameEventComponent:GetGameEventModule()
    local eventId = nil
    local entryModule = nil
    for k, module in pairs(modules) do
        if module.config.ModuleType == GameEventModuleType.GameEventModuleEntry
        and module.status == GameEventStatus.GameEventStatusInProgress
        and module.config.SystemType == 1 then
            eventId = module.eventId
            entryModule = module
            break
        end
    end
    
    self.gameEventLevel = nil
    if eventId ~= nil then
        self.gameEventLevel = gameEventComponent:GetGameEvent(eventId)
    end
    self.Activity.transform:Find("Image").gameObject:SetActive(true)
    self.Activity.transform:Find("Mask").gameObject:SetActive(self.gameEventLevel == nil)

    if entryModule ~= nil then
        coroutine.start(function () 
            self.Activity.transform:Find("Image"):GetComponent("Image").sprite = AtlasManager:GetInstance():CoLoadImageAsync(string.format("UI/GameEvent/%s.png", entryModule.config.StringParams[1]))
        end)
    end
end

function this.OnViewTop(self)
    base.OnViewTop(self)
    --UIManager:GetInstance():OpenWindow(UIWindowNames.UIComTop)
end

function this.OnDisViewTop(self)
    base.OnDisViewTop(self)
    --UIManager:GetInstance():CloseWindow(UIWindowNames.UIComTop)
end

function this.OnEnable(self)
    base.OnEnable(self);
    self:OnRefresh();
end

function this.OnAddListener(self)
    base.OnAddListener(self);
    -- self:AddUIListener(UIMessageNames.ON_TIME_RESET, InitActivityBtn)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
    -- self:RemoveUIListener(UIMessageNames.ON_TIME_RESET)
end

function this.OnDisable(self)
    base.OnDisable(self);
end

return this;

