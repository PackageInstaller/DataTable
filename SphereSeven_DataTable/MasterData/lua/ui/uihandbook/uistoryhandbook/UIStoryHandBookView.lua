---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---
---@class UIStoryHandBookView
---@field storyComponent StoryComponent
local UIStoryHandBookView = BaseClass("UIStoryHandBookView", UIBaseView);
local base = UIBaseView
local this = UIStoryHandBookView

local pfbName = "StoryChapterItem"
local activityName = "ActivityChapterItem"

local color1 = Color.New(97 / 255, 98 / 255, 106 / 255)

local function OnClickChapterItem(self, chapterId)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIStoryList, {ChapterId = chapterId, levelType = self.levelType})
end

local function GetChapterMaxSection(self, chapterId)
    local sections = table.choose(Z_StorySection, function(k, v) return v.ChapterId == chapterId end)
    if table.count(sections) == 0 then
        return nil
    end
    local maxId = table.first(sections).Id
    for _, v in pairs(sections) do
        if v.Id > maxId then
            maxId = v.Id
        end
    end
    return maxId
end

---@param self UIStoryHandBookView
local function GetOpenChapter(self, levelType)
    local openChapters = {}
    if levelType == LevelType.LevelTypeStory then
        for _, v in pairs(Z_StoryChapter) do
            if v.IsOpen == 1 and v.ChapterId < 1000 and v.IsMainLevel == 1 then
                local limit = 1
                local maxId = GetChapterMaxSection(self, v.ChapterId)
                if v.IsLock == 1 or maxId == nil then
                    limit = 0--锁住
                end
                table.insert(openChapters, { Id = v.Id, limit = limit, maxId = maxId })
            end
        end
    elseif levelType == LevelType.LevelTypeGameEvent then
        for _, value in pairs(Z_StoryChapter) do
            if value.IsOpen == 1 and value.IsMainLevel == 0 then
                local chapterId = value.Id
                local sections = table.choose(Z_GameEventsLevel,function(k,v)return v.ChapterId == chapterId end)
                local data = {}

                data.totalSection = table.count(sections)
                data.curSection = 0
                local completedSectionId = self.storyComponent:GetCompletedSection(chapterId, LevelType.LevelTypeGameEvent)[1]
                for _, v in pairs(sections) do
                    if completedSectionId >= v.Id then
                        data.curSection = 1 + data.curSection
                    end
                end

                --- 存在已完成的关卡
                local isOn = completedSectionId ~= 0
                
                if value.IsLock == 1 or not isOn then
                    data.limit = 0--锁住
                else
                    data.limit = 1
                end
                -- if data.curSection < data.totalSection then--物语未全部通关
                --     data.allCon = 1
                -- end
                table.insert(openChapters, { Id = value.Id, data = data })
            end
        end
    end

    return openChapters
end

local function showTips(self, transform, str)
    self.ShowTextBg.position = transform.position
    self.ShowTextBg.anchoredPosition = self.ShowTextBg.anchoredPosition + Vector3.New(0, 80, 0)
    local storyContent = self.ShowText.transform.parent
    local clampRight = storyContent.anchoredPosition.x + storyContent.sizeDelta.x / 2 - 285
    if self.ShowTextBg.anchoredPosition.x > clampRight then
        self.ShowTextBg.anchoredPosition = self.ShowTextBg.anchoredPosition - Vector3.New(self.ShowTextBg.anchoredPosition.x - clampRight + 30, 0, 0)
    end
    self.tipText.text = str
    self.ShowText:SetActive(true)
end


-- 显示有效章节和活动
local function InitStoryContent(self)
    self.ActivityView.gameObject:SetActive(false)
    self.StoryView.gameObject:SetActive(true)
    if self.storyInit then
        return
    end
    self.storyInit = true

    local openChapters = GetOpenChapter(self, LevelType.LevelTypeStory)--主线已开的章节
    if table.count(openChapters) <= 3 then
        local resolution = CS.UnityEngine.Screen.width / CS.UnityEngine.Screen.height
        self.storyHorizontalLayout.spacing = math.max(resolution * 120 - 160, 100)
    else
        self.storyHorizontalLayout.spacing = 50
    end
    coroutine.start(function()
        ListChildPool:GetInstance():ClearContent(self.storyContent)
        table.walk(openChapters, function(_, v)
            local zData = Z_StoryChapter[v.Id]
            ListChildPool:GetInstance():GetChild(pfbName, self.storyContent, function(gameObject)
                local transform = gameObject.transform
                local avatar = transform:Find("Avatar"):GetComponent("Image")
                local name = LangUtil.BindText(transform:Find("Frame/NameBg/Name"))
                local title = LangUtil.BindText(transform:Find("Frame/Title"))
                local lockImage = transform:Find("Frame/LockImage").gameObject
                local btn = transform:Find("Frame/Button")
                btn.gameObject:SetActive(true)
                avatar.sprite = DeActiveSprite

                name.text = zData.Name
                local avatarPath = ""
                lockImage:SetActive(v.limit == 0)
                if v.limit == 0 then --锁住
                    if string.IsNullOrEmpty(zData.TipsLock) then
                        title.text = ""
                        btn.gameObject:SetActive(false)
                    else
                        title.text = LangUtil.GetSysLang(930)--未开放
                        title.color = color1
                        LangUtil.BindText(btn:GetChild(0)).text = LangUtil.GetSysLang(924)--预告
                        UIUtil.AddBtnEvent(btn, function() showTips(self, gameObject.transform, zData.TipsLock) end)
                    end
                    name.color = color1
                    avatarPath = "chapter_lock_" .. zData.ChapterId .. ".png"
                else
                    --if v.limit == 1 then--1.前一关未通关、2.前一关已通关、3.已通关
                    --end
                    name.color = Color.black
                    title.color = Color.black
                    title.text = zData.Title
                    LangUtil.BindText(btn:GetChild(0)).text = LangUtil.GetSysLang(923)--简介
                    UIUtil.AddBtnEvent(btn, function() showTips(self, gameObject.transform, zData.Tips) end)
                    avatarPath = "chapter_" .. zData.ChapterId .. ".png"
                end
                UIUtil.AddBtnEvent(gameObject, function()
                    if v.limit == 0 then
                        UIUtil.ToolTipFourth(LangUtil.GetSysLang(925))--将在之后的版本更新时解锁，敬请期待
                    else
                        OnClickChapterItem(self, zData.ChapterId)
                    end
                end)
                --后面的开放章节需要3张图..lock/boss
                coroutine.start(function()
                    avatar.sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/Atlas/ChapterIcon/" .. avatarPath)
                end)
            end)
        end)

    end)
end

local function InitActivityContent(self)
    self.ActivityView.gameObject:SetActive(true)
    self.StoryView.gameObject:SetActive(false)
    if self.activityInit then
        return
    end
    self.activityInit = true
    
    local openChapters = GetOpenChapter(self, LevelType.LevelTypeGameEvent)--活动开放的章节
table.sort(openChapters, function(a, b) return a.Id < b.Id end)
    coroutine.start(function()
        ListChildPool:GetInstance():ClearContent(self.activityContent)
        table.walk(openChapters, function(_, v)
            local zData = Z_StoryChapter[v.Id]
            ListChildPool:GetInstance():GetChild(activityName, self.activityContent, function(gameObject)
                local transform = gameObject.transform
                local avatar = transform:GetComponent("Image")
                local title = LangUtil.BindText(transform:Find("Title"))
                local mask = transform:Find("mask").gameObject
                local text = LangUtil.BindText(transform:Find("Text"))
                local btn = transform:Find("Button")
                local lock = transform:Find("Lock").gameObject
                transform:Find("label").gameObject:SetActive(false)
                transform:Find("TimeBg").gameObject:SetActive(false)
                if avatar:GetComponent("Button") then
                    avatar:GetComponent("Button").enabled = false
                end
                avatar.material = nil
                avatar.sprite = DeActiveSprite

                --0.锁住、 1.上线、2.已下线
                local data = v.data
                title.text = "" --data.curSection .. "/" .. data.totalSection .. LangUtil.GetSysLang(74)--话
                text.text = ""
                if data.limit == 0 then
                    mask:SetActive(true)
                    lock:SetActive(false)
                    avatar.material = DeActiveMat
                elseif data.limit == 1 then
                    if data.allCon ~= nil then--未通关
                        lock:SetActive(true)
                        mask:SetActive(true)
                        lock.transform:Find("Image").gameObject:SetActive(false)
                        UIUtil.AddBtnEvent(avatar.gameObject, function()
                            local tipData = {}
                            tipData.title = LangUtil.GetSysLang(9)--"提示"
                            tipData.message = LangUtil.GetSysLang(937)--将在对应活动物语全关卡【普通】难易度通关后解锁
                            tipData.hideConfirmBtn = true
                            UIUtil.ToolTipFirst(tipData)
                        end)
                    else
                        mask:SetActive(false)
                        lock:SetActive(false)
                        UIUtil.AddBtnEvent(avatar.gameObject, function() OnClickChapterItem(self, zData.ChapterId) end)
                    end
                elseif data.limit == 2 then
                    if data.allCon ~= nil then--未通关
                        lock:SetActive(true)
                        mask:SetActive(true)
                        lock.transform:Find("Image").gameObject:SetActive(true)
                        LangUtil.BindText(lock.transform:Find("Image/Text")).text = LangUtil.GetSysLang(936)--消耗「追忆之钥」可解锁
                        avatar.material = DeActiveMat
                        UIUtil.AddBtnEvent(avatar.gameObject, function()
                            if self.isTwoStory then--有第二个活动  实装钥匙,点击锁住活动
                                local item = table.first(Game.Scene.Player:GetComponent("ItemComponent").Items, function(v) return v.TemplateId == 5004 end)
                                if item ~= nil and item.Amount > 0 then
                                    local tipData = {}
                                    tipData.type = 6
                                    tipData.title = LangUtil.GetSysLang(9)--"提示"
                                    tipData.message = string.gsub(LangUtil.GetSysLang(939),"XX", 1)--消费「追忆之钥」解锁此活动物语？
                                    tipData.Item1Text = item.Name
                                    tipData.Item1Value = item.Amount
                                    tipData.callBack = function()
                                        --todo解锁
                                    end
                                    UIUtil.ToolTipFirstPlus(tipData)
                                else
                                    UIUtil.ToolTipFourth(LangUtil.GetSysLang(938))--「追忆之钥」不足
                                end
                            else
                                local tipData = {}
                                tipData.title = LangUtil.GetSysLang(9)--"提示"
                                tipData.message = LangUtil.GetSysLang(935)--弹窗活动锁住,未实装钥匙
                                tipData.hideConfirmBtn = true
                                UIUtil.ToolTipFirst(tipData)
                            end
                        end)
                    else
                        mask:SetActive(false)
                        lock:SetActive(false)
                        UIUtil.AddBtnEvent(avatar.gameObject, function() OnClickChapterItem(self, zData.ChapterId) end)
                    end
                end
                if not string.IsNullOrEmpty(zData.Tips) then
                    LangUtil.BindText(btn:GetChild(0)).text = LangUtil.GetSysLang(923)--简介
                    UIUtil.AddBtnEvent(btn, function() showTips(self, gameObject.transform, zData.Tips) end)
                    btn.gameObject:SetActive(true)
                else
                    btn.gameObject:SetActive(false)
                end
                coroutine.start(function()
                    avatar.sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/StoryChapter/" .. zData.ActivityType .. ".png")
                end)
            end)
        end)
        local count = 2--占位
        if table.count(openChapters) >= 2 then
            count = 1
        end
        for i = 1, count do
            ListChildPool:GetInstance():GetChild(activityName, self.activityContent, function(gameObject)
                local transform = gameObject.transform
                local avatar = transform:GetComponent("Image")
                transform:Find("Title"):GetComponent("Text").text = ""
                transform:Find("mask").gameObject:SetActive(false)
                transform:Find("label").gameObject:SetActive(false)
                transform:Find("Lock").gameObject:SetActive(false)
                local text = LangUtil.BindText(transform:Find("Text"))
                transform:Find("TimeBg").gameObject:SetActive(false)
                transform:Find("Button").gameObject:SetActive(false)
                text.text = LangUtil.GetSysLang(930)--敬请期待
                avatar.material = nil
                avatar.sprite = DeActiveSprite
                coroutine.start(function()
                    avatar.sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/StoryChapter/image" .. i .. ".png")
                end)
                if avatar:GetComponent("Button") then
                    avatar:GetComponent("Button").enabled = false
                end
            end)
        end

    end)
end

local function OnTabButton(self, index)
    -- index 1: 主线. 2: 活动
    
    if index == 2 then
        InitActivityContent(self)
        self.levelType = LevelType.LevelTypeGameEvent
    else
        InitStoryContent(self)
        self.levelType = LevelType.LevelTypeStory
    end
    for i, v in pairs(self.btns) do
        v:GetChild(0).gameObject:SetActive(i == index)
    end

end

function this.OnLangCreate(self)
    self.tipText = LangUtil.BindText(self.ShowTextBg:Find("Text"))
    self.showTipsText = LangUtil.BindText(self.TipsPanel:Find("Tips/Text"))
    self.showTipsText.text = ""

    for i, v in pairs(self.btns) do
        LangUtil.GetSpriteLang(249 + i * 2,function(sprite) v:GetComponent("Image").sprite = sprite end)
        LangUtil.GetSpriteLang(250 + i * 2,function(sprite) v:GetChild(0):GetComponent("Image").sprite = sprite end)
    end
    
end

function this.OnCreate(self)
    base.OnCreate(self)

    self.StoryView = self.rc:GetObject("StoryView")
    self.storyContent = self.rc:GetObject("StoryContent").transform
    local LayoutElement = self.storyContent:GetComponent("LayoutElement")
    LayoutElement.minWidth = self.StoryView:GetComponent("RectTransform").rect.width
    self.storyHorizontalLayout = self.storyContent:GetComponent("HorizontalLayoutGroup")

    self.ActivityView = self.rc:GetObject("ActivityView")
    self.activityContent = self.rc:GetObject("ActivityContent").transform
    local activityLayoutElement = self.activityContent:GetComponent("LayoutElement")
    activityLayoutElement.minWidth = self.ActivityView:GetComponent("RectTransform").rect.width
    --self.activityHorizontalLayout = self.activityContent:GetComponent("HorizontalLayoutGroup")

    self.ShowText = self.rc:GetObject("ShowText").gameObject
    self.ShowText:SetActive(false)
    self.ShowTextBg = self.ShowText.transform:Find("Bg")
    EventTriggerListener.Get(self.ShowText).onLuaClick = function() self.ShowText:SetActive(false) end

    local btnCtrl = self.rc:GetObject("BtnCtrl").transform
    self.btns = {}
    for i = 0, btnCtrl.childCount - 1 do
        self.btns[i + 1] = btnCtrl:GetChild(i)
        UIUtil.AddBtnEvent(self.btns[i + 1], function() OnTabButton(self, i + 1) end)
    end

    self.TipsPanel = self.rc:GetObject("TipsPanel").transform
    local TipsBgBtn = self.rc:GetObject("TipsBgBtn")
    local Tips = self.TipsPanel:Find("Tips").gameObject
    Tips:SetActive(false)
    TipsBgBtn:SetActive(false)
    self.backButton = self.rc:GetObject("ReturnButton")
    UIPublic.SetBackButton(
            self.backButton,
            UIWindowNames.UIStoryHandBook,
            615
    )
    UIUtil.AddBtnEvent(self.backButton.transform:Find("TipsBtn"), function(go)
        local localActive = Tips.activeInHierarchy
        TipsBgBtn:SetActive(not localActive)
        Tips:SetActive(not localActive)
    end)
    UIUtil.AddBtnEvent(TipsBgBtn,function(go)
        Tips:SetActive(false)
        TipsBgBtn:SetActive(false)
    end)
    
end

function this.OnEnable(self)
    base.OnEnable(self);
    self.storyInit = false
    self.activityInit = false
    self:OnRefresh();
end

function this.OnRefresh(self)
    self.player = Game.Scene.Player
    self.storyComponent = self.player:GetComponent("StoryComponent")
    --self.againstComponent = Game.Scene:GetComponent("AgainstComponent")
    --self.clientData = ClientData:GetInstance()

    self.isTwoStory = self.storyComponent:ActiveStoryIsOpen(2) ~= nil
    if self.isTwoStory then
        self.showTipsText.text = LangUtil.GetSysLang(4072)--钥匙出现后
    else
        self.showTipsText.text = LangUtil.GetSysLang(4071)
    end
    OnTabButton(self, 1)
end

function this.OnViewTop(self)
    base.OnViewTop(self)
end

function this.OnDisViewTop(self)
    base.OnDisViewTop(self)
end

function this.OnAddListener(self)
    base.OnAddListener(self)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
end

function this.OnDisable(self)
    base.OnDisable(self);
    ListChildPool:GetInstance():ClearContent(self.storyContent)
    ListChildPool:GetInstance():ClearContent(self.activityContent)
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this;
