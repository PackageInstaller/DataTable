---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/7/2 10:20
---

local SkillLogic = {};
local this = SkillLogic;

local labConfig = {140, 141, 142, 143, 144}

local function InitSkillChild(self,transform,skillId)
    if skillId == nil or skillId == 0 then
        transform.gameObject:SetActive(false)
        return
    end
    transform.gameObject:SetActive(true)
    local zSkill = Z_Skill[skillId]
    local iconImg = transform:Find("SkillItem/ImageBg/Icon"):GetComponent("Image")
    --local labTxt = transform:Find("Top/Icon/Label/Text"):GetComponent("Text")
    local cdTxt = transform:Find("CDText"):GetComponent("Text")
    --local npTxt = transform:Find("Top/NP"):GetComponent("Text")
    local descTxt = transform:Find("SkillDescriptionText"):GetComponent("Text")
    local nameTxt = transform:Find("SkillText"):GetComponent("Text")

    UIUtil.SetSprite(iconImg,AtlasConfig.SkillIcon,zSkill.SkillIcon)
    --labTxt.text = LangUtil.GetSysLang(labConfig[labId])

    -- if labId ==1 or labId == 2 then
    --     cdTxt.gameObject:SetActive(false)
    --     npTxt.gameObject:SetActive(false)
    -- else
    --     cdTxt.gameObject:SetActive(true)
    --     npTxt.gameObject:SetActive(true)
    --     cdTxt.text = "CD:"..zSkill.CooldownTurn
    -- end
    cdTxt.text = zSkill.CooldownTurn
    nameTxt.text = zSkill.Name
    descTxt.text = zSkill.SkillDesc
end


function this.OnEnable(self)
    local pos = self.skillContent.transform.localPosition
    self.skillContent.transform:DOLocalMove(Vector3.New(9999, pos.y, pos.z), 0)
    coroutine.start(function()
        coroutine.waitforframes(1)
        self.skillContent.gameObject:SetActive(false)
        coroutine.waitforframes(1)
        self.skillContent.gameObject:SetActive(true)
        coroutine.waitforframes(1)
        self.skillContent.gameObject:SetActive(false)
        coroutine.waitforframes(1)
        self.skillContent.gameObject:SetActive(true)
        coroutine.waitforframes(1)
        self.skillContent.gameObject:SetActive(false)
        coroutine.waitforframes(1)
        self.skillContent.gameObject:SetActive(true)
        self.skillContent.transform:DOLocalMove(pos, 0)
    end)
end

function this.Init(self)
    local zCard = self.zCard
    local skillIdList = {zCard.PassiveSkill,zCard.GeneralAtk,zCard.Skill1,zCard.Skill2,zCard.Skill3}
    -- for i = 0,self.skillContent.childCount - 1 do
    --     local skillChild = self.skillContent:GetChild(i)
    --     --InitSkillChild(self,skillChild,skillIdList[i+1],i+1)
    -- end

    if zCard.GeneralAtk ~= 0 then
        self.skillContent:GetChild(1).gameObject:SetActive(true)
        InitSkillChild(self,self.skillContent:GetChild(0), zCard.GeneralAtk)
    else
        self.skillContent:GetChild(0).gameObject:SetActive(false)
    end

    if zCard.Skill1 ~= 0 then
        self.skillContent:GetChild(1).gameObject:SetActive(true)
        InitSkillChild(self,self.skillContent:GetChild(1), zCard.Skill1)
    else
        self.skillContent:GetChild(1).gameObject:SetActive(false)
    end

    if zCard.Skill2 ~= 0 then
        self.skillContent:GetChild(2).gameObject:SetActive(true)
        InitSkillChild(self,self.skillContent:GetChild(2), zCard.Skill2)
    else
        self.skillContent:GetChild(2).gameObject:SetActive(false)
    end

    if zCard.PassiveSkill ~= 0 then
        self.skillContent:GetChild(3).gameObject:SetActive(true)
        InitSkillChild(self,self.skillContent:GetChild(3), zCard.PassiveSkill)
    else
        self.skillContent:GetChild(3).gameObject:SetActive(false)
    end

end
function this.OnLangCreate(self,panel)
    local langRc = panel.transform:Find("LangControl"):GetComponent("ReferenceCollector")
    local root = langRc:GetObject("Content").transform
    table.csenuObject(root,function(v)
        local txt= v:GetComponent("Text")
        if not IsNull(txt) then
            LangUtil.BindText(txt.transform)
        end
    end)
end

function this.OnCreate(self,panel)
    local rc = panel:GetComponent("ReferenceCollector")
    self.skillContent = rc:GetObject("Content").transform
end


return SkillLogic;