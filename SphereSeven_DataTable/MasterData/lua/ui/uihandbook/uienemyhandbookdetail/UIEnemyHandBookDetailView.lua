---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/7/1 16:21
---

local UIEnemyHandBookDetailView = BaseClass("UIEnemyHandBookDetailView",UIBaseView)
local base = UIBaseView
local this = UIEnemyHandBookDetailView
local InfoLogic = require "UI.UIHandBook.UIEnemyHandBookDetail.InfoLogic"
local SkillLogic = require "UI.UIHandBook.UIEnemyHandBookDetail.SkillLogic"


local function OnClickPanelButton(self,id)
    for k,v in pairs(self.btnList) do
        local transform = v.transform
        transform:Find("Active").gameObject:SetActive(k == id)
        transform:GetComponent("Button").enabled  = (not (id ==k))
    end

    for k,v in pairs(self.panelList) do
        v:SetActive(k == id)
    end

    if id == 2 then
        SkillLogic.OnEnable(self)
    end
end

local function InitSsUnit(self)
    local zCard = self.zCard
    local transition = zCard.HandbookTransition
    local scale = Vector3.New(transition[1],transition[2],transition[3])
    local pos =  Vector3.New(transition[4],transition[5])
    local card = {TemplateId = zCard.Id,SkinId = zCard.Id}
    self.object = Game.Scene.Player:GetComponent("CardComponent"):CreatUnitByCard(card)
    if self.active == false then
        ListChildPool:GetInstance():Remove(self.object,"SsUnit")
        return
    end
    
    self.object.transform:SetParent(self.root)
    self.object.transform.localScale = scale
    self.object.transform.localPosition = pos
end

function this.OnLangCreate(self)
    --local btnRoot = self.langRc:GetObject("ButtonCtrl").transform
    --local backText = self.langRc:GetObject("BackText").transform
    local cardNameText = self.langRc:GetObject("CardNameText").transform

    -- for i=0,btnRoot.childCount - 1 do
    --     local child = btnRoot:GetChild(i)
    --     local text = child:Find("Text")
    --     local activeText = child:Find("Active/Text")
    --     --LangUtil.BindText(text).text = LangUtil.GetSysLang(276+i)
    --     --LangUtil.BindText(activeText).text = LangUtil.GetSysLang(276+i)
    --     --UIUtil.ScrollText(text:GetComponent("Text"))
    --     --UIUtil.ScrollText(activeText:GetComponent("Text"))
    -- end
   -- LangUtil.BindText(backText).text = LangUtil.GetSysLang(291)
    LangUtil.BindText(cardNameText)
    for k,v in pairs(self.logicList) do
        v.OnLangCreate(self, self.panelList[k])
    end
end


function this.OnCreate(self)
    base.OnCreate(self)
    local backBtn = self.rc:GetObject("BackButton")
    UIPublic.SetBackButton(
        backBtn,
        UIWindowNames.UIEnemyHandBookDetail,
        562
    )
    local btnCtrl = self.rc:GetObject("ButtonCtrl").transform
    local panelCtrl = self.rc:GetObject("PanelArea").transform
    self.root = self.rc:GetObject("Root").transform
    self.logicList = {InfoLogic,SkillLogic}
    self.nameTxt = self.rc:GetObject("CardNameText"):GetComponent("Text")

    self.btnList = {}
    self.panelList = {}
    for i = 0,btnCtrl.childCount - 1 do
        local btn = btnCtrl:GetChild(i).gameObject
        self.btnList[i+1] = btn
        UIUtil.AddBtnEvent(btn,function() OnClickPanelButton(self,i+1) end)
    end
    for i = 0,panelCtrl.childCount - 1 do
        local panel = panelCtrl:GetChild(i).gameObject
        self.panelList[i+1] = panel
    end

    for k,v in pairs(self.logicList) do
        v.OnCreate(self,self.panelList[k])
    end
end

function this.OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh()
    coroutine.start(function()
        Game.Scene:GetComponent("SoundComponent"):PlayArchiveSound(self.model.templateId)
    end)
end

function this.OnRefresh(self)
    self.zCard = Z_Card[self.model.templateId]
    self.nameTxt.text = "   " .. self.zCard.Name
    local id = 1
    OnClickPanelButton(self,id)
    coroutine.start(function()
        InitSsUnit(self)
        for k,v in pairs(self.logicList) do
            v.Init(self)
        end
    end)
end

function this.OnAddListener(self)
    base.OnAddListener(self)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self)
end

function this.OnDisable(self)
    base.OnDisable(self)
    if  not IsNull(self.object) then
        ListChildPool:GetInstance():Remove(self.object,"SsUnit")
    end
end

function this.OnDestroy(self)
    base.OnDestroy(self)
end

return this