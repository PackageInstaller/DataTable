---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/7/1 16:21
---

local UIHandBookCGView = BaseClass("UIHandBookCGView",UIBaseView)
local base = UIBaseView;
local this = UIHandBookCGView;
local maxList  = {"7","9","10","12","14"}
local url
local IsMove = false
local horizontal = -1
local unlock={}

local function OnClickCollect(self)
    self.collectMode = (self.collectMode == true and {false} or {true})[1]
    self.Collect.transform:Find("Active").gameObject:SetActive(self.collectMode)
    for i, v in pairs(self.Imager) do
        if self.collectMode then
            if not table.any(self.DataCGHeart, function(a) return v.id == a end) then
                v.object.transform:SetParent(self.CollectParent.transform)
                v.object.transform.localPosition = Vector3.New(0,0,0)
            end
        else
            v.object.transform:SetParent(self.content.transform)
            v.object:SetAsLastSibling()
            self.orderMode = 1
            self.Order.transform:Find("De").gameObject:SetActive(self.orderMode == 2)
        end
    end
end

local function ChangeOrder(self)
    self.orderMode = (self.orderMode == 1 and {2} or {1})[1]
    self.Order.transform:Find("De").gameObject:SetActive(self.orderMode == 2)
    if self.orderMode == 1 then
        for k,v in table.pairsByKeys( self.Imager) do
            v.object:SetAsLastSibling()
        end
    else
        for k,v in table.pairsByKeys( self.Imager) do
            v.object:SetAsFirstSibling()
        end
    end
end

local function TextRefresh(self,text)
    self.count = self.count+1
    local count = self.count%3
    if count == 1 then
        text.text = LangUtil.GetSysLang(535) .. "."
    elseif count == 2 then
        text.text = LangUtil.GetSysLang(535) .. ".."
    elseif count == 0 then
        text.text = LangUtil.GetSysLang(535) .. "..."
    end
end
 

---@param v {id:number, data:table, object:GameObject}
local function OnClickDown(self,v)
    local text = v.object.transform:Find("Download/Text"):GetComponent("Text")
    self.count = 0
    local function ProgressCallback(co, progress)
        assert(progress <= 1.0, "What's the fuck!!!")
        if self.count/10 <=progress then
            TextRefresh(self,text)
        end
        return coroutine.yieldcallback(co, progress)
    end
    coroutine.start(function()
        v.object.transform:Find("Download/Image").gameObject:SetActive(false)
        text.gameObject:SetActive(true)

        local id= v.id
        v.object.transform:Find("Download").gameObject:SetActive(false)
        ClientData:GetInstance():SetCGName(id)
    end)
    
end

local function OnClickMax(self,name)

    if name == "close" then
        UIUtil.AddBtnEvent(self.Max,function() self.Max.gameObject:SetActive(false)   end)
    else
        coroutine.start(function()
            self.Max.gameObject:SetActive(true)

                UIUtil.AddBtnEvent(self.Max,function() self.Max.gameObject:SetActive(false) end)

        end)
        
    end
    
end


local function OnClickMiddle(self,id)
    self.MiddleBG.gameObject:SetActive(true)
    self.Middle.gameObject:SetActive(false)
    coroutine.start(function()
        self.MiddleBG.gameObject:GetComponent("Button").enabled = true
        self.Middle.sprite =  AtlasManager:GetInstance():CoLoadImageAsync("UI/CG/Horizontal/" .. Z_CG[id].HorizontalCG)
        if table.any(self.DataCGHeart, function(v) return v == id   end) then
            self.heart.transform:Find("active").gameObject:SetActive(true)
        else
            self.heart.transform:Find("active").gameObject:SetActive(false)
        end
        self.Middle.gameObject:SetActive(true)
        UIUtil.AddBtnEvent(self.heart,function()
            ClientData:GetInstance():SetCGHeart(id)
            self.heart.transform:Find("active").gameObject:SetActive(true)end)
        UIUtil.AddBtnEvent(self.heart.transform:Find("active").gameObject,function()
            ClientData:GetInstance():SetCGHeartRemove(id)
            self.heart.transform:Find("active").gameObject:SetActive(false)end)
        UIUtil.AddBtnEvent(self.Middle,function() self.Max.sprite = self.Middle.sprite OnClickMax(self,id) end) 
    end)
    
end
local function Move(self)
    coroutine.start(function()
        local while_func = function()
            return self.cur ~= self.content.transform.position.x
        end
        coroutine.waitwhile(while_func)
        coroutine.waitforframes(1)
        local localPosition =self.content:GetComponent(typeof(RectTransform)).localPosition.x
        local currPosX = localPosition - self.gridLayoutGroup.cellSize.x / 2 - self.gridLayoutGroup.padding.left -- 当前x坐标
        local offset = self.leftPosX - currPosX -- content 偏移量
        -- 0 --> 偏移 小于 self.cellWidth * 0.5
        -- 1 --> 偏移 大于 self.cellWidth * 0.5， 并且小于 self.cellWidth * 1.5
        -- x --> 偏移 大于 self.cellWidth * (x-1) ， 并且小于 self.cellWidth * x
        -- 输出当前x
        local cellWidth = self.gridLayoutGroup.cellSize.x + self.gridLayoutGroup.spacing.x
        local x = math.floor(offset / cellWidth + 0.5)
        horizontal = x * (1/(self.content.transform.childCount-1))
        IsMove = true
    end)
end


function this.OnCreate(self)
    base.OnCreate(self);
    url= ChannelManager:GetInstance():GetCGAddress()  --下载地址
    self.count = 0
    self.backBtn = self.rc:GetObject("BackButton");
    self.top = self.rc:GetObject("Top")
    self.Label = self.rc:GetObject("LabelText"):GetComponent("Text")
    self.content = self.rc:GetObject("Content");
    self.centerIndex = self.rc:GetObject("CenterIndex");
    self.Collect = self.top.transform:Find("Collect")
    self.Order = self.rc:GetObject("Order")
    self.Max = self.rc:GetObject("Max"):GetComponent("Image")
    self.Middle = self.rc:GetObject("Middle"):GetComponent("Image")
    self.heart = self.rc:GetObject("heart")
    self.MiddleBG = self.rc:GetObject("MiddleBG")
    self.CollectParent = self.rc:GetObject("CollectParent")
    self.Rect = self.rc:GetObject("Scroll View"):GetComponent("ScrollRect")
    self.Scrollbar =  self.rc:GetObject("Scrollbar Horizontal")
    self.UnlockParent = self.rc:GetObject("UnlockParent");
    self.MiddleBGText = self.rc:GetObject("MiddleBGText")

    local width = self.gameObject:GetComponent(typeof(RectTransform)).rect.width
    self.width = Screen.width
    self.height = Screen.height
    local paddingLeft = math.floor(width/2) - 175
    self.gridLayoutGroup = self.content:GetComponent("GridLayoutGroup")
    self.gridLayoutGroup.padding.left = paddingLeft
    self.gridLayoutGroup.padding.right =  math.floor(width/2) - 175
    self.leftPosX = - paddingLeft - self.gridLayoutGroup.cellSize.x / 2 --  最左侧时的x坐标
    self.center = self.rc:GetObject("Center")
    
    self.centerList={}
    self.DataCGHeart = ClientData:GetInstance().CGHeart
    
    self.Imager = {}
    self.hasCgIds = {}
    
    self.unity_canvas = UIManager:GetInstance():GetWindow(UIWindowNames.UIHandBookCG).Layer.unity_canvas
    self.currentCG = { }
    self.contentPosX = 0
    self.timeUpdate=function(self)
        self:OnUpdate()
    end
    self.timer = TimerManager:GetInstance():GetTimer(0.001, self.timeUpdate , self)
    -- 启动定时器
    self.timer:Start()

    for i = 0, self.center.transform.childCount-1 do
        table.insert(self.centerList,{parent = nil ,center = self.center.transform:GetChild(i)})
    end
    
    UIPublic.SetBackButton(
            self.backBtn,
            UIWindowNames.UIHandBookCG,
            613
    )
    
    UIUtil.AddBtnEvent(self.Collect,function()
        IsMove = false
        OnClickCollect(self)
        Move(self)
    end)
    UIUtil.AddBtnEvent(self.Order,function()
        horizontal=-1
        ChangeOrder(self)
       --Move(self)
    end)
    UIUtil.AddBtnEvent(self.Max,function()self.Max.gameObject:SetActive(false) end)
    UIUtil.AddBtnEvent( self.MiddleBG,function() self.MiddleBG.gameObject:SetActive(false) end)
   
    EventTriggerListener.Get(self.Rect.gameObject).onLuaDragEndHandler = function()
        horizontal=-1
        IsMove = false
        Move(self)
    end
    EventTriggerListener.Get(self.Rect.gameObject).onLuaDragBeginHandler = function()
        IsMove = false
        horizontal = -1
    end
    EventTriggerListener.Get(self.Scrollbar.gameObject).onLuaDragEndHandler = function()
        horizontal=-1
        IsMove = false
        Move(self)
    end
    EventTriggerListener.Get(self.Scrollbar.gameObject).onLuaDragBeginHandler = function()
        IsMove = false
        horizontal = -1
    end

    self.orderMode = 1
    self.Rect.horizontalNormalizedPosition = 0
end

function this.OnLangCreate(self)
    LangUtil.GetSpriteLang(207, function(sprite) self.Collect:GetComponent("Image").sprite = sprite end)
    LangUtil.GetSpriteLang(208, function(sprite) self.Collect.transform:GetChild(0):GetComponent("Image").sprite = sprite end)
    
    LangUtil.BindText(self.Label)

    LangUtil.BindText(self.rc:GetObject("OrderText"))
    LangUtil.BindText(self.rc:GetObject("DeText"))
    LangUtil.BindText(self.MiddleBG.transform:Find("Text"))
    LangUtil.BindText(self.MiddleBGText).text = LangUtil.GetSysLang(535).."..."
    LangUtil.BindText(self.rc:GetObject("LabelText1")).text = LangUtil.GetSysLang(312)
    for i = 0, self.center.transform.childCount-1 do
        LangUtil.BindText(self.center.transform:GetChild(i).transform:Find("Download/Text"))
    end
    for i = 0, self.content.transform.childCount-1 do
        local go = self.content.transform:GetChild(i)
        LangUtil.BindText(go.transform:Find("Download/Text"))
    end
end

--把一个世界ui转成屏幕坐标
function this.GetWorldToScreenRect(self,canvas,targetTf)
    local screenPoint = canvas.worldCamera:WorldToScreenPoint(targetTf.position)
    local rc=targetTf:GetComponent(typeof(RectTransform))
    local size=rc.sizeDelta
    screenPoint=CSUtil.GetCanvasPosition(canvas, screenPoint)
    return screenPoint.x ,screenPoint.y ,size.x,size.y
end

function this.OnUpdate(self)
    self.cur = self.content.transform.position.x
    if IsMove and horizontal ~= -1 then
        self.Rect.horizontalNormalizedPosition = Mathf.Lerp(self.Rect.horizontalNormalizedPosition,horizontal,4*Time.deltaTime)
    end
    
    self.Label.text = table.count(self.Imager).. "/"  .. table.count(Z_CG)
    self.contentPosX = self.content:GetComponent(typeof(RectTransform)).rect.x
    for i, v in ipairs(self.Imager) do
        local x, y, w, h = self:GetWorldToScreenRect(self.unity_canvas, v.object.transform)
        if x <= 360 and x >= -360 then
            for a, b in ipairs(self.centerList) do
                if IsNull(b.center:GetComponent("Image").sprite) and not table.any(self.currentCG, function(g)
                    return g == v.object:GetComponent("Image").sprite
                end) then
                    b.center:GetComponent("Image").sprite = v.object:GetComponent("Image").sprite
                    b.center.transform.position = v.object.transform.position
                    local active= v.object.transform:Find("Download").gameObject.activeSelf
                    local active1= v.object.transform:Find("Download/Image").gameObject.activeSelf
                    local active2= v.object.transform:Find("Download/Text").gameObject.activeSelf
                    b.center.transform:Find("Download").gameObject:SetActive(active)
                    b.center.transform:Find("Download/Image").gameObject:SetActive(active1)
                    b.center.transform:Find("Download/Text").gameObject:SetActive(active2)
                    b.parent = v.object
                    table.insert(self.currentCG, v.object:GetComponent("Image").sprite)
                    UIUtil.AddBtnEvent(b.center.transform:Find("Download/Image"),function() OnClickDown(self, {
                        id = v.id,
                        data = Z_CG[v.id],
                        object = b.parent,
                    }) end)
                    b.center.gameObject:SetActive(true)
                    UIUtil.AddBtnEvent(b.center,function() OnClickMiddle (self, v.id)  end)
                    return
                end
            end
        end
    end
    --位移跟随，size大小跟谁位移变化
    for a, b in ipairs(self.centerList) do
        if b.parent ~= nil then
            --if b.center.transform.position ~= b.parent.transform.position then
            b.center.transform.position = b.parent.transform.position
            local active= b.parent.transform:Find("Download").gameObject.activeSelf
            local active1= b.parent.transform:Find("Download/Image").gameObject.activeSelf
            local active2= b.parent.transform:Find("Download/Text").gameObject.activeSelf
            b.center.transform:Find("Download").gameObject:SetActive(active)
            b.center.transform:Find("Download/Image").gameObject:SetActive(active1)
            b.center.transform:Find("Download/Text").gameObject:SetActive(active2)
            b.center.transform:Find("Download/Text"):GetComponent("Text").text = b.parent.transform:Find("Download/Text"):GetComponent("Text").text
                local x, y, w, h = self:GetWorldToScreenRect(self.unity_canvas, b.center.transform)
                local j
                if x < 0 and x >= -360 then
                    j = (370 + x) * 0.0011583
                    b.center.transform.localScale = Vector3.New(1 + j, 1 + j, 1)
                    b.parent.transform.localScale = Vector3.New(1 + j, 1 + j, 1)
                elseif x >= 0 and x <= 360 then
                    j = (370 - x) * 0.0011583
                    b.center.transform.localScale = Vector3.New(1 + j, 1 + j, 1)
                    b.parent.transform.localScale = Vector3.New(1 + j, 1 + j, 1)
                elseif x < -360 or x > 360 then
                    table.removeall(self.currentCG, function(f)
                        return f == b.center:GetComponent("Image").sprite
                    end)
                    b.center.gameObject:SetActive(false)
                    b.parent.transform.localScale = Vector3.New(1 , 1 , 1)
                    b.parent = nil
                    b.center:GetComponent("Image").sprite = nil
                end
                if x<=184 and x>=-184 then
                    b.center.transform:SetAsLastSibling()
                end
            end
    end
end

function this.OnEnable(self)
    base.OnEnable(self);
    self:OnRefresh();
    
end

function this.OnRefresh(self)
    self.CollectMode = false
    
    ---@type RecordComponent
    local recordComponent = Game.Scene.Player:GetComponent("RecordComponent")

    for key, value in pairs(Z_CG) do
        if not table.contains(self.hasCgIds, value.Id) and recordComponent:CheckIsOn(RecordType.CG, value.Id) then
            local path = HomeSceneItemPath.."/" .."CgHandBookItem.prefab"
            local object = GameObjectPool:GetInstance():CoGetGameObjectAsync(path)
            object.transform.localPosition = Vector3.New(0,0,0)
                table.insert(unlock, {
                    data = Z_CG[value.Id],
                    id = value.Id,
                    object = object
                })
                table.insert(self.hasCgIds, value.Id)
        end
    end

    for i, v in pairs(unlock) do
        v.object.transform:SetParent(self.content.transform)
        v.object.transform.localScale = Vector3.New(1,1,1)
        local go = v.object
        table.insert(self.Imager, {
            id = v.id,
            object = go.transform,
        })
        --local active = not table.any(self.DataCGName,function(v) return v== tostring(v.id)  end)
        go.transform:GetComponent("Image").sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/CG/Vertical/" .. v.data.VerticalCG)
        go.transform:Find("Download").gameObject:SetActive(false)
        LangUtil.BindText(go.transform:Find("Download/Text"))
        UIUtil.AddBtnEvent(go.transform:Find("Download/Image"),function() OnClickDown (self,v)  end)
        UIUtil.AddBtnEvent(go,function() OnClickMiddle (self, v.id)  end)
    end
    IsMove =false
    --Move(self)
end

function this.OnAddListener(self)
    base.OnAddListener(self);
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
end

function this.OnDisable(self)
    base.OnDisable(self);
    unlock = {}
end

function this.OnDestroy(self)
    base.OnDestroy(self);
    self.timer:Stop()
end

return this;