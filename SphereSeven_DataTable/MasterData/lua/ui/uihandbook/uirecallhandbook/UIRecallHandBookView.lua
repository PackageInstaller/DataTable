---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/7/1 16:21
---
--- gh: 剧情 - 根据关卡进度; CG - 图鉴id(例如打完关卡解锁id); BGM - 暂定全部解锁, 后续改为解锁id

local UIRecallHandBookView = BaseClass("UIRecallHandBookView",UIBaseView)
local base = UIBaseView;
local this = UIRecallHandBookView;

local function InitHint(self)
end

local function InitSlider(self)
    ---@type RecordComponent
    local recordComponent = Game.Scene.Player:GetComponent("RecordComponent")


    ---@type protocol.LevelPack
    local levelPack = table.first(Game.Scene.Player:GetComponent("StoryComponent").level_packs, function(v)
        return v.level_type == LevelType.LevelTypeStory
    end)

    local allStorys = table.choose(Z_StorySection, function(_, v)
        return not string.IsNullOrEmpty(v.StoryId)
    end)
    local allStoryCount = table.count(allStorys)
    local pastStoryCount = table.count( table.choose(allStorys, function(k, v)
        ---@param level protocol.Level
        return table.any( levelPack.levels, function(level)
                return level.id == v.Id and level.pass_times >= 1
            end)
    end) )
    local recallProgress = math.modf((pastStoryCount/allStoryCount *100))

    local cgCount, allCgCount = recordComponent:GetRecordCount(RecordType.CG)

    local CGProgress = math.modf((cgCount/allCgCount *100))
    self.musicBtn.transform:Find("Slider/Value"):GetComponent("Text").text = "0%"
    self.cgBtn.transform:Find("Slider/Value"):GetComponent("Text").text = CGProgress.."%"
    self.storyBtn.transform:Find("Slider/Value"):GetComponent("Text").text = recallProgress.."%"
    -- self.activityBtn.transform:Find("Slider/Value"):GetComponent("Text").text = "0%"

    self.musicBtn.transform:Find("Slider"):GetComponent("Slider").value = 0
    self.cgBtn.transform:Find("Slider"):GetComponent("Slider").value = CGProgress/100
    self.storyBtn.transform:Find("Slider"):GetComponent("Slider").value = recallProgress/100
    -- self.activityBtn.transform:Find("Slider"):GetComponent("Slider").value = 0

    if self.cgBtn.activeSelf then
        self.progressSlider.value = math.modf((recallProgress + CGProgress )/2)/100
        self.progressValue:GetComponent("Text").text = math.modf((recallProgress + CGProgress )/2)
    else
        self.progressSlider.value = recallProgress / 100
        self.progressValue:GetComponent("Text").text = recallProgress
    end

end

function this.OnLangCreate(self)
    local txt = self.langRc:GetObject("Txt").transform
    local backText = self.langRc:GetObject("BackText").transform
    self.progressValue = self.langRc:GetObject("Value").transform
    local root = self.langRc:GetObject("Content").transform

    for i =0,root.childCount - 1 do
        local child = root:GetChild(i)
        local name = child:Find("Slider/Txt")
        local v = child:Find("Slider/Value")
        local img = child:GetComponent("Image")
        LangUtil.BindText(name).text = LangUtil.GetSysLang(271)
        LangUtil.BindText(v,FontType.All_Number)

        LangUtil.GetSpriteLang(33+i,function(sprite)
            img.sprite = sprite
        end)
    end
    LangUtil.BindText(self.progressValue,FontType.All_Number).text = "0"
    LangUtil.BindText(backText).text = LangUtil.GetSysLang(671)
    LangUtil.BindText(txt,FontType.All_Number).text = "%"
end


function this.OnCreate(self)
    base.OnCreate(self);
    self.backBtn = self.rc:GetObject("BackButton")
    self.musicBtn = self.rc:GetObject("Music")
    self.cgBtn = self.rc:GetObject("CG")
    self.storyBtn = self.rc:GetObject("MainStory")
    self.activityBtn = self.rc:GetObject("Activity")
    self.cgBtn:SetActive(true)--设置为true时，UIHandBookMainView UIPlayerInfoView 的 cGisOpen 也设置为true
    
    self.progressSlider = self.rc:GetObject("ProgressSlider"):GetComponent("Slider")
    local paint = self.rc:GetObject("Paint"):GetComponent("Image")

    UIUtil.AddBtnEvent(self.backBtn,function() self.ctrl:CloseSelf() end)
    self.musicBtn:SetActive(true)
    UIUtil.AddBtnEvent(self.musicBtn, function()
        self.model.face:Stop()
        self.face:Stop()
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIMusicHandBook) 
    end)
    UIUtil.AddBtnEvent(self.cgBtn,function()
        self.model.face:Stop()
        self.face:Stop()
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIHandBookCG)  
    end)
    UIUtil.AddBtnEvent(self.storyBtn,function()
        self.model.face:Stop()
        self.face:Stop()
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIStoryHandBook)  
    end)
    UIUtil.AddBtnEvent(self.activityBtn,function() 
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(579))  
    end)
    
    --UIPublic.SetPainting(Z_Card[1028],paint)
    self.face = UILandlady.New(paint, 1000, self.rc:GetObject("Lines"))
    
    InitHint(self)
end

function this.OnEnable(self)
    base.OnEnable(self);
    self:OnRefresh();
    if self.model.face ~= nil then
        self.face:BindPlay(self.model.face)
    else
        self.face:CoPlay()
    end
end

function this.OnRefresh(self)
    InitSlider(self)
end

function this.OnAddListener(self)
    base.OnAddListener(self);
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
end

function this.OnDisable(self)
    base.OnDisable(self);
    self.face:BindDisable()
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this;