---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UILordModeView = BaseClass("UILordModeView",UIBaseView)
local base = UIBaseView
local this = UILordModeView
local openTowerLevelLimit = 10
local openDreamLandLevelLimit = 0
local leftTime

function this.OnCreate(self)
    base.OnCreate(self)
    leftTime = TimeUtil.GetMonthLastSeconds()
    
    self.backBtn = self.rc:GetObject("BackButton")
    self.content = self.rc:GetObject("Content")
    self.roadBtn = self.rc:GetObject("Road")
    self.towerBtn = self.rc:GetObject("Tower")
    self.towerHint = self.rc:GetObject("TowerHint")
    self.dreamlandBtn = self.rc:GetObject("Dreamland")
    self.dreamlandHint = self.rc:GetObject("LandHint")
    self.LeftTimeText = self.rc:GetObject("LeftTimeText"):GetComponent("Text")
    UIPublic.SetBackButton(
        self.backBtn,
        UIWindowNames.UILordMode,
        416
    )

    UIPublic.SetHelpButton(self.rc:GetObject("HelpButton"), UIWindowNames.UILordMode)

    -- UIUtil.AddBtnEvent(self.roadBtn,function()UIManager:GetInstance():OpenWindow(UIWindowNames.UILordRoad)  end)
    -- --UIUtil.AddBtnEvent(self.towerBtn,function()UIManager:GetInstance():OpenWindow(UIWindowNames.UILordTower)  end)
    -- UIUtil.AddBtnEvent(self.dreamlandBtn,function()UIManager:GetInstance():OpenWindow(UIWindowNames.UILordLand)  end)

    UIUtil.AddBtnEvent(self.towerBtn,function()UIManager:GetInstance():OpenWindow(UIWindowNames.UICommonLevel, 
        {
            levelType = LevelType.LevelTypeTower
        })  
    end)
    
    UIUtil.AddBtnEvent(self.dreamlandBtn,function()UIManager:GetInstance():OpenWindow(UIWindowNames.UICommonLevel,  
        {
            levelType = LevelType.LevelTypeMonthlyTower
        })  
    end)

    self.timeUpdate=function(self)
        self:OnUpdate()
    end
    self.timer = TimerManager:GetInstance():GetTimer(0.001, self.timeUpdate , self)
    -- 启动定时器
    self.timer:Start()

    if CS.GameChannel.ChannelManager.instance.packageName ~= ChannelType.Test then
        --self.dreamlandBtn:SetActive(false)
        -- self.content.transform.localPosition = Vector3.New(340,0,0)
        -- self.roadBtn.transform.localPosition = Vector3.New(-700,-40.6866,0)
        -- self.towerBtn.transform.localPosition = Vector3.New(60,-40.6866,0)
    else
        self.content.transform.localPosition = Vector3.zero
    end
    --新手引导剧情
    local guide=Game.Scene:GetComponent("GuideComponent")
    local guideData = table.first(guide.GuideList,function (h) return h.Id == 7001  end)
    if guideData == nil or guideData.Step < 3 then
        guide:CheckStart(6,0)
    end
end

function this.OnLangCreate(self)
    -- LangUtil.BindText(self.towerHint.transform:Find("Text")).text = string.format(LangUtil.GetSysLang(504),openTowerLevelLimit)
    -- LangUtil.BindText(self.dreamlandHint.transform:Find("Text")).text = string.format(LangUtil.GetSysLang(504),openDreamLandLevelLimit)
    -- LangUtil.GetSpriteLang(232, function(sprite) self.roadBtn:GetComponent("Image").sprite = sprite end)
    -- LangUtil.GetSpriteLang(233, function(sprite) self.towerBtn:GetComponent("Image").sprite = sprite end)
    -- LangUtil.GetSpriteLang(350, function(sprite) self.dreamlandBtn:GetComponent("Image").sprite = sprite end)

end

function this.OnEnable(self)
    base.OnEnable(self)
    self:OnRefresh()
end

function this.OnRefresh(self)
    -- local _boolTower = Game.Scene.Player.Level >= openTowerLevelLimit
    -- self.towerHint:SetActive(not _boolTower)
    --self.towerBtn:GetComponent("Button").enabled = (_boolTower)
    -- local _boolDreamLand = Game.Scene.Player.Level >= openDreamLandLevelLimit
    -- self.dreamlandHint:SetActive(not _boolDreamLand)
    -- self.dreamlandBtn:GetComponent("Button").enabled = (_boolDreamLand)
end

function this.OnUpdate(self)
    leftTime = TimeUtil.GetMonthLastSeconds()
    self.LeftTimeText.text = this.secondsToTime(self,leftTime)
end

function this.secondsToTime(self,seconds)
    local days = math.floor(seconds / (24 * 3600))
    local remainingSeconds = seconds % (24 * 3600)
    local hours = math.floor(remainingSeconds / 3600)
    remainingSeconds = remainingSeconds % 3600
    local minutes = math.floor(remainingSeconds / 60)

    if days > 0 then
        local str = string.gsub(LangUtil.GetSysLang(885), "XX", days)--离重置还剩XX天YY小时
        return string.gsub(str, "YY", hours)
    else
        local str = string.gsub(LangUtil.GetSysLang(886), "XX", hours)--离重置还剩XX小时YY分
        return string.gsub(str, "YY", minutes)
    end
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self)
end

function this.OnViewTop(self)
    base.OnViewTop(self)
    --UIManager:GetInstance():OpenWindow(UIWindowNames.UIComTop)
end

function this.OnDisViewTop(self)
    base.OnDisViewTop(self)
    --UIManager:GetInstance():CloseWindow(UIWindowNames.UIComTop)
end

function this.OnDisable(self)
    base.OnDisable(self)
end

function this.OnDestroy(self)
    base.OnDestroy(self)
end

return this

