---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UICardEvolveStage2View = BaseClass("UICardEvolveStage2View",UIBaseView);
local base = UIBaseView
local this = UICardEvolveStage2View

local function IniCardInfo(self)
    local card = self.card
    local zCard = Z_Character[card.TemplateId]
    local transform = self.cardInfo

    local star = transform:Find("Star")
    local name = transform:Find("Name/Value"):GetComponent("Text")
    local mainProp = transform:Find("MainProp")
    local subProp = transform:Find("SubProp")
    local cardFrom = transform:Find("CardFrom"):GetComponent("Image")
    local cardType = transform:Find("CardType"):GetComponent("Image")
    local rareFrame = transform:Find("RareFrame"):GetComponent("Image")
    
    local skinId = card.SkinId

    if Z_CharacterEvolution[card.TemplateId][self.model.info.originalStar + 1].Skin ~= 0 then
        skinId = Z_CharacterEvolution[card.TemplateId][self.model.info.originalStar + 1].Skin
    end
    
    name.text = Z_Card[card.TemplateId].Name
    UIPublic.NewInitStar(star:GetComponent("Image"),self.model.info.originalStar + 1)

    UIUtil.SetSprite(mainProp:GetComponent("Image"), AtlasConfig.Class, 
         Z_Character[card.Id].Class .. "_" .. zCard.Rarity ..".png")
    UIPublic.InitSubProp(subProp,zCard.Prop) --副属性
    UIUtil.NewSetCardSprite(self.cardInfoValue:GetComponent("Image"),card.Id, skinId, CardPictureType.Big,false)
    rareFrame.sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/RareFrame/".. UIPublic.RareNames[zCard.Rarity]..".png")
    cardFrom.sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/Common/CardInfo/".. UIPublic.RareNames[zCard.Rarity].."_Line.png")
    cardType.sprite = AtlasManager:GetInstance():CoLoadImageAsync("UI/Common/Raility/".. UIPublic.RareNames[zCard.Rarity]..".png")
end

function this.OnCreate(self)
    base.OnCreate(self);
    self.cardInfo = self.rc:GetObject("CardInfo").transform
    self.mask = self.rc:GetObject("Mask"):GetComponent("Image")
    self.cardInfoValue = self.rc:GetObject("CardInfoValue").transform
end

function this.OnEnable(self)
    base.OnEnable(self)
    local info  =self.model.info
    self.card = info.card
    
    self:OnRefresh()
end



function this.OnRefresh(self)
    self.mask.gameObject:SetActive(true)
    self.mask:DOFade(1,0)
    coroutine.start(
        function()
            coroutine.waitforframes(10)
            IniCardInfo(self)
        end
    )
    self.mask:DOFade(0,0.2)
    self.mask.gameObject:SetActive(false)
    coroutine.waitforseconds(1)
    UIUtil.OpenSkipHint(function()
        UIManager:GetInstance():CloseWindow(UIWindowNames.UICardEvolveStage2)  
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIComTop)
    end)
    Game.Scene:GetComponent("SoundComponent"):PlayEvolutionSound(self.card)
end


function this.OnAddListener(self)
    base.OnAddListener(self)
  
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
  
end

function this.OnDisable(self)
    base.OnDisable(self);
    Game.Scene:GetComponent("GuideComponent"):AutoGuide()
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this;

