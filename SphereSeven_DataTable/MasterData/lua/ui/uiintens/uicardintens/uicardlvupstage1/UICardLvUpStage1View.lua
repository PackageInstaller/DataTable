---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UICardLvUpStage1View = BaseClass("UICardLvUpStage1View",UIBaseView);
local base = UIBaseView
local this = UICardLvUpStage1View


local function PlayerNumAnim(self)
    local transform = self.numerical.transform
    local hp_text = transform:Find("HP/Value"):GetComponent("Text")
    local atk_text = transform:Find("ATK/Value"):GetComponent("Text")
    local def_text = transform:Find("DEF/Value"):GetComponent("Text")
    local speed_text = transform:Find("SPEED/Value"):GetComponent("Text")

    local nextNumData = UIPublic.GetNumerical(self.card) --实际角色属性数据
    local _nextNumData = UIPublic.GetNumerical(self.nextCard) --升级之前的角色属性数据

    local str1 = ""
    for k,v in pairs(self.card) do
        if type(v) == "number" then
            str1 = str1.."  "..k..":"..v
        end
    end

    local str2= ""
    for k,v in pairs(self.nextCard) do
        if type(v) == "number" then
            str2 = str2.."  "..k..":"..v
        end
    end

    print("--升级之前的角色信息:".. str2)
    print("--升级之后的角色信息:".. str1)


    local frames = 20  --20帧播放完数字增加的动画
    local difValues= {hp = (nextNumData.hp - _nextNumData.hp)/frames,  --每一帧HP增加量等于 实际HP减去升级前的HP除以总帧数
                      atk = (nextNumData.atk - _nextNumData.atk)/frames, --同上
                      def = (nextNumData.def - _nextNumData.def)/frames,--同上
                      speed = (nextNumData.speed - _nextNumData.speed)/frames}--同上
    for k, v in pairs(difValues) do
        if v < 0 then
            difValues[k] = 0
        end
    end
    
    for i =1,frames do
        coroutine.waitforframes(1)
        _nextNumData.hp = _nextNumData.hp + difValues.hp --显示每帧从升级前HP过度到升级后的HP文本
        hp_text.text= math.modf(_nextNumData.hp)
        _nextNumData.atk = _nextNumData.atk + difValues.atk--同上
        atk_text.text = math.modf(_nextNumData.atk)
        _nextNumData.def = _nextNumData.def + difValues.def--同上
        def_text.text = math.modf(_nextNumData.def)
        _nextNumData.speed = _nextNumData.speed + difValues.speed--同上
        speed_text.text = math.modf(_nextNumData.speed)
    end
    coroutine.waitforframes(1)
    hp_text.text= math.modf(nextNumData.hp)
    atk_text.text= math.modf(nextNumData.atk)
    def_text.text= math.modf(nextNumData.def)
    speed_text.text= math.modf(nextNumData.speed)
    
end



local function InitLevelInfo(self)
    local nextLevel = self.card.Level
    local transform = self.levelInfo.transform
    local curTxt = transform:Find("CurLvTxt"):GetComponent("Text")
    local nextTxt1 = transform:Find("NextLv/Txt1"):GetComponent("Text")
    local nextTxt2 = transform:Find("NextLv/Txt1/Txt2"):GetComponent("Text")
   
    curTxt.text = "LV.<size=61>"..self.nextCard.Level.."</size>/"..self.nextCard.LevelLimit
    nextTxt1.text = "LV."..nextLevel
    nextTxt2.text = "/"..self.nextCard.LevelLimit
end


function this.OnCreate(self)
    base.OnCreate(self);
    self.audio = self.gameObject:GetComponent("AudioSource")
    self.mask = self.rc:GetObject("Mask"):GetComponent("Image")
    self.effect = self.rc:GetObject("Effect")
    self.levelInfo = self.rc:GetObject("LeveInfo")
    self.nextNumerical = self.rc:GetObject("NextNumerical")
    self.numerical = self.rc:GetObject("Numerical")
    self.paint = self.rc:GetObject("Paint"):GetComponent("Image")
    self.paintRoot = self.paint.transform.parent
    self.effect:SetActive(false)
    self.mainUI = self.rc:GetObject("MainUI").transform
    self.effectPic = self.rc:GetObject("EffectPic").transform
    self.infoMain = self.rc:GetObject("InfoMain").transform
    
    self.uiDrawing = UIDrawing.New(self.paintRoot, self.paint)
    self.uiDrawing:OffsetSetting("LevelUpOffset")
end

function this.OnLangCreate(self)
    table.csenuObject(self.levelInfo.transform,function(transform)
        local txt = transform:GetComponent("Text")
        if not IsNull(txt) then
            LangUtil.BindText(transform,FontType.All_Number)
        end
    end)
    
    UIPublic.CreateNumericalLang(self.numerical)
    UIPublic.CreateNumericalLang(self.nextNumerical)

end

function this.OnEnable(self)
    base.OnEnable(self)
    self.audio.volume = ClientData:GetInstance():GetVolume("SoundVolume")
    local info  =self.model.info
    self.card = info.card
    self.nextCard = info.nextCard 
    
    self:OnRefresh()
end



function this.OnRefresh(self)
    self.effectPic:GetComponent("Image"):DOFade(0,0)
    self.effectPic.transform:DOScale(Vector2.New(1.4,1.4),0)
    self.infoMain:DOScale(Vector2.New(0.8,0.8),0)
    
    self.effect:SetActive(false)
    self.mask.gameObject:SetActive(true)
    self.mask:DOFade(1,0)
    local rectTra = self.paintRoot:GetComponent("RectTransform")
    local posX = rectTra.localPosition.x
    rectTra:DOLocalMoveX(posX - 2000,0)
    
    InitLevelInfo(self)
    UIPublic.InitNumerical(self.numerical,self.nextCard)
    UIPublic.InitNumerical(self.nextNumerical,self.nextCard)
    --UIPublic.SetCardOriginal(self.card.TemplateId,self.paint,self.card.SkinId,1)
    self.uiDrawing:CoPlayImage(self.card.TemplateId, self.card.SkinId)
    self.mask:DOFade(0,0.2)
    self.mask.gameObject:SetActive(false)
    coroutine.waitforseconds(0.2)
    
    --播放动画
    self.infoMain:DOScale(Vector2.New(1,1),0.3)  --放大等级信息窗口
    coroutine.waitforseconds(0.3)
    rectTra:DOLocalMoveX(posX,0.3)  --立绘移动
    coroutine.waitforseconds(0.1)
    self.effectPic:GetComponent("Image"):DOFade(1,0.3)--特效图片显示
    coroutine.waitforseconds(0.2)
    self.effectPic.transform:DOScale(Vector2.New(1,1),0.3)
    coroutine.waitforseconds(0.3)
    self.effect:SetActive(true) --播放特效
    UIPublic.PlayEffect(self.effect)
    self.audio:Play()
    coroutine.waitforseconds(1)
    Game.Scene:GetComponent("SoundComponent"):PlayIntensifySound(self.card)
    PlayerNumAnim(self)
    UIUtil.OpenSkipHint(function() UIManager:GetInstance():CloseWindow(UIWindowNames.UICardLvUpStage1)  end)
    
    
    
    
    ----新手引导
    --local guide=Game.Scene:GetComponent("GuideComponent")
    --local GuideComplete,GuideStep, GuideRun =guide:GetCurrentData()
    --if GuideRun and GuideComplete == 2 and GuideStep==24 then
    --    local uiGuide = UIManager:GetInstance():GetWindow(UIWindowNames.UINoviceGuide)
    --    uiGuide.View.mask_bc.transform.parent.gameObject:SetActive(true)
    --    guide:CurGuide(25)
    --end
end

function this.OnAddListener(self)
    base.OnAddListener(self)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
end

function this.OnDisable(self)
    base.OnDisable(self);
    Game.Scene:GetComponent("SoundComponent"):Stop()
    Game.Scene:GetComponent("GuideComponent"):JumpGuide(30) -- 新手引导收到返回后执行下一步，避免网阔卡顿照成穿帮
    self.uiDrawing:Disable()
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this;

