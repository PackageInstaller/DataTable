---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/8/30 14:50
---

local JadePearlLogic = {}
local this = JadePearlLogic
local effectNames = {"BeadsFire","BeadsWater","BeadsGround","BeadsWind","BeadsHeyRay","BeadsGlow","BeadsDark","BeadsOhGod",}
local maxLevel = tonumber(Z_Misc["CHARACTER_BEAD_LIMIT"].Value[1])
local delayTime = 1.2
local romaList = {"I","II","III","IV","V","VI","VII","VIII","IX","X",}

local function PlayEffect1(v)  -- 播放整体特效
    local glow = v.transform:Find("Glow")
    local bao =v.transform:Find("Bao")
    local glow1 = v.transform:Find("Glow1")

    glow:GetComponent("ParticleSystem"):Play()
    bao:GetComponent("ParticleSystem"):Play()
    coroutine.start(function()
        coroutine.waitforseconds(delayTime)
        glow1:GetComponent("ParticleSystem"):Play()
        coroutine.waitforframes(1)
        for i = 0,glow1.childCount -1 do
            coroutine.start(function()
                local child = glow1:GetChild(i)
                child:GetComponent("ParticleSystem"):Stop()
                coroutine.waitforseconds(delayTime)
                child:GetComponent("ParticleSystem"):Play()
            end)
        end
        coroutine.waitforseconds(1)
        Game.Scene:GetComponent("GuideComponent"):NextGuide(41)
    end)
    print("--播放玉珠升级特效")
    
end

local function PlayEffect2(v)  -- 只播放最终特效
    local glow = v.transform:Find("Glow")
    local bao =v.transform:Find("Bao")
    local glow1 = v.transform:Find("Glow1")

    glow:GetComponent("ParticleSystem"):Stop()
    bao:GetComponent("ParticleSystem"):Stop()
    glow1:GetComponent("ParticleSystem"):Play()
    print("--播放玉珠特效")
end

--local function CheckMatterIsEnough(self)
--    local zExpend = Z_JadePearlExpend[self.zJadePear.Kind]
--    if  UIPublic.GetItemAmount(zExpend.ItemId) < self.zJadePear.ActivateReqNum then
--        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1053))--"材料不足"
--    elseif self.player.GoldCoin < self.zJadePear.ActivateReqGoldCoin then
--        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1038))--"金币不足"
--    end
--    return true
--end


function this.OnClickActiveButton(self)  --点击激活
    local sendTable = {}
    sendTable.id = self.cur_card.TemplateId

    coroutine.start(function()
        local request = coroutine.yieldstart(Game.Scene.Session.CoCall,nil,Game.Scene.Session,
        PROTOCOL.CharacterPackBeadReq, sendTable)
    end)

    -- local zExpend = Z_JadePearlExpend[self.zJadePear.Kind]
    -- local item = UIPublic.GetItem(zExpend.ItemId)
    -- local reqData = {}
    -- reqData.ExpendMaterialList = {}
    -- reqData.CardId = self.cur_card.Id
    -- reqData.JadePearlLevel = self.zJadePear.Level
    -- reqData.ExpendGoldCoin = self.zJadePear.ActivateReqGoldCoin
    -- local ExpendMaterialInfo = {}
    -- ExpendMaterialInfo.Type = 0
    -- ExpendMaterialInfo.Amount = self.zJadePear.ActivateReqNum
    -- ExpendMaterialInfo.MaterialId = item.Id
    -- table.insert(reqData.ExpendMaterialList,ExpendMaterialInfo)
    -- local zExpend = Z_JadePearlExpend[self.zJadePear.Kind]
    -- if  UIPublic.GetItemAmount(zExpend.ItemId) < self.zJadePear.ActivateReqNum then
    --     UIUtil.ToolTipFourth(LangUtil.GetSysLang(1053),1.5)--"材料不足"
    --     return
    -- elseif self.player.GoldCoin < self.zJadePear.ActivateReqGoldCoin then
    --     UIUtil.ToolTipFourth(LangUtil.GetSysLang(1033),1.5)--"金币不足"
    --     return
    -- end
    -- if Game.Scene:GetComponent("GuideComponent").GuideRun then
    --     self.ctrl:SendJadePearlRequest(reqData)
    -- else
    --     local tipData = {}
    --     tipData.title = LangUtil.GetSysLang(9)--"提示"
    --     tipData.message = string.gsub(LangUtil.GetSysLang(794),"XX",Z_Item[zExpend.ItemId].Name.."x"..self.zJadePear.ActivateReqNum.."、" .. self.zJadePear.ActivateReqGoldCoin..Z_Currency[1].Name)
    --     tipData.message = string.gsub(tipData.message,"Y",self.zJadePear.Level)
    --     tipData.callBack = function()
    --         self.ctrl:SendJadePearlRequest(reqData)
    --     end
    --     UIUtil.ToolTipFirst(tipData)
    -- end
end

local function PlayLvUpEffect(self)
    for k,v in pairs(self.jp_list) do
        if k == self.cur_card.JadePearlLevel then
            local effectRoot = v.transform:Find("EffectRoot")
            if effectRoot.childCount < 1 then
                local text = v.transform:Find("TextRoot/Text"):GetComponent("Text")
                coroutine.start(function()
                    ListChildPool:GetInstance():GetChild(effectNames[self.zJadePear.Kind],effectRoot,function(gameObject)
                        PlayEffect1(gameObject)
                        text.color=Color.New(1, 1, 1, 1)
                        self.jp_audio:Play()
                    end)
                end)
            end
        end
    end
end
local function InitJadePears(self)

    for k,v in pairs(self.jp_list) do
      --  v.transform:Find("Value").gameObject:SetActive(false)
        local effectRoot = v.transform:Find("EffectRoot")
        ListChildPool:GetInstance():ClearContent(effectRoot)
    end

    for k,v in pairs(self.jp_list) do
        coroutine.start(function()
            local effectRoot = v.transform:Find("EffectRoot")
            local text = v.transform:Find("TextRoot/Text"):GetComponent("Text")
            if self.cur_card.JadePearlLevel >= k then
                ListChildPool:GetInstance():GetChild(effectNames[self.zJadePear.Kind],effectRoot,function(gameObject)
                    PlayEffect2(gameObject)
                end)
                text.color=Color.New(1, 1, 1, 1)
            else
                text.color=Color.New(114/255, 127/255, 146/255, 1)
            end
        end)
    end
end

local function InitBot(self,level)
    if level == nil then level =self.zJadePear.Level end
    
    if self.cur_card.JadePearlLevel == maxLevel then
        UIPublic.InitButton(self.jp_ActiveButton,false,1,"Max")
    --elseif not CheckMatterIsEnough(self) then
    --    UIPublic.InitButton(self.jp_ActiveButton,false,1,LangUtil.GetSysLang(204))
    else
        UIPublic.InitButton(self.jp_ActiveButton,true,1,LangUtil.GetSysLang(204))
    end
    
end

local function InitUseItem(self)
    local transform = self.jp_mid.transform
    local useItemList = transform:Find("UseItemList")
    local updateBeadLevel = 0
    if self.cur_card.Bead == 10 then
        updateBeadLevel = 10
    else
        updateBeadLevel = self.cur_card.Bead + 1
    end

    local needItemList = Z_Cost[Z_CharacterBead[self.cur_card.TemplateId][updateBeadLevel].Cost] 

    local goldInfo = {}
    for i = 0, 2 do
        useItemList:GetChild(i).gameObject:SetActive(false)
    end

    local isItemEnough = true

    if needItemList ~= nil then
        for i = 0, #needItemList - 1 do
            local itemId = needItemList[i + 1].ItemId
            if itemId == tonumber(Z_Misc["GOLD_ID"].Value[1]) then
                goldInfo = needItemList[i + 1]
            else
                local child = useItemList:GetChild(i)
                child.gameObject:SetActive(true)
                local image = child:Find("Image"):GetComponent("Image")
                local itemText = child:Find("ItemText"):GetComponent("Text")
                local needMatterText = child:Find("NeedMatterText"):GetComponent("Text")
                local bg = child:GetComponent("Image")
                UIPublic.InitItemIconNew(image, bg, RewardType.RewardTypeItem, itemId)
                itemText.text = Z_Item[itemId].Name
                
                local color = (UIPublic.GetItemAmount(itemId) >= needItemList[i + 1].Count and {"<color=#FFFFFF>"} or {"<color=#FF6243>"})[1]
                needMatterText.text = color .. UIPublic.GetItemAmount(itemId) .. "</color>/" .. needItemList[i + 1].Count
                if UIPublic.GetItemAmount(itemId) < needItemList[i + 1].Count then
                    isItemEnough = false
                end

                UIUtil.AddBtnEventNoBug(child.gameObject,function(go)
                    local showData = {}
                    showData.showType = ShowType.Item
                    showData.tempId = itemId
                    UIUtil.OpenThingsDetailWindow(showData, true)
                end)
            end
        end
    end
    
    local holdNum = UIPublic.GetItemAmount(Z_Misc["GOLD_ID"].Value[1])
    if self.cur_card.JadePearlLevel == maxLevel or goldInfo.Count == nil then
        self.needGoldTxt.text = 0
    else
        local color = (holdNum >= goldInfo.Count and {"<color=#FFFFFF>"} or {"<color=#FF6243>"})[1]
        self.needGoldTxt.text = color .. goldInfo.Count .. "</color>"
    end

    if holdNum < goldInfo.Count then
        isItemEnough = false
    end

    UIPublic.InitButton(self.intensButton, isItemEnough)
end

local function infoEventClick(self)
    --self.ActiveInfoEvent:SetActive(false)
    self.ActiveInfoDetail:SetActive(false)
end

function this.OnClickJadePearl(self,level)
    InitBot(self,level)
end

local function InitJadePearPanel(self,card)
    self.cur_card = card 
    InitUseItem(self)
    UIPublic.SetJaderPanel(self.JadePanel, self.cur_card)

    local titelList = {}

    for i = 1, 10 do
        table.insert(titelList, "第" .. romaList [i] .. "層")
    end

    UIPublic.InitDescription(
    self.ActiveInfoDetail.transform, 
    Z_CharacterBead[self.cur_card.TemplateId], 
    self.cur_card.Bead, 10, 
    titelList)

    local descriptionList = {}
    for i = 0,self.JadePanel.childCount - 1 do
        descriptionList[i+1] = self.JadePanel:GetChild(i)
    end

    for beadLevel, v in table.pairsByKeys(descriptionList) do
        UIUtil.AddBtnEvent(v,function()
            self.descriptionRoot:Find("Description"):GetComponent("Text").text = Z_CharacterBead[self.cur_card.TemplateId][beadLevel].Description
            self.descriptionRoot:Find("LayerText"):GetComponent("Text").text = titelList[beadLevel]
        end)
    end

    local nextBeadLevel = self.cur_card.Bead + 1
    if self.cur_card.Bead == maxLevel then
        nextBeadLevel = maxLevel
    end

    self.descriptionRoot:Find("Description"):GetComponent("Text").text = Z_CharacterBead[self.cur_card.TemplateId][nextBeadLevel].Description
    self.descriptionRoot:Find("LayerText"):GetComponent("Text").text = titelList[nextBeadLevel]

    self.jp_maxStatus.gameObject:SetActive(self.cur_card.Bead == maxLevel)
    self.useItemList.gameObject:SetActive(self.cur_card.Bead ~= maxLevel)
    UIPublic.InitButton(self.intensButton,self.cur_card.Bead ~= maxLevel)
end

function this.Init(self,card,onCardChg)

    self.jp_audio.volume = ClientData:GetInstance():GetVolume("SoundVolume")
    InitJadePearPanel(self,card)
    if not onCardChg then
        InitJadePears(self)
    end
    self.jp_init = true
end

function this.OnLangCreate(self,panel)
    local langRc = panel.transform:Find("LangControl"):GetComponent("ReferenceCollector")
    self.needGoldTxt = LangUtil.BindText(langRc:GetObject("NeedGoldTextRoot").transform:Find("Text"), FontType.All_Number)
    --LangUtil.BindText(langRc:GetObject("UseGoldTextRoot").transform:Find("Text")).text = LangUtil.GetSysLang(125)

    self.jp_maxStatus.transform:Find("MaxText"):GetComponent("Text").text = LangUtil.GetSysLang(2131)
end

function this.OnCreate(self,panel)
    local rc = panel:GetComponent("ReferenceCollector")
    self.jp_init = false
    self.jp_audio = panel:GetComponent(typeof(AudioSource))
    self.closeButton = rc:GetObject("CloseButton")
    --self.jp_bot = rc:GetObject("Bottom")
    self.jp_mid = rc:GetObject("Middle")
    self.jp_top = rc:GetObject("Top")
    self.UseGold = rc:GetObject("UseGold")
    self.jp_list = {}
    self.ActiveInfoDetailButton = rc:GetObject("ActiveInfoDetailButton")
    self.ActiveInfoDetail = rc:GetObject("ActiveInfoDetail")
    --self.DescContent = rc:GetObject("DescContent")
    self.JadePanel = rc:GetObject("JadePanel").transform
    self.ActiveInfoDetail:SetActive(false)
    self.intensButton = rc:GetObject("IntensButton")
    self.descriptionRoot = rc:GetObject("DescriptionRoot").transform
    self.jp_maxStatus = rc:GetObject("MaxStatus")
    self.useItemList = rc:GetObject("UseItemList")

    UIUtil.AddBtnEvent(self.closeButton,function()
        self.ActiveInfoDetail:SetActive(false)
    end)
    UIUtil.AddBtnEvent(self.ActiveInfoDetailButton,function()
        self.ActiveInfoDetail:SetActive(true)
    end)
    UIUtil.AddBtnEvent(self.intensButton,
    function()
        JadePearlLogic.OnClickActiveButton(self)
    end)
end

function this.OnCardInfoChg(self,info)
    local card = self.cur_card
    if self.jp_init and card ~= nil then
        if info.cardInfoChgType == CardInfoChgType.Level then
           
        elseif info.cardInfoChgType == CardInfoChgType.Star then
           
        elseif info.cardInfoChgType == CardInfoChgType.JadePearl then
            InitJadePearPanel(self,card)
            PlayLvUpEffect(self)
        elseif info.cardInfoChgType == CardInfoChgType.FightSoul then
           
        elseif info.cardInfoChgType == CardInfoChgType.Equip then
           
        elseif info.cardInfoChgType == CardInfoChgType.Skin then

        elseif info.cardInfoChgType == CardInfoChgType.CloseDegree then
            
        elseif info.cardInfoChgType == CardInfoChgType.Lock then

        end
    end
end

function this.OnDisable(self)
    infoEventClick(self)
    for k,v in pairs(self.jp_list) do
        local effectRoot = v.transform:Find("EffectRoot")
        if  effectRoot.childCount > 0 then
            local child = effectRoot:GetChild(0)
            ListChildPool:GetInstance():Remove(child.gameObject)
        end
    end
end

return this