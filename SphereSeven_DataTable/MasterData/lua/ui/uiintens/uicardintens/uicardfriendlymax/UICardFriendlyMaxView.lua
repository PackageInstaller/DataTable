---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UICardFriendlyMaxView = BaseClass("UICardFriendlyMaxView",UIBaseView);
local base = UIBaseView
local this = UICardFriendlyMaxView


local function InitSkillInfo(self,zSkill,transform)
    local skillIcon = transform:Find("Skill/SkillIcon"):GetComponent("Image")
    local skillIcon1 = transform:Find("Skill/SkillIcon/SkillIcon1"):GetComponent("Image")
    local nameTxt= transform:Find("Size/Name"):GetComponent("Text")
    local descTxt = transform:Find("TextScroll/Viewport/Content/Desc"):GetComponent("Text")
    local lock = transform:Find("Skill/SkillIcon/Lock"):GetComponent("Image")

    skillIcon1:DOFade(1,0)
    lock:DOFade(1,0)
    nameTxt.text = zSkill.Name
    UIUtil.ScrollText(nameTxt)
    descTxt.text = zSkill.CloseFullEfx
    skillIcon1.gameObject:SetActive(true)
    skillIcon1.material = DeActiveMat
    UIUtil.SetSprite(skillIcon,AtlasConfig.SkillIcon,zSkill.SkillIcon)
    UIUtil.SetSprite(skillIcon1,AtlasConfig.SkillIcon,zSkill.SkillIcon)
end

local function PlaySkillInfo(self)
    self.rect1:DOLocalMoveX(self.defX,0.3)
    coroutine.waitforseconds(0.2)
    self.rect2:DOLocalMoveX(self.defX,0.3)
    coroutine.waitforseconds(0.8)
    
    local skillIcon1 = self.skillInfo1:Find("Skill/SkillIcon/SkillIcon1"):GetComponent("Image")
    local skillIcon2 = self.skillInfo2:Find("Skill/SkillIcon/SkillIcon1"):GetComponent("Image")
    local lock1 = self.skillInfo1:Find("Skill/SkillIcon/Lock"):GetComponent("Image")
    local lock2 = self.skillInfo2:Find("Skill/SkillIcon/Lock"):GetComponent("Image")
  
    
    skillIcon1:DOFade(0,0.5)
    skillIcon2:DOFade(0,0.5)

    lock1:DOFade(0,0.5)
    lock2:DOFade(0,0.5)
    coroutine.waitforseconds(1.5)
end


function this.OnLangCreate(self)
    local maxImg = self.langRc:GetObject("Max"):GetComponent("Image")
    local info1 = self.langRc:GetObject("SkillInfo1").transform
    local info2 = self.langRc:GetObject("SkillInfo2").transform

    LangUtil.GetSpriteLang(43,function(sprite)
        maxImg.sprite = sprite
    end)
    LangUtil.BindText(info1:Find("Skill/SkillKind/Value")).text = LangUtil.GetSysLang(140)
    LangUtil.BindText(info2:Find("Skill/SkillKind/Value")).text = LangUtil.GetSysLang(141)
    table.csenuObject(info1,function(t)
        local txt = t:GetComponent("Text")
        if not IsNull(txt) then
            LangUtil.BindText(txt.transform)
        end
    end)

    table.csenuObject(info2,function(t)
        local txt = t:GetComponent("Text")
        if not IsNull(txt) then
            LangUtil.BindText(txt.transform)
        end
    end)
end

function this.OnCreate(self)
    base.OnCreate(self);
    self.audio = self.gameObject:GetComponent("AudioSource")
    self.max = self.rc:GetObject("Max"):GetComponent("Image")
    self.mask = self.rc:GetObject("Mask"):GetComponent("Image")
    self.effect = self.rc:GetObject("Effect")
    self.paint = self.rc:GetObject("Paint"):GetComponent("Image")
    
    self.skillInfo1 = self.rc:GetObject("SkillInfo1").transform
    self.skillInfo2 = self.rc:GetObject("SkillInfo2").transform
    
    self.rect1 = self.skillInfo1:GetComponent("RectTransform")
    self.rect2 = self.skillInfo2:GetComponent("RectTransform")
    
    self.defX = self.rect1.localPosition.x
    self.paint:DOFade(0,0)
    self.max:DOFade(0,0)

    self.uiDrawing = UIDrawing.New(nil, self.paint, nil, SoundType.Degree, nil, self.rc:GetObject("Lines"))
end

function this.OnEnable(self)
    base.OnEnable(self)
    local info  =self.model.info
    self.audio.volume = ClientData:GetInstance():GetVolume("SoundVolume")
    self.card = info.card
    self.rect1:DOLocalMoveX(self.defX+2000,0)
    self.rect2:DOLocalMoveX(self.defX+2000,0)
    local zCard = Z_Card[self.card.TemplateId]
    InitSkillInfo(self,Z_Skill[zCard.PassiveSkill],self.skillInfo1)
    InitSkillInfo(self,Z_Skill[zCard.GeneralAtk],self.skillInfo2)
    self:OnRefresh()
end



function this.OnRefresh(self)
    Game.Scene:GetComponent("SoundComponent"):Stop()
    self.mask.gameObject:SetActive(true)
    self.effect:SetActive(false)
    self.max:DOFade(0,0)
    self.mask:DOFade(1,0)
    self.paint:DOFade(0,0)
    self.uiDrawing:CoPlayImage(self.card.TemplateId, self.card.SkinId)
    --UIPublic.SetCardOriginal(self.card.TemplateId,self.paint,self.card.SkinId,1)
    self.mask:DOFade(0,0.2)
    if self.model.info.callback ~= nil then
        self.model.info.callback()
    end
    self.mask.gameObject:SetActive(false)
    self.effect:SetActive(true)
    self.audio:Play()
    UIPublic.PlayEffect(self.effect)
    coroutine.waitforseconds(0.8)
    self.paint:DOFade(1,0.5)
    self.uiDrawing:CoPlayForceWithoutCallback(SoundType.Degree, 4)
    coroutine.waitforseconds(0.8)
    self.max:DOFade(1,0.2)
    coroutine.waitforseconds(1.5)
    PlaySkillInfo(self)
    UIUtil.OpenSkipHint(function()UIManager:GetInstance():CloseWindow(UIWindowNames.UICardFriendlyMax)end,1)
end

function this.OnAddListener(self)
    base.OnAddListener(self)
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
  
end

function this.OnDisable(self)
    base.OnDisable(self);
    self.paint:DOFade(0,0)
    self.max:DOFade(0,0)
    self.paint.sprite = DeActiveSprite
    self.audio:Stop()
    Game.Scene:GetComponent("SoundComponent"):Stop()
    self.uiDrawing:Disable()
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this;

