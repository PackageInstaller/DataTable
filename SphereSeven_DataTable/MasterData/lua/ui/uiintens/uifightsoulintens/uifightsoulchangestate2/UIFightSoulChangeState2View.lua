---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/5/24 16:58
---

local UIFightSoulChangeState2View = BaseClass("UIFightSoulChangeState2View",UIBaseView);
local base = UIBaseView
local this = UIFightSoulChangeState2View

local function InitFightSoulInfo(self,fightSoul,fightSoulInfo)
    local transform = fightSoulInfo
    local lock = transform:Find("Lock")
    local fightSoulName = transform:Find("Title/FightSoulName"):GetComponent("Text")
    local fightSoulItem = transform:Find("FightVisitItem")
    local prop = transform:Find("PropImg/PropTxt"):GetComponent("Text")
    local desc = transform:Find("TextScroll/Viewport/Content/EffTxt"):GetComponent("Text")
    local holderAvatar = transform:Find("Holder/Avatar"):GetComponent("Image")
    
    local zFightSoul = Z_FightSoul[fightSoul.TemplateId]
    UIUtil.AddBtnEvent(lock.gameObject,function()Game.Scene.Player:GetComponent("FightSoulComponent"):OnLock(fightSoul,lock)  end)
    UIPublic.InitEquipLock(lock, fightSoul.Lock == 1)
    UIPublic.InitFightSoulHolder(holderAvatar,fightSoul)
    fightSoulName.text = Z_Card[zFightSoul.CardId].Name
    UIPublic.InitFightSoulProp(prop,fightSoul)
    UIPublic.InitFightSoulEff(desc,zFightSoul)
    coroutine.start(function()
        UIPublic.InitVsFightSoulItem(fightSoul,fightSoulItem)
    end)
end

local function SendChangeReq(self,dataList,tipStr)
    PublicRequest.SendChangeFightSoulRequest(dataList,function()
        UIManager:GetInstance():CloseWindow(UIWindowNames.UIFightSoulList)
        UIManager:GetInstance():CloseWindow(UIWindowNames.UIFightSoulChangeState2)
        local cardId = Z_FightSoul[self.fightSoul2.TemplateId].CardId
        Game.Scene:GetComponent("SoundComponent"):PlaySoulEquipSound(cardId)
    end)
end


local function OnChange(self)
    
    local IsEquipIds = Game.Scene.Player:GetComponent("FightSoulComponent"):OnEquipFightSoulId()
    
    --local holder = UIPublic.GetFightSoulHolder(self.fightSoul2)
    local dataList = {}
    local data1 = {}
    
    local card = table.first(IsEquipIds,function(v) return v.Id == self.fightSoul1.TemplateId  end).Card --这个一定有装备着

    data1.CardId = card.Id
    for k,v in pairs({1,2,3 } ) do
        data1["FightSoul"..v] = card["FightSoul"..v]
    end
    table.insert(dataList,data1)
    data1["FightSoul"..self.index] = self.fightSoul2.Id
    if self.fightSoul1.TemplateId == self.fightSoul2.TemplateId then
        SendChangeReq(self,dataList,LangUtil.GetSysLang(1031))--更换成功
        return
    end
    if table.any(IsEquipIds,function(h) return h.Id == self.fightSoul2.TemplateId  end) then
        local holder = table.first(IsEquipIds,function(v) return v.Id == self.fightSoul2.TemplateId  end).Card
        if card.Id == holder.Id then
            for i = 1, 3 do
                if holder["FightSoul"..i] ~=0 and Game.Scene.Player:GetComponent("FightSoulComponent").FightSouls[holder["FightSoul"..i]].TemplateId == self.fightSoul2.TemplateId then
                    data1["FightSoul"..i]=0
                end
            end
            SendChangeReq(self,dataList,LangUtil.GetSysLang(1031))--更换成功
            return
        end
        local data2 = {}
        data2.CardId = holder.Id
        for k,v in pairs({1,2,3}) do
            data2["FightSoul"..v] = holder["FightSoul"..v]
            if( holder["FightSoul"..v] ~=0 and Game.Scene.Player:GetComponent("FightSoulComponent").FightSouls[holder["FightSoul"..v]].TemplateId == self.fightSoul2.TemplateId) then
                data2["FightSoul"..v] = 0
            end
        end
        table.insert(dataList,data2)
        local tipData = {}
        tipData.title = LangUtil.GetSysLang(9)--"提示"
        tipData.message = LangUtil.GetSysLang(1030)--"此装备已被穿戴,确定更换？"
        tipData.callBack = function() SendChangeReq(self,dataList) end
        UIUtil.ToolTipFirst(tipData)
    else
        SendChangeReq(self,dataList,LangUtil.GetSysLang(1031))--更换成功
    end
end



function this.OnLangCreate(self)
    LangUtil.BindText(self.fightSoul1Info:Find("Title/FightSoulName"))
    LangUtil.BindText(self.fightSoul1Info:Find("PropImg/PropTxt"))
    LangUtil.BindText(self.fightSoul1Info:Find("TextScroll/Viewport/Content/EffTxt"))
    LangUtil.BindText(self.fightSoul2Info:Find("Title/FightSoulName"))
    LangUtil.BindText(self.fightSoul2Info:Find("PropImg/PropTxt"))
    LangUtil.BindText(self.fightSoul2Info:Find("TextScroll/Viewport/Content/EffTxt"))

    LangUtil.BindText(self.langRc:GetObject("CancelText")).text = LangUtil.GetSysLang(371)
    LangUtil.BindText(self.langRc:GetObject("ConfirmText")).text = LangUtil.GetSysLang(370)
end

function this.OnCreate(self)
    base.OnCreate(self)
    self.fightSoul1Info = self.rc:GetObject("FightSoulInfoLeft").transform
    self.fightSoul2Info = self.rc:GetObject("FightSoulInfoRight").transform
    
    local eventBg = self.rc:GetObject("EventBg")
    
    local confirmBtn = self.rc:GetObject("ConfirmButton").gameObject
    local cancelBtn = self.rc:GetObject("CancelButton").gameObject

    UIUtil.AddBtnEvent(confirmBtn,function()OnChange(self)  end)
    
    local func = function()UIManager:GetInstance():CloseWindow(UIWindowNames.UIFightSoulChangeState2) end
   
    EventTriggerListener.Get(eventBg).onLuaClick = func
    UIUtil.AddBtnEvent(cancelBtn,func)
    
end

function this.OnEnable(self)
    base.OnEnable(self);
    self:OnRefresh();
end



function this.OnRefresh(self)
    local info = self.model.info
    self.fightSoul1 = info.fightSoul1
    self.fightSoul2 = info.fightSoul2
    self.index = info.index

    InitFightSoulInfo(self,self.fightSoul1,self.fightSoul1Info)
    InitFightSoulInfo(self,self.fightSoul2,self.fightSoul2Info)
    
end

local function  OnFightSoulChg(self)
    InitFightSoulInfo(self,self.fightSoul1,self.fightSoul1Info)
    InitFightSoulInfo(self,self.fightSoul2,self.fightSoul2Info)
end

function this.OnAddListener(self)
    base.OnAddListener(self)
    self:AddUIListener(UIMessageNames.ON_FIGHTSOUL_INFO_CHG,OnFightSoulChg);
end

function this.OnRemoveListener(self)
    base.OnRemoveListener(self);
    self:RemoveUIListener(UIMessageNames.ON_FIGHTSOUL_INFO_CHG);
end

function this.OnDisable(self)
    base.OnDisable(self);
end

function this.OnDestroy(self)
    base.OnDestroy(self);
end

return this;

