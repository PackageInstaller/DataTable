---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/18 11:30
---

local ResolveLogic = {};
local this= ResolveLogic;
local pfbName = "FightVisitItemMid"
local recordOrder = {order = 1,kind = 1}  --是否正序  顺序类型
local screenTypes = {
    --- 职业
    abiliType = 0,
    --- 星级
    star = 0,
    --- 稀有度
    rare = 0,
    --- 是否装备
    isEquip = 0
}



local function InitNumTxt(self)
    self.ShowNumTextValue.text = self.rs_sand --"<color=#AAD2FF>"..Z_Currency[4].Name.."</color><color=#FFF2AA>x"...."</color>"
    self.rs_holdNumTxt.text = table.count(self.rs_Ids).."/"..30
    this.InitButton(self)
end

local function CountGetNum(self,id,isAdd)
    local fightSoul = self.fightSouls[id]
    local zFightSoul = Z_FightSoul[fightSoul.TemplateId]
    
    local zFightSoulDecompose = Z_FightSoulDecompose[zFightSoul.Rare]

    -- if isAdd then
    --     self.rs_sand = self.rs_sand + zFightSoulDecompose.StarSandPer*fightSoul.Star
    -- else
    --     self.rs_sand = self.rs_sand - zFightSoulDecompose.StarSandPer*fightSoul.Star
    -- end

    InitNumTxt(self)
end

local function RemoveFightSoul(self,id)
    table.removebyvalue(self.rs_Ids,id)
    CountGetNum(self,id,false)
end

local function AddFightSoul(self,id)
    if table.any(self.rs_Ids,function(v) return v == id  end) then
        RemoveFightSoul(self,id)
        return
    end
    if table.count(self.rs_Ids) >= 30 then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(2030))
        return
    end
    table.insert(self.rs_Ids,id)
    CountGetNum(self,id,true)
end


local function OnResolveButton(self)
    if table.count(self.rs_Ids) == 0 then return end
    local req = {}
    req.uids = {}
    for k,v in pairs(self.rs_Ids) do
        table.insert(req.uids,v)
    end

    if table.count(req.uids) == 0 then
        UIUtil.ToolTipFourth("归魂不能为空")
        return
    end
    UIUtil.ToolTipFourth("脚本已经弃用, 不应该走到这里")
    Logger.Log("脚本已经弃用, 不应该走到这里")
end



local function OnFightSoulItem(self,id)
    
    
    local fightSoul = self.fightSouls[id]
    if UIPublic.GetFightSoulHolder(fightSoul) ~= nil then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(2036))
        return
    end

    if fightSoul.Lock == 1 then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(2037))
        return
    end
    AddFightSoul(self,id)
    this.InitButton(self)
end



local function OnScreenButton(self)
    local uiData = {}
    uiData.recordOrder = recordOrder
    uiData.screenTypes = screenTypes
    uiData.callBack = function(list,kind)
        screenTypes = table.clone(list)
        recordOrder.kind = kind
        this.InitFightSoulListData(self)
        this.InitFightSoulList(self)
        self.rs_scroll:MoveTop()
    end

    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFightSoulSort,uiData)
end


local function InitSortButton(self)
    local txt = self.rs_sortBtn.transform:Find("Text"):GetComponent("Text")
    txt.text = (recordOrder.order == 1 and {LangUtil.GetSysLang(154)} or {LangUtil.GetSysLang(153)})[1]
    self.rs_scroll:MoveTop()
end


local function OnSortButton(self)
    recordOrder.order = (recordOrder.order == 1 and {2}or {1})[1]
    InitSortButton(self)
    this.InitFightSoulListData(self)
    this.InitFightSoulList(self)
end

function this.InitFightSoulListData(self)
    self.rs_list = {}
    for k,v in table.pairsByKeys(self.fightSouls) do
        if v.Lock ~=1 and UIPublic.GetFightSoulHolder(v) == nil and Z_Card[Z_FightSoul[v.TemplateId].CardId].NotOpen ~= 1 then
            table.insert(self.rs_list,v)  
        end
    end

    self.rs_list = UIPublic.FightSoulScreenFunc(self.rs_list,screenTypes)
    table.sort(self.rs_list, function(a,b) return UIPublic.FightSoulSortFunc(a,b,recordOrder)end )

    if recordOrder.order ~= 1 then
        self.rs_list = table.reverseTable(self.rs_list)
    end
end

function this.InitFightSoulList(self)
    self.rs_hint:SetActive(table.count(self.rs_list) == 0)
    self.rs_scroll:RefreshData(self.rs_list)
end




function this.InitButton(self)
    UIPublic.InitButton(self.rs_btn,table.count(self.rs_Ids) > 0,1)
end

function this.Init(self)
    self.rs_Ids = {}
    self.rs_holdNumTxt.text = table.count(self.rs_Ids).."/"..30
    self.rs_sand = 0
    InitSortButton(self)
    InitNumTxt(self)
    this.InitButton(self)
    self.rs_init = true
    this.InitFightSoulListData(self)
    this.InitFightSoulList(self)
end

function this.InitButton(self)
    local _bool = false
    if table.count(self.rs_Ids)>0 then
        _bool = true
    end
    UIPublic.InitButton(self.rs_btn,_bool,1)
end

function this.OnLangCreate(self,panel)
    -- LangUtil.LangTextByName(self.langRc:GetObject("NameTextRoot"),"Text")--.text = LangUtil.GetSysLang(88)
    local langRc = panel.transform:Find("LangControl"):GetComponent("ReferenceCollector")
    local resolve = langRc:GetObject("ResolveButton").transform
    local rewardInfo = langRc:GetObject("RewardInfo").transform
    local holdNum = langRc:GetObject("HoldNum").transform
    local screenBtn = langRc:GetObject("ScreenButton").transform
    local sortBtn = langRc:GetObject("SortButton").transform

    LangUtil.BindText(resolve:Find("Text")).text = LangUtil.GetSysLang(3114)
    LangUtil.BindText(screenBtn:Find("Text")).text = LangUtil.GetSysLang(155)
    LangUtil.BindText(rewardInfo:Find("Title/Text")).text = LangUtil.GetSysLang(224)
    LangUtil.BindText(rewardInfo:Find("StarSand/Text")).text = LangUtil.GetSysLang(269)
    LangUtil.BindText(rewardInfo:Find("StarSand/StarSandNum"),FontType.All_Number)

    LangUtil.BindText(holdNum:Find("Text")).text = LangUtil.GetSysLang(2060)
    LangUtil.BindText(holdNum:Find("Value"),FontType.All_Number)
    LangUtil.BindText(sortBtn:Find("Text"))
    LangUtil.BindText(self.ShowNumText).text = LangUtil.GetSysLang(224)
    LangUtil.BindText(self.ShowNumTextValue,FontType.All_Number)
end

function this.OnCreate(self)
    local rc = self.panels[4]:GetComponent("ReferenceCollector")
    self.rs_scroll = VerticalScroll.New()
    self.rs_scroll:SetUpdateCount(3)
    self.rs_scrollView = rc:GetObject("ScrollView"):GetComponent("ScrollRect")
    self.rs_list = {}
    self.rs_content = rc:GetObject("Content").transform
    self.rs_btn = rc:GetObject("ResolveButton")
    self.rs_hint = rc:GetObject("Hint")
    self.rs_starSandNumTxt = rc:GetObject("StarSandNum"):GetComponent("Text")
    self.rs_holdNumTxt = rc:GetObject("HoldNum"):GetComponent("Text")
    self.rs_screenBtn = rc:GetObject("ScreenButton")
    self.rs_sortBtn = rc:GetObject("SortButton")
    self.ShowNumText  = rc:GetObject("ShowNumText")
    self.ShowNumTextValue  = rc:GetObject("ShowNumTextValue"):GetComponent("Text")
    self.SandImage = rc:GetObject("SandImage"):GetComponent("Image")
    local starSandRoot = rc:GetObject("StarSand").transform
    UIUtil.SetSprite(starSandRoot:Find("Bg"):GetComponent("Image"),AtlasConfig.ItemBg,Z_Currency[4].IconBg..".png")


    UIUtil.AddBtnEvent(self.rs_screenBtn,function()OnScreenButton(self) end)
    UIUtil.AddBtnEvent(self.rs_sortBtn,function()OnSortButton(self) end)
    UIUtil.AddBtnEvent(self.rs_btn,function()OnResolveButton(self) end)
    self.rs_scroll:Clear()
    self.rs_scroll:ScrollInit(self.rs_list, self.rs_scrollView, pfbName, function (arg)
        local gameObject = arg.go
        local fightSoul = arg.data
        local select = gameObject.transform:Find("Select").gameObject
        local holderAvatar = gameObject.transform:Find("Holder/Avatar"):GetComponent("Image")
        LangUtil.GetSpriteLang(52, function(sprite) select:GetComponent("Image").sprite = sprite end)
        UIUtil.AddBtnEvent(gameObject,function()
            OnFightSoulItem(self,fightSoul.Id)
            select:SetActive(table.first(self.rs_Ids,function(v) return v == fightSoul.Id  end))
            --self.rs_scroll:RefreshData(self.rs_list)
        end)
        UIPublic.InitVsFightSoulItemMId(fightSoul,gameObject.transform)
        -- UIPublic.InitFightSoulHolder(holderAvatar,fightSoul,nil,true)
        select:SetActive(table.first(self.rs_Ids,function(v) return v == fightSoul.Id  end))
        --gameObject.transform.localScale = Vector2.New(0.61,0.61)
    end)
end



function this.OnFightSoulChg(self)
    if self.rs_init then
        self.rs_Ids = {}
        self.rs_holdNumTxt.text = table.count(self.rs_Ids).."/"..30
        self.rs_sand = 0
        InitNumTxt(self)
        this.InitButton(self)
        self.rs_init = true
        this.InitFightSoulListData(self)
        this.InitFightSoulList(self)
    end
end

function this.OnDisable(self)
    if  self.rs_init then
        --self.rs_scroll:Dispose()
        self.rs_init = false
    end
    screenTypes = {star = 0, rare = 0, isEquip = 0}
    recordOrder.order = 1
end
function this.OnDestroy(self)
    self.rs_scroll:Dispose()
end

return this
