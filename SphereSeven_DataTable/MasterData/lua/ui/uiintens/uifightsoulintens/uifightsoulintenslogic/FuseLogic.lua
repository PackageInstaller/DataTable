---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/22 9:54
---

local FuseLogic = {};
local this = FuseLogic

local pfbName = "FightVisitItemMid"

local recordOrder = {order = 1,kind = 1}  --是否正序  顺序类型
local screenTypes = {
    --- 职业
    abiliType = 0,
    --- 星级
    star = 0,
    --- 稀有度
    rare = 0,
    --- 是否装备
    isEquip = 0
}


function this.InitButton(self) --刷新按钮
    local bool1 = false
    local bool2 = false
    
    local fightSoulCount = table.count(table.choose(self.fs_Ids,function(k,v ) return v ~= 0  end) )
    
    if fightSoulCount > 0 then
        bool1 = true
    end

    if fightSoulCount == 2  then --and Game.Scene.Player.GoldCoin > self.fs_goldNum
        bool2 = true
    end


    UIPublic.InitButton(self.fs_clearBtn,bool1,2)
    UIPublic.InitButton(self.fs_btn,bool2,1)

end

local function InitGoldNum(self)
    for k,v in pairs(self.fs_Ids) do
        if v == 0 then
            self.fs_goldNum = 0
            self.fs_goldNumTxt.text = 0
            this.InitButton(self)
            return
        end
    end

    local star = self.fightSouls[self.fs_Ids[1]].Star +self.fightSouls[self.fs_Ids[2]].Star
    -- local zFightSoulFuse = Z_FightSoulFuse[star]
    -- self.fs_goldNum = zFightSoulFuse.ExpendGoldCoin
    -- self.fs_goldNumTxt.text =  zFightSoulFuse.ExpendGoldCoin

    local color1 = Color.New(1,0,0)
    local color2 = Color.New(173/255,210/255,1)
    if self.fs_goldNum > Game.Scene.Player.GoldCoin then
        self.fs_goldNumTxt.color = color1
    else
        self.fs_goldNumTxt.color = color2
    end
    this.InitButton(self)
end

local function InitFuseInfo(self) --刷新底部数据
    if self.fs_fightSoul == nil then
        self.fs_mainFightSoul:Find("FightVisitItem").gameObject:SetActive(false)
        self.effDesc.text=""
        self.propDesc.text=""
        self.holderAvatar.transform.parent.gameObject:SetActive(false)
        self.holderAvatar.transform.parent.parent:Find("HolderBG").gameObject:SetActive(true)
        for i=0, self.starRoot.childCount-1 do
            self.starRoot:GetChild(i).gameObject:SetActive(false)
        end
        --if self.fs_Ids[1] ==0 and self.fs_Ids[2] == 0 then
        --    self.fs_propTxt.transform.parent.gameObject:SetActive(false)
        --    self.fs_propTxt.text = ""
        --    self.fs_effTxt.text = ""
        --    --self.fs_mainFightSoul:Find("FightVisitItem").gameObject:SetActive(false)
        --else
        --    local zPropAdd = table.first(Z_PropAdd,function(v) return v.Name == "FightSoulStarAttrAdd"  end)
        --    local star = 0
        --    local fightSouls  = 0
        --    if self.fs_Ids[1] ~= 0  then
        --        local fightSouls1 = Game.Scene.Player:GetComponent("FightSoulComponent").FightSouls[self.fs_Ids[1]]
        --        fightSouls = fightSouls1
        --        star = star + fightSouls1.Star
        --    end
        --    if self.fs_Ids[2] ~= 0  then
        --        local fightSouls1 = Game.Scene.Player:GetComponent("FightSoulComponent").FightSouls[self.fs_Ids[2]]
        --        fightSouls = fightSouls1
        --        star = star + fightSouls1.Star
        --    end
        --    
        --    local zFightSoul = Z_FightSoul[fightSouls.TemplateId]
        --    
        --    self.fs_propTxt.transform.parent.gameObject:SetActive(true)
        --    self.fs_propTxt.text = LangUtil.GetSysLang(724).."  <color=#fff2aa>+"..(zPropAdd.AttrAdd * (star-1)).."%</color>"
        --    UIPublic.InitFightSoulEff(self.fs_effTxt,zFightSoul)
        --end
        
        
    else
        local zFightSoul = Z_FightSoul[self.fs_fightSoul.TemplateId]
        local fightSoulItem = self.fs_mainFightSoul:Find("FightVisitItem")
        fightSoulItem.gameObject:SetActive(true)
        this.OnClickGO(self,self.fs_fightSoul)
        --self.fs_propTxt.transform.parent.gameObject:SetActive(true)
        UIPublic.InitVsFightSoulItem(self.fs_fightSoul,fightSoulItem)
        --UIPublic.InitFightSoulProp(self.fs_propTxt,self.fs_fightSoul)
        --UIPublic.InitFightSoulEff(self.fs_effTxt,zFightSoul)
    end
    self.fs_fightSoul = nil
end

local function InitMat(self,id) --刷新素材
    local transform = self.mats[id]
    --local transform1 = self.mats1[id]
    local fightSoulItem = transform:Find("FightVisitItemMid")
    --local fightSoulItem1 = transform1:Find("FightVisitItemMid")
    local holderAvatar = transform:Find("FightVisitItemMid/Holder/Avatar"):GetComponent("Image")
    --local holderAvatar1 = transform1:Find("FightVisitItemMid/Holder/Avatar"):GetComponent("Image")
    if self.fs_Ids[id] == 0 then
        fightSoulItem.gameObject:SetActive(false)
        --fightSoulItem1.gameObject:SetActive(false)
        transform.localScale = Vector2.New(1,1)
    else
        fightSoulItem.gameObject:SetActive(true)
        --fightSoulItem1.gameObject:SetActive(true)
        UIPublic.InitVsFightSoulItemMId(self.fightSouls[self.fs_Ids[id]],fightSoulItem)
        --UIPublic.InitVsFightSoulItemMId(self.fightSouls[self.fs_Ids[id]],fightSoulItem1)
        UIPublic.InitFightSoulHolder(holderAvatar,self.fightSouls[self.fs_Ids[id]],nil,true)
        --local holder = UIPublic.GetFightSoulHolder(self.fightSouls[self.fs_Ids[id]])
        --if holder == nil then
        --    holderAvatar.transform.parent.gameObject:SetActive(false)
        --else
        --    holderAvatar.transform.parent.gameObject:SetActive(true)
        --end
        --UIPublic.InitFightSoulHolder(holderAvatar1,self.fightSouls[self.fs_Ids[id]])
        --transform.localScale = Vector2.New(0.61,0.61)
    end
    InitGoldNum(self)
end

local function InitMat1(self,id) --刷新素材
    local transform1 = self.mats1[id]
    local fightSoulItem1 = transform1:Find("FightVisitItemMid")
    local holderAvatar1 = transform1:Find("FightVisitItemMid/Holder/Avatar"):GetComponent("Image")
    if self.fs_Ids1[id] == 0 then
        fightSoulItem1.gameObject:SetActive(false)
    else
        fightSoulItem1.gameObject:SetActive(true)
        UIPublic.InitVsFightSoulItemMId(self.fightSouls[self.fs_Ids1[id]],fightSoulItem1)
        UIPublic.InitFightSoulHolder(holderAvatar1,self.fightSouls[self.fs_Ids1[id]],nil,true)
        --local holder = UIPublic.GetFightSoulHolder(self.fightSouls[self.fs_Ids1[id]])
        --if holder == nil then
        --    holderAvatar1.transform.parent.gameObject:SetActive(false)
        --else
        --    holderAvatar1.transform.parent.gameObject:SetActive(true)
        --end
        --transform.localScale = Vector2.New(0.61,0.61)
    end
end

local function InitMats(self)
    for k,v in pairs(self.mats) do
        InitMat(self,k)
    end
    for k,v in pairs(self.mats1) do
        InitMat1(self,k)
    end
    self.fs_scroll:RefreshData(self.fs_list)
end




local function OnClickFuseButton(self) --点击融合
    if self.fs_goldNum > Game.Scene.Player.GoldCoin then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(1033),1.5)--"金币不足"
        return
    end
    local tipData = {}
    tipData.title = LangUtil.GetSysLang(9)
    tipData.message = LangUtil.GetSysLang(745)
    tipData.callBack = function()
        local holder = UIPublic.GetFightSoulHolder(self.fightSouls[self.fs_Ids[2]])
        if holder ~= nil then
            local fs_id =  self.fs_Ids[1]
            self.fs_Ids[1] = self.fs_Ids[2]
            self.fs_Ids[2] = fs_id
        end
        
        local fightSoul1 = self.fightSouls[self.fs_Ids[1]]
        local fightSoul2 = self.fightSouls[self.fs_Ids[2]]
        local starNum = self.fightSouls[self.fs_Ids[1]].Star
        local player = Game.Scene.Player
        local reqData = {}
        reqData.ExpendGoldCoin = self.fs_goldNum
        reqData.MainFuseFightSoulId = self.fs_Ids[1]
        reqData.Star = fightSoul1.Star + fightSoul2.Star
        reqData.FuseFightSoulList = {self.fs_Ids[2]}

        coroutine.start(function()
            local g2cFightSoulFuse = coroutine.yieldstart(Game.Scene.Session.CoCall, nil,  Game.Scene.Session,
                    OuterOpcode.Name2Code.ETModel_C2M_FightSoulFuse, reqData);

            if g2cFightSoulFuse.Error == ErrorCode.ERR_Success then

                player.GoldCoin = player.GoldCoin - reqData.ExpendGoldCoin;
                local fightSoulComponent = player:GetComponent("FightSoulComponent");
                for k,v in pairs(reqData.FuseFightSoulList) do
                    fightSoulComponent:Remove(v);
                end

                fightSoul1.Star = reqData.Star
                UIManager:GetInstance():OpenWindow(UIWindowNames.UIFightSoulFuse,{fightSoul = fightSoul1,Star = starNum})
                coroutine.waitforframes(30)

                DataManager:GetInstance():Broadcast(DataMessageNames.ON_PLAYER_INFO_CHG);
                DataManager:GetInstance():Broadcast(DataMessageNames.ON_FIGHTSOUL_INFO_CHG);
                coroutine.start(function ()

                end)
                self.fs_fightSoul =  fightSoul1
                InitFuseInfo(self)
            end
        end) end
    UIUtil.ToolTipFirst(tipData)
    
end



local function RemoveFightSoul(self,id) --删除素材
    for k,v in pairs(self.fs_Ids1) do
        if v == id then
            self.fs_Ids1[k]=0
            InitMat1(self,k)
        end
    end
    --InitFuseInfo(self)
    this.InitFightSoulList(self)
end


local function AddFightSoul(self,id) --添加素材
    if self.fs_Ids[1] == 0 then
        if self.fs_Ids[2] ~= 0 then
            if self.fightSouls[self.fs_Ids[2]].TemplateId ~= self.fightSouls[id].TemplateId then
                UIUtil.ToolTipFourth(LangUtil.GetSysLang(2033))
                return
            end
        end
        self.fs_Ids[1] = id
        InitMat(self,1)
    elseif self.fs_Ids[2] == 0 then
        if self.fightSouls[self.fs_Ids[1]].TemplateId ~= self.fightSouls[id].TemplateId then
            UIUtil.ToolTipFourth(LangUtil.GetSysLang(2033))
            return
        end
        self.fs_Ids[2] = id
        InitMat(self,2)
    else
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(2034))
    end
    InitFuseInfo(self)
end

local function AddFightSoul1(self,id) --添加素材
    if self.fs_Ids1[1] == 0 then
        if self.fs_Ids1[2] ~= 0 then
            if self.fightSouls[self.fs_Ids1[2]].TemplateId ~= self.fightSouls[id].TemplateId then
                UIUtil.ToolTipFourth(LangUtil.GetSysLang(2033))
                return
            end
        end
        self.fs_Ids1[1] = id
        InitMat1(self,1)
    elseif self.fs_Ids1[2] == 0 then
        if self.fightSouls[self.fs_Ids1[1]].TemplateId ~= self.fightSouls[id].TemplateId then
            UIUtil.ToolTipFourth(LangUtil.GetSysLang(2033))
            return
        end
        self.fs_Ids1[2] = id
        InitMat1(self,2)
    else
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(2034))
    end
    --InitFuseInfo(self)
end



local function OnFormula(self)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFightSoulFormula)
end

local function OnMat(self,id) --点击素材
    self.choosePanel.gameObject:SetActive(true)
    self.HoldNumValue.text = table.count(self.fightSouls).."/"..Game.Scene.Player.FightSoulsMax
    --self.fs_content.transform:DOLocalMoveY(0,0)
    --self.fs_scroll:RefreshData(self.fs_list)
    --if self.fs_Ids[id] == 0 then self.choosePanel.gameObject:SetActive(true) return end
    --RemoveFightSoul(self,self.fs_Ids[id])
end

local function OnFightSoulItem(self,id) --点击战魂
    
    if id == self.fs_Ids1[1] or id == self.fs_Ids1[2] then
        RemoveFightSoul(self,id)
        return
    end

    local fightSoul = self.fightSouls[id]
    if  fightSoul.Star == 5 then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(2035))
        return
    end
    
    if self.fs_Ids1[1] ~=0   then
        if self.fightSouls[self.fs_Ids1[1]].Star + self.fightSouls[id].Star >5 then
            UIUtil.ToolTipFourth(LangUtil.GetSysLang(2059))
            return
        end
    end


    --if UIPublic.GetFightSoulHolder(self.fightSouls[id]) ~= nil then
    --    UIUtil.ToolTipFourth(LangUtil.GetSysLang(2036))
    --    return
    --end

    if self.fightSouls[id].Lock == 1 then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(2037))
        return
    end


    if self.fightSouls[id].Star >= 5 then--and self.rc_Ids[1] == 0 then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(2038))
        return
    end

    AddFightSoul1(self,id)
end




local function OnScreen(self)
    local uiData = {}
    uiData.recordOrder = recordOrder
    uiData.screenTypes = screenTypes
    uiData.callBack = function(list,kind)
        screenTypes = table.clone(list)
        recordOrder.kind = kind
        this.InitFightSoulListData(self)
        this.InitFightSoulList(self)
        self.fs_scroll:MoveTop()
    end

    UIManager:GetInstance():OpenWindow(UIWindowNames.UIFightSoulSort,uiData)
end


local function InitSortButton(self)
    local txt = self.fs_sortBtn.transform:Find("Text"):GetComponent("Text")
    txt.text = (recordOrder.order == 1 and {LangUtil.GetSysLang(154)} or {LangUtil.GetSysLang(153)})[1]
    self.fs_scroll:MoveTop()
    this.InitFightSoulListData(self)
    this.InitFightSoulList(self)
end


local function OnSort(self)
    recordOrder.order = (recordOrder.order == 1 and {2}or {1})[1]
    InitSortButton(self)
    
end


function this.InitFightSoulListData(self) -- 数据刷新
    self.fs_list = {}
    for k,v in table.pairsByKeys(self.fightSouls) do
        table.insert(self.fs_list,v)
    end

    self.fs_list = UIPublic.FightSoulScreenFunc(self.fs_list,screenTypes)
    table.sort(self.fs_list, function(a,b) return UIPublic.FightSoulSortFunc(a,b,recordOrder)end )

    if recordOrder.order ~= 1 then
        self.fs_list = table.reverseTable(self.fs_list)
    end
end

function this.InitFightSoulList(self)
    self.fs_hint:SetActive(table.count(self.fs_list) == 0)
    self.fs_scroll:RefreshData(self.fs_list)
end


function this.Init(self)
    self.fs_Ids = {0,0}
    self.fs_Ids1 = {0,0}
    self.fs_goldNum = 0
    InitMats(self)
    InitGoldNum(self)
    InitFuseInfo(self)
    InitSortButton(self)
    self.choosePanel.gameObject:SetActive(false)
    --this.InitFightSoulListData(self)
    --this.InitFightSoulList(self)
    self.HoldNumValue.text = table.count(self.fightSouls).."/"..Game.Scene.Player.FightSoulsMax
    self.fs_init = true
end

function this.OnClickGO(self,fightSoul)
    UIPublic.InitFightSoulEff(self.effDesc,Z_FightSoul[fightSoul.TemplateId])
    UIPublic.InitFightSoulProp(self.propDesc,fightSoul)
    --UIPublic.InitEquipLock(self.lock,self.fightSoul.Lock == 1)
    UIPublic.InitFightSoulHolder(self.holderAvatar,fightSoul)
    --local holder = UIPublic.GetFightSoulHolder(fightSoul)
    --if holder == nil then
    --    self.holderAvatar.transform.parent.gameObject:SetActive(false)
    --else
    --    self.holderAvatar.transform.parent.gameObject:SetActive(true)
    --end
    --if self.cur_card == nil  then
    --    self.holderAvatar.gameObject:SetActive(false)
    --else
    --    local ZCard = Z_Card[self.cur_card.TemplateId]
    --    UIUtil.SetCardSprite(self.holderAvatar,ZCard.Id,self.cur_card.SkinId,CardPictureType.Little)
    --end
    
   
    for i=0, self.starRoot.childCount-1 do
        self.starRoot:GetChild(i).gameObject:SetActive(i<=fightSoul.Star - 1)
    end
end

function this.OnLangCreate(self,panel)
    -- LangUtil.LangTextByName(self.langRc:GetObject("NameTextRoot"),"Text")--.text = LangUtil.GetSysLang(88)
    local langRc = panel.transform:Find("LangControl"):GetComponent("ReferenceCollector")
    local effTxt= langRc:GetObject("EffTxt").transform
    --local propTxt = langRc:GetObject("PropTxt").transform
    local recastBtn = langRc:GetObject("RecastButton").transform
    local clearBtn = langRc:GetObject("ClearButton").transform
    local formulaBtn = langRc:GetObject("FormulaButton").transform
    local screenBtn = langRc:GetObject("ScreenButton").transform
    local sortBtn = langRc:GetObject("SortButton").transform
    local spendGold = langRc:GetObject("SpendGold").transform
    
    LangUtil.BindText(effTxt)
    --LangUtil.BindText(propTxt)
    LangUtil.BindText(recastBtn:Find("Text")).text = LangUtil.GetSysLang(260)
    LangUtil.BindText(clearBtn:Find("Text")).text = LangUtil.GetSysLang(261)
    LangUtil.BindText(formulaBtn:Find("Text")).text = LangUtil.GetSysLang(262)
    LangUtil.BindText(screenBtn:Find("Text")).text = LangUtil.GetSysLang(155)
    LangUtil.BindText(sortBtn:Find("Text"))
    LangUtil.BindText(spendGold:Find("Txt")).text = LangUtil.GetSysLang(205)
    LangUtil.BindText(spendGold:Find("GoldNum"),FontType.All_Number)
    self.HoldNumValue = LangUtil.BindText(langRc:GetObject("HoldNumValue"),"Number")
    LangUtil.BindText(langRc:GetObject("HoldNumText")).text = LangUtil.GetSysLang(312)
    LangUtil.BindText(self.AddButton.transform:Find("Text")).text = LangUtil.GetSysLang(322)
    LangUtil.BindText(self.CancelButton.transform:Find("Text")).text = LangUtil.GetSysLang(146)
    LangUtil.BindText(langRc:GetObject("RighttitleText")).text = LangUtil.GetSysLang(808)

    LangUtil.BindText(self.effDesc)
    LangUtil.BindText(self.propDesc)
    LangUtil.BindText(langRc:GetObject("Text")).text= LangUtil.GetSysLang(257)
    LangUtil.BindText(langRc:GetObject("Text1")).text= LangUtil.GetSysLang(804)
    LangUtil.BindText(langRc:GetObject("Text2")).text= LangUtil.GetSysLang(167)
    LangUtil.BindText(langRc:GetObject("Text3")).text= LangUtil.GetSysLang(805)
    LangUtil.BindText(langRc:GetObject("Text4")).text= LangUtil.GetSysLang(806)

end

function this.OnCreate(self)
    local rc = self.panels[3]:GetComponent("ReferenceCollector")
    self.fs_scroll = VerticalScroll.New()
    self.fs_scroll:SetUpdateCount(12)
    self.fs_list = {}
    self.fs_scrollView = rc:GetObject("ScrollView"):GetComponent("ScrollRect")
    self.fs_mainFightSoul = rc:GetObject("MainFightSoul").transform
    self.fs_content = rc:GetObject("Content").transform
    self.fs_sortBtn = rc:GetObject("SortButton")
    self.fs_screenBtn = rc:GetObject("ScreenButton")
    self.fs_goldNumTxt = rc:GetObject("GoldNum"):GetComponent("Text")
    local matRoot = rc:GetObject("MatRoot").transform
    local fs_formulaBtn = rc:GetObject("FormulaButton")
    self.fs_btn = rc:GetObject("RecastButton")
    self.fs_clearBtn = rc:GetObject("ClearButton")
    self.fs_effTxt = rc:GetObject("EffTxt"):GetComponent("Text")
    --self.fs_propTxt = rc:GetObject("PropTxt"):GetComponent("Text")
    self.fs_hint = rc:GetObject("Hint")

    local matRoot1 = rc:GetObject("RightBG").transform
    self.eventBut = rc:GetObject("eventBut")
    self.Close = rc:GetObject("Close")
    self.AddButton = rc:GetObject("AddButton")
    self.CancelButton = rc:GetObject("CancelButton")
    self.choosePanel = rc:GetObject("choosePanel")


    self.effDesc = rc:GetObject("EffDesc"):GetComponent("Text")
    self.propDesc = rc:GetObject("PropDesc"):GetComponent("Text")
    self.holderAvatar = rc:GetObject("Avatar"):GetComponent("Image")
    --self.holderAvatar1 = self.rc:GetObject("Avatar1"):GetComponent("Image")
    self.starRoot = rc:GetObject("StarRoot").transform
    
    self.mats = {}
    for i=0,matRoot.childCount-1 do
        local child = matRoot:GetChild(i)
        self.mats[i+1] = child
        UIUtil.AddBtnEvent(child,function()  OnMat(self,i+1)  end)
    end
    
    self.mats1 = {}
    for i=1,matRoot1.childCount-1 do
        local child = matRoot1:GetChild(i)
        self.mats1[i] = child
        UIUtil.AddBtnEvent(child,function()
            local id = self.fs_Ids1[i]
            if id ~= 0 then
                RemoveFightSoul(self,id)
            end
           
            return
        end)
    end
    
    UIUtil.AddBtnEvent(fs_formulaBtn,function () OnFormula(self) end)
    UIUtil.AddBtnEvent(self.fs_btn,function()OnClickFuseButton(self)  end)
    UIUtil.AddBtnEvent(self.fs_clearBtn,function() this.Init(self)  end)
    UIUtil.AddBtnEvent(self.fs_sortBtn,function() OnSort(self) end)
    UIUtil.AddBtnEvent(self.fs_screenBtn,function() OnScreen(self)  end)
    UIUtil.AddBtnEvent(self.AddButton,function() self.choosePanel.gameObject:SetActive(false) self.fs_Ids = table.clone(self.fs_Ids1) InitMats(self)  InitFuseInfo(self) end)
    UIUtil.AddBtnEvent(self.eventBut,function() self.choosePanel.gameObject:SetActive(false) self.fs_Ids1 = table.clone(self.fs_Ids) InitMats(self) InitFuseInfo(self)  end)
    UIUtil.AddBtnEvent(self.Close,function() self.choosePanel.gameObject:SetActive(false) self.fs_Ids1 = table.clone(self.fs_Ids) InitMats(self) InitFuseInfo(self) end)
    UIUtil.AddBtnEvent(self.CancelButton,function() self.choosePanel.gameObject:SetActive(false) self.fs_Ids1 = table.clone(self.fs_Ids) InitMats(self) InitFuseInfo(self) end)

    self.fs_scroll:Clear()
    self.fs_scroll:ScrollInit(self.fs_list, self.fs_scrollView, pfbName, function (arg)
        local gameObject = arg.go
        local fightSoul = arg.data
        local select = gameObject.transform:Find("Select").gameObject
        local NoSelect = gameObject.transform:Find("NoSelect").gameObject
        UIUtil.AddBtnEvent(gameObject,function()
            OnFightSoulItem(self,fightSoul.Id)
            self.fs_scroll:RefreshData(self.fs_list)
        end)
        local holderAvatar = gameObject.transform:Find("Holder/Avatar"):GetComponent("Image")
        UIPublic.InitFightSoulHolder(holderAvatar,fightSoul,nil,true)
        --local holder = UIPublic.GetFightSoulHolder(fightSoul)
        --if holder == nil then
        --    holderAvatar.transform.parent.gameObject:SetActive(false)
        --else
        --    holderAvatar.transform.parent.gameObject:SetActive(true)
        --end
        UIPublic.InitVsFightSoulItemMId(fightSoul, gameObject.transform)
        --gameObject.transform.localScale = Vector2.New(0.61,0.61)
        LangUtil.GetSpriteLang(52, function(sprite) select:GetComponent("Image").sprite = sprite end)
        select:SetActive(table.first(self.fs_Ids1,function(v) return v == fightSoul.Id   end))
        NoSelect:SetActive(table.first(self.fs_Ids1,function(v)
            if v ~= 0 then
                local templateId= Game.Scene.Player:GetComponent("FightSoulComponent").FightSouls[v].TemplateId
                return templateId ~= fightSoul.TemplateId
            else
                return false
            end

        end))
    end)
end






function this.OnFightSoulChg(self)
    if self.fs_init then
        self.fs_Ids = {0,0}
        self.fs_Ids1 = {0,0}
        self.fs_goldNum = 0
        InitMats(self)
        InitGoldNum(self)
        InitFuseInfo(self)
        this.InitFightSoulListData(self)
        this.InitFightSoulList(self)
        self.fs_init = true
    end
end

function this.OnDisable(self)
    if self.fs_init then
        self.fs_init = false
        --self.fs_scroll:Dispose()
    end
    screenTypes = {star = 0, rare = 0, isEquip = 0}
    recordOrder.order = 1
end

function this.OnDestroy(self)
    self.fs_scroll:Dispose()
end



return this;