---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/18 11:29
---

local EquipChange = {};
local this = EquipChange;
local portNames = {"Hand1Equip","Hand2Equip","BodyEquip","HeadEquip","FootEquip","AdornEquip",}

local color0 = Color.New(105/255,121/255,157/255)
local color1 = Color.New(255/255,255/255,255/255)

function this.OnClearButton(self)
    if self.cur_card ~= nil then
        local send_data_list = {};
        local send_data = {};
        self.chg_part = nil
        send_data.CardId = self.cur_card.Id;
        for k,v in pairs(portNames) do
            send_data[v] = 0
        end
        table.insert(send_data_list,send_data);
        PublicRequest.SendChangeEquipRequest(send_data_list);
    end
end

local function InitEquip(self,equip,part)
    local transform = self.chg_equips[part]

    local equipInfo = transform:Find("IconRoot/EquipItemNew")
    local addBtn = transform:Find("AddButton")
    local name = transform:Find("Name"):GetComponent("Text")
    local prop = transform:Find("Prop")

    equipInfo.gameObject:SetActive(false)
    addBtn.gameObject:SetActive(false)
    prop.gameObject:SetActive(false)

    if equip ~= nil then
        local zEquip = Z_Equip[equip.TemplateId]
        name.text = zEquip.Name
        name.color = color1
        UIPublic.InitEquipProp(prop,equip)
        coroutine.start(function()
            UIPublic.InitEquipItemNew(equipInfo,equip)
            equipInfo.gameObject:SetActive(true)
            prop.gameObject:SetActive(true)
        end)
    else
        name.text = LangUtil.GetSysLang(2025)
        name.color = color0
        addBtn.gameObject:SetActive(true)
    end

end


local function InitEquips(self)
    for k,v in table.pairsByKeys(self.chg_equips) do
        local equipId = self.cur_card[portNames[k]]
        InitEquip(self,self.equips[equipId],k)
    end

end



function this.Init(self)
    self.chg_part = nil
    if self.cur_card ==nil then
        self.chg_init = false
        UIPublic.InitNumerical(self.chg_numerical,self.cur_card)
        self.chg_cardInfo.transform.parent.gameObject:SetActive(false)
        for i, v in pairs(self.chg_equips) do
            v.transform:Find("IconRoot").gameObject:SetActive(false)
            v.transform:Find("Prop").gameObject:SetActive(false)
            local name = v.transform:Find("Name"):GetComponent("Text")
            name.color = color0
            name.text=LangUtil.GetSysLang(2025)
        end
    else
        for i, v in pairs(self.chg_equips) do
            v.transform:Find("IconRoot").gameObject:SetActive(true)
            v.transform:Find("Prop").gameObject:SetActive(true)
            local name = v.transform:Find("Name"):GetComponent("Text")
            name.color = color0
            name.text=LangUtil.GetSysLang(2025)
        end
        
        UIPublic.InitCardItemDataNew(self.cur_card,self.chg_cardInfo,true)
        UIPublic.InitNumerical(self.chg_numerical,self.cur_card)
        UIPublic.InitExpArea(self.chg_expBar,self.cur_card)
        self.chg_cardInfo.transform.parent.gameObject:SetActive(true)
        InitEquips(self)
        self.chg_init = true
    end
    
end


function this.OnEquipInfoChg(self)  --接受广播
    if self.chg_init then
        --if self.chg_part ~= nil then
        --    UIPublic.InitNumerical(self.chg_numerical,self.cur_card)
        --    local equipId = self.cur_card[portNames[self.chg_part]]
        --    local equip = self.equips[equipId]
        --    InitEquip(self,equip,self.chg_part)
        --else
            InitEquips(self)
        --end
        self.chg_part = nil
    end
    UIPublic.InitNumerical(self.chg_numerical,self.cur_card)
end

local function OpenCardList(self)  --打开角色列表
    UIUtil.OpenCardList({callBack = function(card)
        self.cur_card = card
        self.chg_init = false
        this.Init(self)
    end })
end

local function ChangeEquip(self,part) --更换装备  打开装备列表
    if self.cur_card == nil  then
        UIUtil.ToolTipFourth(LangUtil.GetSysLang(812))
        return
    end
    self.chg_part = part

    local equipId = self.cur_card[portNames[part]]
    if equipId ~= 0 then
        local equip = self.equips[equipId]
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIEquipChangeState1,
                {equip = equip,card = self.cur_card,state = 2,part = part}
        )
    else
        local uiData = {}
        uiData.card = self.cur_card
        uiData.part = part
        uiData.equipList = table.choose(self.equips,function(k,v)
            local zEquip = Z_Equip[v.TemplateId]
            return zEquip.Part == part
        end)
        UIManager:GetInstance():OpenWindow(UIWindowNames.UIShowEquip,uiData)
    end
    
end


function this.OnLangCreate(self,panel)
    -- LangUtil.LangTextByName(self.langRc:GetObject("NameTextRoot"),"Text")--.text = LangUtil.GetSysLang(88)
    local langRc = panel.transform:Find("LangControl"):GetComponent("ReferenceCollector")
    local equipsRoot = langRc:GetObject("EquipList").transform
    local cardListBtn = langRc:GetObject("CardListButton").transform
    local DeEquipBtn = langRc:GetObject("DeEquipButton").transform
    local levelText = langRc:GetObject("LevelText").transform
    local numerical = langRc:GetObject("Numerical").transform

    UIPublic.CreateNumericalLang(numerical)
    LangUtil.BindText(levelText,FontType.All_Number)
    for i = 0,equipsRoot.childCount - 1 do
        local child = equipsRoot:GetChild(i)
        LangUtil.BindText(child:Find("Part")).text = LangUtil.GetSysLang(243+i)
        LangUtil.BindText(child:Find("Prop/Text"))
        LangUtil.BindText(child:Find("Prop/Value"),All_Number)
        LangUtil.BindText(child:Find("Name"))
    end
    LangUtil.BindText(cardListBtn:Find("Text")).text = LangUtil.GetSysLang(249)
    LangUtil.BindText(DeEquipBtn:Find("Text") ).text = LangUtil.GetSysLang(250)
end

function this.Create(self)
    local rc = self.change_panel:GetComponent("ReferenceCollector")
    self.chg_init = false
    self.chg_clear = rc:GetObject("ClearButton")
    local equipRoot = rc:GetObject("EquipCtrl").transform
    self.chg_content = rc:GetObject("Content")
    self.chg_cardInfo = rc:GetObject("CardInfo").transform
    self.chg_numerical = rc:GetObject("Numerical")
    self.chg_expBar = rc:GetObject("ExpBar")
    self.chg_equips = {}
    local cardListBtn = rc:GetObject("CardListButton")
    local ImageBtn = rc:GetObject("ImageBtn")

    for i = 0,equipRoot.childCount - 1 do
        local child = equipRoot:GetChild(i)
        table.insert(self.chg_equips,child)
        UIUtil.AddBtnEvent(child.gameObject,function()ChangeEquip(self,i+1)  end)
    end

    UIUtil.AddBtnEvent(self.chg_clear,function() this.OnClearButton(self) end)
    UIUtil.AddBtnEvent(cardListBtn,function() OpenCardList(self) end)
    UIUtil.AddBtnEvent(ImageBtn,function() OpenCardList(self) end)
end


function this.OnDisable(self)
    self.chg_init = false
end

return this
