---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/18 10:12
---

local UIEquipIntensCtrl = BaseClass("UIEquipIntensCtrl",UIBaseCtrl);
local this = UIEquipIntensCtrl;

function this.CloseSelf()
    UIManager:GetInstance():DestroyWindowNoRecycle(UIWindowNames.UIEquipIntens);
end

function this.OpenShowEquipWindow(self,data)
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIShowEquip,data);
end

function this.OpenShowPropWindow(self,data) --打开显示物品窗口
    UIManager:GetInstance():OpenWindow(UIWindowNames.UIShowProp,data);
end


function this.SendLockRequest(self,equip)
    local reqData = {};
    reqData.EquipId = equip.Id;
    reqData.Lock = (equip.Lock == 0 and {1} or {0})[1];

    coroutine.start(function()
        local g2cEquipLock = coroutine.yieldstart(Game.Scene.Session.CoCall, nil,  Game.Scene.Session,
                OuterOpcode.Name2Code.ETModel_C2M_EquipLock, reqData);

        if g2cEquipLock.Error == ErrorCode.ERR_Success then
            
            equip.Lock = reqData.Lock;
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_EQUIP_INFO_CHG);
            local str = (reqData.Lock == 1 and {LangUtil.GetSysLang(2022)} or {LangUtil.GetSysLang(2023)})[1];
            UIUtil.ToolTipFourth(str);
        end
    end)
end


function this.SendChangeEquipRequest(data)
    local send_data = {};
    local part = Z_Equip[data.new_equip.TemplateId].Part;
    local card = data.card;
    send_data.CardId = data.card.Id;
    send_data.Hand1Equip=card.Hand1Equip
    send_data.Hand2Equip=card.Hand2Equip
    send_data.BodyEquip=card.BodyEquip
    send_data.HeadEquip=card.HeadEquip
    send_data.FootEquip=card.FootEquip
    send_data.AdornEquip=card.AdornEquip
    if part== 1 then
        send_data.Hand1Equip = data.new_equip.Id;
    elseif part == 2 then
        send_data.Hand2Equip = data.new_equip.Id;
    elseif part == 3 then
        send_data.BodyEquip = data.new_equip.Id;
    elseif part == 4 then
        send_data.HeadEquip = data.new_equip.Id;
    elseif part == 5 then
        send_data.FootEquip = data.new_equip.Id;
    elseif part == 6 then
        send_data.AdornEquip = data.new_equip.Id;
    end

    coroutine.start(function()
        local g2cCardEquipChange = coroutine.yieldstart(Game.Scene.Session.CoCall, nil,  Game.Scene.Session,
                OuterOpcode.Name2Code.ETModel_C2M_CardEquipChange, send_data);

        if g2cCardEquipChange.Error == ErrorCode.ERR_Success then
           
            if data.old_equip ~= nil then
                card:GetComponent("CardEquipComponent"):UnEquipEquip(data.old_equip);
            end
            card:GetComponent("CardEquipComponent"):EquipEquip(data.new_equip);
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_EQUIP_INFO_CHG);
            local info = {cardInfoChgType = CardInfoChgType.Equip,
                          cardId = send_data.CardId
            }
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_CARD_INFO_CHG,info)
        end
    end)
end

function this.SendIntensRequest(self,data)
    local player = Game.Scene.Player;
    self.intensifying = true

    coroutine.start(function()
        local g2cEquipLevelUp = coroutine.yieldstart(Game.Scene.Session.CoCall, nil,  Game.Scene.Session,
                OuterOpcode.Name2Code.ETModel_C2M_EquipLevelUp, data);

        if g2cEquipLevelUp.Error == ErrorCode.ERR_Success then 
            local equip = player:GetComponent("EquipComponent").Equips[data.EquipId];
            local count = math.max(0, data.Level - equip.Level)
            equip.Level = data.Level;
            equip:GetComponent("EquipAttrComponent"):LevelUp(data.Level);
            player.GoldCoin = player.GoldCoin - data.ExpendGoldCoin;
            for k,v in pairs(data.ExpendMaterialList) do
                UIUtil.RemoveItem(v.MaterialId,v.Amount);
            end
            
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_EQUIP_INFO_CHG);
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_PLAYER_INFO_CHG);
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_CARD_INFO_CHG)
            self.intensifying = false
        end
    end)
end

function this.SendExRecastRequest(self,data,func)  --专属装备升星

    local player = Game.Scene.Player;

    coroutine.start(function()
        local g2cExEquipRecast = coroutine.yieldstart(Game.Scene.Session.CoCall, nil,  Game.Scene.Session,
                OuterOpcode.Name2Code.ETModel_C2M_ExEquipRecast, data);

        if g2cExEquipRecast.Error == ErrorCode.ERR_Success then
            
            local equipComponent = player:GetComponent("EquipComponent");
            local equip = equipComponent.Equips[data.MainRecastEquipId];
            equip.Star = data.Star;
            equip:GetComponent("EquipAttrComponent"):StarUp(data.Star);
            for k,v in pairs(data.RecastEquipList) do
                equipComponent:Remove(v);
            end
            player.GoldCoin = player.GoldCoin - data.ExpendGoldCoin;
            func(equip.Id)
            if data.ExpendMaterialList ~= nil then
                for k, v in pairs(data.ExpendMaterialList) do
                    UIUtil.RemoveItem(v.MaterialId,v.Amount);
                end
            end
            
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_EQUIP_INFO_CHG);
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_PLAYER_INFO_CHG);
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_ITEM_INFO_CHG);
            local holder = UIPublic.GetEquipHolder(equip)
            if holder ~= nil then
                local info = {
                    cardId = holder.Id,
                    cardInfoChgType = CardInfoChgType.Equip}
                DataManager:GetInstance():Broadcast(DataMessageNames.ON_CARD_INFO_CHG,info)
            end
            --DataManager:GetInstance():Broadcast(DataMessageNames.ON_CARD_INFO_CHG);
        end
    end)
end

function this.SendRecastRequest(self,data,func)  --普通装备重铸
    local player = Game.Scene.Player;

    coroutine.start(function()
        local g2cEquipRecast = coroutine.yieldstart(Game.Scene.Session.CoCall, nil,  Game.Scene.Session,
                OuterOpcode.Name2Code.ETModel_C2M_EquipRecast, data);

        if g2cEquipRecast.Error == ErrorCode.ERR_Success then
            local equipInfo = {};
            equipInfo.EquipId = g2cEquipRecast.NewEquipId;
            equipInfo.TemplateId = data.NewEquipTemplateId;
            equipInfo.Level = 0;
            equipInfo.Star = data.Star;
            equipInfo.Lock = 0;
            equipInfo.Exp = 0;
            equipInfo.BaseAttr = g2cEquipRecast.BaseAttr;
            local equip = Game.Registry:NewObject("Equip",equipInfo);
            equip:AddComponent("EquipAttrComponent");
            local equipComponent = player:GetComponent("EquipComponent");
            equipComponent:Add(equip);
            for k,v in pairs(data.RecastEquipList) do
                equipComponent:Remove(v);
            end
            player.GoldCoin = player.GoldCoin - data.ExpendGoldCoin;
            func(equip.Id)
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_EQUIP_INFO_CHG);
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_PLAYER_INFO_CHG);
        else
            UIUtil.ToolTipFourth(LangUtil.GetServerError(g2cEquipRecast.Error))
        end
    end)
    
end

function this.SendResolveRequest(self,data)
    local player = Game.Scene.Player;

    coroutine.start(function()
        local g2cEquipDecompose = coroutine.yieldstart(Game.Scene.Session.CoCall, nil,  Game.Scene.Session,
                OuterOpcode.Name2Code.ETModel_C2M_EquipDecompose, data);

        if g2cEquipDecompose.Error == ErrorCode.ERR_Success then
            
            player.GoldCoin = player.GoldCoin + data.AcquireGoldCoin;
            player.StarSand = player.StarSand + data.AcquireStarSand;
            local equipComponent = player:GetComponent("EquipComponent");
            for k,v in pairs(data.EquipId) do
                equipComponent:Remove(v);
            end
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_EQUIP_INFO_CHG);
            DataManager:GetInstance():Broadcast(DataMessageNames.ON_PLAYER_INFO_CHG);
            
            local infos = {}
            if data.AcquireGoldCoin > 0 then
                table.insert(infos,{rewardType = RewardType.Gold,TemplateId = 1, num = data.AcquireGoldCoin})
            end
            if data.AcquireStarSand > 0 then
                table.insert(infos, {rewardType = RewardType.StarSand,TemplateId = 4, num = data.AcquireStarSand})
            end
            local info = {rewards = infos,title = LangUtil.GetSysLang(2024)}
            UIManager:GetInstance():OpenWindow(UIWindowNames.UIReward,info)
        end
    end)
end

return this;