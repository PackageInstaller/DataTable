---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/17 10:02
---

local UIUseItemCtrl = BaseClass("UIUseItemCtrl",UIBaseCtrl)
local this = UIUseItemCtrl

function this.CloseSelf()
    UIManager:GetInstance():CloseWindow(UIWindowNames.UIUseItem)
end

function this.SendBuyRequest(self, id, num, kind)
    local reqTable = {
        shop_id = kind,
        goods = {
            {
                goods_id = id,
                count = num
            }
        }
    }

    local func = function()
        coroutine.start(function()
            ---@type protocol.BuyGoodsResp
            local info = coroutine.yieldstart(Game.Scene.Session.CoCall,nil,Game.Scene.Session,
                PROTOCOL.BuyGoodsReq, reqTable)
    
                if info ~= nil then
                    if table.any(info.reward_result, function(v) return v.type == RewardType.RewardTypeCharacter end) then
                        local rewardResult = {}
                        for key, value in pairs(info.reward_result) do
                            if value.type == RewardType.RewardTypeCharacter then
                                table.insert(rewardResult, value)
                            end
                        end
                        UIPublic.OpenRewardUI(rewardResult)
                    else
                        UIPublic.OpenRewardUI(info.reward_result)
                    end
                end
            end)
    end

    local shopInfo = Z_Store[id]
    local allCost = shopInfo.TotalPrice * num
    if shopInfo.PriceType == tonumber(Z_Misc["FREE_DIAMOND_ID"].Value[1]) 
    and UIPublic.GetItemAmount(Z_Misc["FREE_DIAMOND_ID"].Value[1]) < allCost then
        ---@type ToolTipFirstData
        local tipData = {}
        tipData.message = string.gsub(LangUtil.GetSysLang(2122), "XX", allCost - UIPublic.GetItemAmount(Z_Misc["FREE_DIAMOND_ID"].Value[1]))
        tipData.callBack = function()
            func()
        end

        UIUtil.ToolTipFirstStarLight(tipData)
    else
        func()
    end

    -- coroutine.start(function()
    --     ---@type protocol.BuyGoodsResp
    --     local info = coroutine.yieldstart(Game.Scene.Session.CoCall,nil,Game.Scene.Session,
    --         PROTOCOL.BuyGoodsReq, reqTable)

    --         if info ~= nil then
    --             if table.any(info.reward_result, function(v) return v.type == RewardType.RewardTypeCharacter end) then
    --                 local rewardResult = {}
    --                 for key, value in pairs(info.reward_result) do
    --                     if value.type == RewardType.RewardTypeCharacter then
    --                         table.insert(rewardResult, value)
    --                     end
    --                 end
    --                 UIPublic.OpenRewardUI(rewardResult)
    --             else
    --                 UIPublic.OpenRewardUI(info.reward_result)
    --             end
    --         end
    --     end)
end

function this.SendBuyLevelsweepRequest(self, levelType, levelId, times)
    local reqTable = {
        level_type = levelType,
        level_id = levelId,
        times = times
    }
    coroutine.start(function()
        ---@type protocol.BuyGoodsResp
        local info = coroutine.yieldstart(Game.Scene.Session.CoCall,nil,Game.Scene.Session,
            PROTOCOL.LevelSweepReq, reqTable)

            if info ~= nil and info.reward_result ~= nil then
                if table.any(info.reward_result, function(v) return v.type == RewardType.RewardTypeCharacter end) then
                    local rewardResult = {}
                    for key, value in pairs(info.reward_result) do
                        if value.type == RewardType.RewardTypeCharacter then
                            table.insert(rewardResult, value)
                        end
                        
                    end
                    UIPublic.OpenRewardUI(rewardResult)
                else
                    UIPublic.OpenRewardUI(info.reward_result)
                    local count = 0
                    for index, value in ipairs(info.reward_result) do
                        if value.type == RewardType.RewardTypeExp then
                            count = count + value.count
                            
                        end
                    end
                    print("获得经验:" .. count .. "点")
                end
                --DataManager:GetInstance():Broadcast(DataMessageNames.ON_ITEM_INFO_CHG)
            end
        end)
end

function this.SendUseItem(self, itemId, count)
    Game.Scene.Player:GetComponent("ItemComponent"):SendUseRequest(itemId, count)
end


return this