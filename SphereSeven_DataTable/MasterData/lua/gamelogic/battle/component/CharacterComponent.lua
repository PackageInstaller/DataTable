---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by daiyi.
---
--- 角色的非数值状态
--- 角色数值状态的初始化
---
--- DateTime: 2019/4/17 17:12
local CharacterComponent = BaseClass("CharacterComponent", Component)
local base = Component

local function Awake(self)
    base.Awake(self)
    
    self.Energy = 0
    
    self.IsDead = false -- 已经死亡
    self.OnceDead = false -- 死过
    self.IsDeading = false -- 要死没死的状态
    --self.IsDead = not self.__entity.IsPlayer -- 测试用
    
    -- 初始化免疫状态
    self:InitImmuneBuff()
    -- 特殊效果
    self:InitSpecialEffect()
    
    self.IsPryAddEnergy = 0 ---是否闪避时也能增长MP
    self.IsDebuffAddHitPct=0 ---
    self.IgnoreDef = 0.5 ---破甲时无视的防御力百分比
    
    self.OnlyHurtByGeneraAtk = 0 --只能受到来自普通攻击的伤害伤害
    self.OnlyHurtBySkill = 0 ---只能受到来自技能的

    self.AtkBuff={} ---下次攻击带buff效果
    
    local cnc = self.__entity.BattleCharacter:GetComponent("NumericComponent")
    local unc = self.__entity:GetComponent("NumericComponent")
    --基础属性
    --table.walk(cnc.NumericDic,function (k,v)
    --    unc:Set(k, v)
    --end)
    table.walk(cnc.NumericDic,function (k,v)
        unc:Set(k, v:Get())
    end)
    -- unc:Set(NumericType.MaxHp, 10000000)
    -- unc:Set(NumericType.Hp, 10000000)
    --隐藏属性
    unc:Set(NumericType.HitBase,0)
    unc:Set(NumericType.PryBase,0)
    unc:Set(NumericType.StmBase,0)
    -- unc:Set(NumericType.CriBase,15)
    unc:Set(NumericType.BlkBase,0)
    unc:Set(NumericType.CacBase,0)
    -- unc:Set(NumericType.AccBase,0)
    --战斗加成属性
    local factor = 100

    unc:Set(NumericType.PhysicDamageBase,factor)
    unc:Set(NumericType.PhysicHurtBase,factor)
    unc:Set(NumericType.MagicDamageBase,factor)
    unc:Set(NumericType.MagicHurtBase,factor)

    unc:Set(NumericType.FinalDamageBase,factor)
    unc:Set(NumericType.FinalHurtBase,factor)
    unc:Set(NumericType.GAtkFinalDamageBase,factor)
    unc:Set(NumericType.GAtkFinalHurtBase,factor)
    unc:Set(NumericType.SkillFinalDamageBase,factor)
    unc:Set(NumericType.SkillFinalHurtBase,factor)
    unc:Set(NumericType.CacFinalDamageBase,factor)
    unc:Set(NumericType.CacFinalHurtBase,factor)
    unc:Set(NumericType.CriFinalDamageBase,factor)
    unc:Set(NumericType.CriFinalHurtBase,factor)
    
    unc:Set(NumericType.HealEffectBase,factor)
    unc:Set(NumericType.HealRecEffectBase,factor)

    unc:Set(NumericType.CriHurtBase,factor)
    
    unc:Set(NumericType.DeBuffTurnIncreaseBase,0)
    unc:Set(NumericType.DeBuffTurnReduceBase,0)
    unc:Set(NumericType.BuffTurnIncreaseBase,0)
    
    unc:Set(NumericType.CooldownTurnBase,0)

    unc:Set(NumericType.ReflectDamageBase,0)

    -- unc:Set(NumericType.CriDamageBase,150)
    --unc:Inc(NumericType.CriDamageAdd,50)

    unc:Set(NumericType.AntiCriBase,0)
    
    self.nc = unc
end

-- 恢复效果的基础血量
local function GetHealHpBase(self)
    return self.nc:Get(NumericType.MaxHp)
end

local function IncAllAttr(self,val)
    self.nc:Inc(NumericType.MaxHpPct,val)
    self.nc:Inc(NumericType.AtkPct,val)
    self.nc:Inc(NumericType.DefPct,val)
    self.nc:Inc(NumericType.SpeedPct,val)
    
    self.nc:Inc(NumericType.HitPct,val)
    self.nc:Inc(NumericType.PryPct,val)
    self.nc:Inc(NumericType.BlkPct,val)
    self.nc:Inc(NumericType.StmPct,val)
    self.nc:Inc(NumericType.CriPct,val)
    self.nc:Inc(NumericType.CacPct,val)
    self.nc:Inc(NumericType.AccPct,val)
end

local function DecAllAttr(self,val)
    self.nc:Dec(NumericType.MaxHpPct,val)
    self.nc:Dec(NumericType.AtkPct,val)
    self.nc:Dec(NumericType.DefPct,val)
    self.nc:Dec(NumericType.SpeedPct,val)

    self.nc:Dec(NumericType.HitPct,val)
    self.nc:Dec(NumericType.PryPct,val)
    self.nc:Dec(NumericType.BlkPct,val)
    self.nc:Dec(NumericType.StmPct,val)
    self.nc:Dec(NumericType.CriPct,val)
    self.nc:Dec(NumericType.CacPct,val)
    self.nc:Dec(NumericType.AccPct,val)
end

local function IsNotDeadAndNotHide(self)
    return not self.IsDead and self.IsHide == 0
end

local function IsNotDead(self)
    return not self.IsDead
end

local function CanBeEnemyTargetCandidate(self, IsGroupUnitsAllHide)
    if not self.IsDead then
        if IsGroupUnitsAllHide then
            return true
        else
            return self.IsHide == 0
        end
    end
    return false
end

local function Dispose(self)
    base.Dispose(self)
end

local function InitImmuneBuff(self)
    self.ImmuneDebuffTaunted = 0            -- 免疫嘲讽
    self.ImmuneDebuffSilence = 0            -- 免疫沉默
    self.ImmuneDebuffPassiveDisable = 0     -- 免疫遗忘
    self.ImmuneDebuffStunning = 0           -- 免疫眩晕
    self.ImmuneDebuffSleeping = 0           -- 免疫睡眠
    self.ImmuneDebuffPoison = 0             -- 免疫中毒
    self.ImmuneDebuffVulnerable = 0         -- 免疫标靶
    self.ImmuneDebuffFire = 0               -- 免疫灼烧
    self.ImmuneDebuffFreeze = 0             -- 免疫冻结
    self.ImmuneDebuffPetrification = 0      -- 免疫石化
    self.ImmuneDebuffParalysis = 0          -- 免疫麻痹
    self.ImmuneDebuffRestraint = 0          -- 免疫拘束
    -- self.ImmuneDeBuffFiring = 0 ---是否免疫灼烧
    -- self.ImmuneDeBuffFreeze = 0 ---是否免疫冻结
    -- self.ImmuneDeBuffRocking = 0 ---是否免疫石化
    -- self.ImmuneDeBuffSoften = 0 ---是否免疫麻痹
    -- self.ImmuneDeBuffRestrict = 0 ---是否免疫拘束
    -- self.ImmuneDeBuffStunning = 0 ---是否免疫晕眩
    -- self.ImmuneDeBuffSilence = 0 ---是否免疫沉默
    -- self.ImmuneDeBuffPoison = 0 ---是否免疫剧毒
    -- self.ImmuneDeBuffErosion = 0 ---是否免疫侵蚀
    -- self.ImmuneDeBuffChaos = 0 ---是否免疫混乱
    -- self.ImmuneDeBuffFear = 0 ---是否免疫恐惧
    -- self.ImmuneDeBuffDepression = 0 ---是否免疫消沉
    -- self.ImmuneDeBuffHamstring = 0 ---是否免疫断筋
    -- self.ImmuneDeBuffDisablement = 0 ---是否免疫残废
    -- self.ImmuneDeBuffBleed = 0 ---是否免疫流血
    -- self.ImmuneDeBuffInjury = 0 ---是否免疫重伤
    -- self.ImmuneDeBuffWeakness = 0 ---是否免疫虚弱
    -- self.ImmuneDeBuffTrauma = 0 ---是否免疫内伤
    -- self.ImmuneDeBuffInability = 0 ---是否免疫脱力
    -- self.ImmuneDeBuffDespair = 0 ---是否免疫绝望
    -- self.ImmuneDeBuffWithered = 0 ---是否免疫凋零

    self.ImmuneIgnoreDef = 0 ---破甲效果免疫
    self.ImmuneDemoralize = 0 ---挫志效果免疫
    self.ImmuneSuckHp = 0 ---吸血效果免疫
    self.ImmuneDispel = 0 ---驱散效果免疫
    self.ImmunePurify = 0 ---净除效果免
    self.ImmuneSecKill = 0    ---即死效果免疫
end

-- 新增免疫debuff
local function IncImmuneDeBuff(self, buffType)
    if buffType == BattleBuffType.Taunted then
        self.ImmuneDebuffTaunted = self.ImmuneDebuffTaunted + 1
    elseif buffType == BattleBuffType.Silence then
        self.ImmuneDebuffSilence = self.ImmuneDebuffSilence + 1
    elseif buffType == BattleBuffType.Disable then
        self.ImmuneDebuffPassiveDisable = self.ImmuneDebuffPassiveDisable + 1
    elseif buffType == BattleBuffType.tunning then
        self.ImmuneDebuffStunning = self.ImmuneDebuffStunning + 1
    elseif buffType == BattleBuffType.leeping then
        self.ImmuneDebuffSleeping = self.ImmuneDebuffSleeping + 1
    elseif buffType == BattleBuffType.fPoison then
        self.ImmuneDebuffPoison = self.ImmuneDebuffPoison + 1
    elseif buffType == BattleBuffType.nerable then
        self.ImmuneDebuffVulnerable = self.ImmuneDebuffVulnerable + 1
    elseif buffType == BattleBuffType.uffFire then
        self.ImmuneDebuffFire = self.ImmuneDebuffFire + 1
    elseif buffType == BattleBuffType.fFreeze then
        self.ImmuneDebuffFreeze = self.ImmuneDebuffFreeze + 1
    elseif buffType == BattleBuffType.ication then
        self.ImmuneDebuffPetrification = self.ImmuneDebuffPetrification + 1
    elseif buffType == BattleBuffType.ralysis then
        self.ImmuneDebuffParalysis = self.ImmuneDebuffParalysis + 1
    elseif buffType == BattleBuffType.straint then
        self.ImmuneDebuffRestraint = self.ImmuneDebuffRestraint + 1
    end
end

-- 减少免疫debuff
local function DecImmuneDeBuff(self, buffType)
    if buffType == BattleBuffType.Taunted then
        self.ImmuneDebuffTaunted = self.ImmuneDebuffTaunted - 1
    elseif buffType == BattleBuffType.Silence then
        self.ImmuneDebuffSilence = self.ImmuneDebuffSilence - 1
    elseif buffType == BattleBuffType.Disable then
        self.ImmuneDebuffPassiveDisable = self.ImmuneDebuffPassiveDisable - 1
    elseif buffType == BattleBuffType.tunning then
        self.ImmuneDebuffStunning = self.ImmuneDebuffStunning - 1
    elseif buffType == BattleBuffType.leeping then
        self.ImmuneDebuffSleeping = self.ImmuneDebuffSleeping - 1
    elseif buffType == BattleBuffType.fPoison then
        self.ImmuneDebuffPoison = self.ImmuneDebuffPoison - 1
    elseif buffType == BattleBuffType.nerable then
        self.ImmuneDebuffVulnerable = self.ImmuneDebuffVulnerable - 1
    elseif buffType == BattleBuffType.uffFire then
        self.ImmuneDebuffFire = self.ImmuneDebuffFire - 1
    elseif buffType == BattleBuffType.fFreeze then
        self.ImmuneDebuffFreeze = self.ImmuneDebuffFreeze - 1
    elseif buffType == BattleBuffType.ication then
        self.ImmuneDebuffPetrification = self.ImmuneDebuffPetrification - 1
    elseif buffType == BattleBuffType.ralysis then
        self.ImmuneDebuffParalysis = self.ImmuneDebuffParalysis - 1
    elseif buffType == BattleBuffType.straint then
        self.ImmuneDebuffRestraint = self.ImmuneDebuffRestraint - 1
    end
end

local function IsImmuneDeBuff(self, buffId)
    if (self.ImmuneAllDeBuff > 0 or self.ImmuneAllDeBuff2 > 0) and Z_Buff[buffId].IsDeBuff == 1 then
        return true
    end

    if buffId == BattleBuffType.Taunted then
        return self.ImmuneDebuffTaunted > 0
    elseif buffId == BattleBuffType.Silence then
        return self.ImmuneDebuffSilence > 0
    elseif buffId == BattleBuffType.Disable then
        return self.ImmuneDebuffPassiveDisable > 0
    elseif buffId == BattleBuffType.tunning then
        return self.ImmuneDebuffStunning > 0
    elseif buffId == BattleBuffType.leeping then
        return self.ImmuneDebuffSleeping > 0
    elseif buffId == BattleBuffType.fPoison then
        return self.ImmuneDebuffPoison > 0
    elseif buffId == BattleBuffType.nerable then
        return self.ImmuneDebuffVulnerable > 0
    elseif buffId == BattleBuffType.uffFire then
        return self.ImmuneDebuffFire > 0
    elseif buffId == BattleBuffType.fFreeze then
        return self.ImmuneDebuffFreeze > 0
    elseif buffId == BattleBuffType.ication then
        return self.ImmuneDebuffPetrification > 0
    elseif buffId == BattleBuffType.ralysis then
        return self.ImmuneDebuffParalysis > 0
    elseif buffId == BattleBuffType.straint then
        return self.ImmuneDebuffRestraint > 0
    end
end

local function InitSpecialEffect(self)
    --下面的免疫，由各种防护罩buff控制，可以被贯通破掉
    self.ImmunePhysicDamage = 0 --是否免疫物理伤害
    self.ImmuneMagicDamage = 0 --是否免疫魔法伤害
    self.ImmuneWaterDamage = 0 --是否免疫水属性伤害
    self.ImmuneFireDamage = 0 --是否免疫火属性伤害
    self.ImmuneRayDamage = 0 --是否免疫雷属性伤害
    self.ImmuneWindDamage = 0 --是否免疫风属性伤害
    self.ImmuneEarthDamage = 0 --是否免疫地属性伤害
    self.ImmuneHolyDamage = 0 --是否免疫光属性伤害
    self.ImmuneDarkDamage = 0 --是否免疫暗属性伤害
    self.ImmuneHeavenDamage = 0 --是否免疫天属性伤害
    self.ImmuneAllDeBuff = 0 --免疫所有负面效果，特殊效果（即死等），由斗志、无敌buff控制 
    self.ImmuneAllDeBuff2 = 0 --二级无视免疫（boss）
    self.ImmuneAllDamage = 0 --免疫全部伤害，由霸体、无敌buff控制，无法被贯通破掉
    self.IsHide = 0 --隐蔽
    
    ---最高优先级控制
    self.UnableAct = 0 ---是否无法行动
    self.UnablePry = 0 ---是否无法回避
    self.UnableCri = 0 ---是否无法暴击
    self.UnableBeCri = 0 ---是否无法被暴击
    self.UnableCac = 0 ---是否无法反击
    self.UnableGeneraAtk = 0 ---是否无法普攻
    self.UnableSkill = 0 ---是否无法使用技能
    self.UnableBuff = 0 ---是否无法受到所有增益效果的影响
    self.UnableRecHeal = 0 ---是否无法接受治疗
    self.UnableIncNP = 0 ---是否无法增加MP

    --if self.__entity.IsPlayer then
    --    self.UnableAct = 1000
    --end
    
    ---再次优先级控制，高于数值的控制
    self.MustHit = 0 --是否必定命中
    self.MustPry = 0 --是否必定闪避
    self.MustCri = 0 --是否必定暴击
    self.IsMustBeCri = 0 --是否必定被暴击
    self.IsMustCac = 0 --是否必定反击

    self.IsFrenzy = 0 --是否狂怒
    self.IsFinalHit = 0 --是否绝杀

    self.IsCacMustCri=0 --反击成功会心

    self.IsSuoLife = false

    self.IsEnergyKeepFull = 0 --是否能量保持充满

    self.IsCacUnlimited = 0 --是否每回合反击无限
    self.CacLimitMax = 1 -- 每回合反击次数
    self.CacLimitCur = self.CacLimitMax -- 当前回合反击次数
    
    self.ImmuneReflectDamage = 0 -- 

    self.Immortal = 0
    self.UnableIncActValue = 0
    self.Paralysis = 0
    self.ImmuneSkillDamage = 0 -- 技能伤害无效

    self.DamageShare = {} -- 伤害共享
end

local function IncSpecialEffect(self, type)
    if type == SpecialEffectType.ImmunePhysicDamage then
        self.ImmunePhysicDamage = self.ImmunePhysicDamage + 1
    elseif type == SpecialEffectType.ImmuneMagicDamage then
        self.ImmuneMagicDamage = self.ImmuneMagicDamage + 1
    elseif type == SpecialEffectType.ImmuneWaterDamage then
        self.ImmuneWaterDamage = self.ImmuneWaterDamage + 1
    elseif type == SpecialEffectType.ImmuneFireDamage then
        self.ImmuneFireDamage = self.ImmuneFireDamage + 1
    elseif type == SpecialEffectType.ImmuneRayDamage then
        self.ImmuneRayDamage = self.ImmuneRayDamage + 1
    elseif type == SpecialEffectType.ImmuneWindDamage then
        self.ImmuneWindDamage = self.ImmuneWindDamage + 1
    elseif type == SpecialEffectType.ImmuneEarthDamage then
        self.ImmuneEarthDamage = self.ImmuneEarthDamage + 1
    elseif type == SpecialEffectType.ImmuneHolyDamage then
        self.ImmuneHolyDamage = self.ImmuneHolyDamage + 1
    elseif type == SpecialEffectType.ImmuneDarkDamage then
        self.ImmuneDarkDamage = self.ImmuneDarkDamage + 1
    elseif type == SpecialEffectType.ImmuneHeavenDamage then
        self.ImmuneHeavenDamage = self.ImmuneHeavenDamage + 1
    elseif type == SpecialEffectType.ImmuneAllDeBuff then
        self.ImmuneAllDeBuff = self.ImmuneAllDeBuff + 1
    elseif type == SpecialEffectType.ImmuneAllDeBuff2 then
        self.ImmuneAllDeBuff2 = self.ImmuneAllDeBuff2 + 1
    elseif type == SpecialEffectType.ImmuneAllDamage then
        self.ImmuneAllDamage = self.ImmuneAllDamage + 1
    elseif type == SpecialEffectType.ImmuneAllDamage then
        self.ImmuneAllDamage = self.ImmuneAllDamage + 1
    elseif type == SpecialEffectType.Hide then
        self.IsHide = self.IsHide + 1
        if (self.IsHide == 1) and (not self.IsDead) then
            self.__entity:GetComponent("SsUnitBattleComponent"):OnHideChange(true)
        end
    elseif type == SpecialEffectType.UnableAct then
        self.UnableAct = self.UnableAct + 1
    elseif type == SpecialEffectType.UnablePry then
        self.UnablePry = self.UnablePry + 1
    elseif type == SpecialEffectType.UnableCri then
        self.UnableCri = self.UnableCri + 1
    elseif type == SpecialEffectType.UnableBeCri then
        self.UnableBeCri = self.UnableBeCri + 1
    elseif type == SpecialEffectType.UnableCac then
        self.UnableCac = self.UnableCac + 1
    elseif type == SpecialEffectType.UnableGeneraAtk then
        self.UnableGeneraAtk = self.UnableGeneraAtk + 1
    elseif type == SpecialEffectType.UnableSkill then
        self.UnableSkill = self.UnableSkill + 1
    elseif type == SpecialEffectType.UnableBuff then
        self.UnableBuff = self.UnableBuff + 1
    elseif type == SpecialEffectType.UnableRecHeal then
        self.UnableRecHeal = self.UnableRecHeal + 1
    elseif type == SpecialEffectType.UnableIncNP then
        self.UnableIncNP = self.UnableIncNP + 1
    elseif type == SpecialEffectType.MustHit then
        self.MustHit = self.MustHit + 1
    elseif type == SpecialEffectType.MustPry then
        self.MustPry = self.MustPry + 1
    elseif type == SpecialEffectType.MustCri then
        self.MustCri = self.MustCri + 1
    elseif type == SpecialEffectType.MustBeCri then
        self.IsMustBeCri = self.IsMustBeCri + 1
    elseif type == SpecialEffectType.MustCac then
        self.IsMustCac = self.IsMustCac + 1
    elseif type == SpecialEffectType.Frenzy then
        self.IsFrenzy = self.IsFrenzy + 1
    elseif type == SpecialEffectType.FinalHit then
        self.IsFinalHit = self.IsFinalHit + 1
    elseif type == SpecialEffectType.SuoLife then
        self.IsSuoLife = true
    elseif type == SpecialEffectType.CacMustCri then
        self.IsCacMustCri = self.IsCacMustCri + 1
    elseif type == SpecialEffectType.EnergyKeepFull then
        self.IsEnergyKeepFull = self.IsEnergyKeepFull + 1
    elseif type == SpecialEffectType.CacUnlimited then
        self.IsCacUnlimited = self.IsCacUnlimited + 1
    elseif type == SpecialEffectType.CacLimitMax then
        self.CacLimitMax = self.CacLimitMax + 1
    elseif type == SpecialEffectType.ImmuneReflectDamage then
        self.ImmuneReflectDamage = self.ImmuneReflectDamage + 1
    end


    if type == SpecialEffectType.Immortal then
        self.Immortal = self.Immortal + 1
    elseif type == SpecialEffectType.UnableIncActValue then
        self.UnableIncActValue = self.UnableIncActValue + 1
    elseif type == SpecialEffectType.Paralysis then
        self.Paralysis = self.Paralysis + 1
    elseif type == SpecialEffectType.ImmuneSkillDamage then
        self.ImmuneSkillDamage = self.ImmuneSkillDamage + 1
    end
end

local function DecSpecialEffect(self, type)
    if type == SpecialEffectType.ImmunePhysicDamage then
        self.ImmunePhysicDamage = self.ImmunePhysicDamage - 1
    elseif type == SpecialEffectType.ImmuneMagicDamage then
        self.ImmuneMagicDamage = self.ImmuneMagicDamage - 1
    elseif type == SpecialEffectType.ImmuneWaterDamage then
        self.ImmuneWaterDamage = self.ImmuneWaterDamage - 1
    elseif type == SpecialEffectType.ImmuneFireDamage then
        self.ImmuneFireDamage = self.ImmuneFireDamage - 1
    elseif type == SpecialEffectType.ImmuneRayDamage then
        self.ImmuneRayDamage = self.ImmuneRayDamage - 1
    elseif type == SpecialEffectType.ImmuneWindDamage then
        self.ImmuneWindDamage = self.ImmuneWindDamage - 1
    elseif type == SpecialEffectType.ImmuneEarthDamage then
        self.ImmuneEarthDamage = self.ImmuneEarthDamage - 1
    elseif type == SpecialEffectType.ImmuneHolyDamage then
        self.ImmuneHolyDamage = self.ImmuneHolyDamage - 1
    elseif type == SpecialEffectType.ImmuneDarkDamage then
        self.ImmuneDarkDamage = self.ImmuneDarkDamage - 1
    elseif type == SpecialEffectType.ImmuneHeavenDamage then
        self.ImmuneHeavenDamage = self.ImmuneHeavenDamage - 1
    elseif type == SpecialEffectType.ImmuneAllDeBuff then
        self.ImmuneAllDeBuff = self.ImmuneAllDeBuff - 1
    elseif type == SpecialEffectType.ImmuneAllDeBuff2 then
        self.ImmuneAllDeBuff2 = self.ImmuneAllDeBuff2 - 1
    elseif type == SpecialEffectType.ImmuneAllDamage then
        self.ImmuneAllDamage = self.ImmuneAllDamage - 1
    elseif type == SpecialEffectType.ImmuneAllDamage then
        self.ImmuneAllDamage = self.ImmuneAllDamage - 1
    elseif type == SpecialEffectType.Hide then
        self.IsHide = self.IsHide - 1
        if (self.IsHide == 0) and (not self.IsDead) then
            self.__entity:GetComponent("SsUnitBattleComponent"):OnHideChange(false)
        end
    elseif type == SpecialEffectType.UnableAct then
        self.UnableAct = self.UnableAct - 1
    elseif type == SpecialEffectType.UnablePry then
        self.UnablePry = self.UnablePry - 1
    elseif type == SpecialEffectType.UnableCri then
        self.UnableCri = self.UnableCri - 1
    elseif type == SpecialEffectType.UnableBeCri then
        self.UnableBeCri = self.UnableBeCri - 1
    elseif type == SpecialEffectType.UnableCac then
        self.UnableCac = self.UnableCac - 1
    elseif type == SpecialEffectType.UnableGeneraAtk then
        self.UnableGeneraAtk = self.UnableGeneraAtk - 1
    elseif type == SpecialEffectType.UnableSkill then
        self.UnableSkill = self.UnableSkill - 1
    elseif type == SpecialEffectType.UnableBuff then
        self.UnableBuff = self.UnableBuff - 1
    elseif type == SpecialEffectType.UnableRecHeal then
        self.UnableRecHeal = self.UnableRecHeal - 1
    elseif type == SpecialEffectType.UnableIncNP then
        self.UnableIncNP = self.UnableIncNP - 1
    elseif type == SpecialEffectType.MustHit then
        self.MustHit = self.MustHit - 1
    elseif type == SpecialEffectType.MustPry then
        self.MustPry = self.MustPry - 1
    elseif type == SpecialEffectType.MustCri then
        self.MustCri = self.MustCri - 1
    elseif type == SpecialEffectType.MustBeCri then
        self.IsMustBeCri = self.IsMustBeCri - 1
    elseif type == SpecialEffectType.MustCac then
        self.IsMustCac = self.IsMustCac - 1
    elseif type == SpecialEffectType.Frenzy then
        self.IsFrenzy = self.IsFrenzy - 1
    elseif type == SpecialEffectType.FinalHit then
        self.IsFinalHit = self.IsFinalHit - 1
    elseif type == SpecialEffectType.SuoLife then
        self.IsSuoLife = false
    elseif type == SpecialEffectType.CacMustCri then
        self.IsCacMustCri = self.IsCacMustCri - 1
    elseif type == SpecialEffectType.EnergyKeepFull then
        self.IsEnergyKeepFull = self.IsEnergyKeepFull - 1
    elseif type == SpecialEffectType.CacUnlimited then
        self.IsCacUnlimited = self.IsCacUnlimited - 1
    elseif type == SpecialEffectType.CacLimitMax then
        self.CacLimitMax = self.CacLimitMax - 1
    elseif type == SpecialEffectType.ImmuneReflectDamage then
        self.ImmuneReflectDamage = self.ImmuneReflectDamage - 1
    end


    if type == SpecialEffectType.Immortal then
        self.Immortal = self.Immortal - 1
    elseif type == SpecialEffectType.UnableIncActValue then
        self.UnableIncActValue = self.UnableIncActValue - 1
    elseif type == SpecialEffectType.Paralysis then
        self.Paralysis = self.Paralysis - 1
    elseif type == SpecialEffectType.ImmuneSkillDamage then
        self.ImmuneSkillDamage = self.ImmuneSkillDamage - 1
    end
end

-- local function IsImmuneDamage(self, attrDamageType, isActiveSkill, isIgnoreShield)
--     if attrDamageType == NumericType.PhysicDamage then
--         if isActiveSkill and self:IsImmuneSkillDamage() and not isIgnoreShield then
--             return LangUtil.GetSysLang(37), true
--         elseif self.ImmuneAllDamage > 0 or (self.ImmunePhysicDamage > 0 and not isIgnoreShield) then
--             return LangUtil.GetSysLang(37), true
--         end

--         return nil, false
--     elseif attrDamageType == NumericType.MagicDamage then
--         if isActiveSkill and self:IsImmuneSkillDamage() and not isIgnoreShield then
--             return LangUtil.GetSysLang(38), true
--         elseif self.ImmuneAllDamage > 0 or (self.ImmuneMagicDamage > 0 and not isIgnoreShield) then
--             return LangUtil.GetSysLang(38), true
--         end

--         return nil, false
--     end
-- end

local function IsImmuneDamage(self, attrDamageType, isActiveSkill, isIgnoreShield)
    if isActiveSkill and self:IsImmuneSkillDamage() and not isIgnoreShield then
        return true
    end
    if attrDamageType == BattleDamageType.Physical then
        if self.ImmuneAllDamage > 0 or (self.ImmunePhysicDamage > 0 and not isIgnoreShield) then
            return true
        end
    elseif attrDamageType == BattleDamageType.Magic then
        if self.ImmuneAllDamage > 0 or (self.ImmuneMagicDamage > 0 and not isIgnoreShield) then
            return true
        end
    end

    return false
end

local function IsImmuneAllDamage(self)
    return self.ImmuneAllDamage > 0
end

local function IsImmuneAllDeBuff(self)
    return self.ImmuneAllDeBuff > 0
end

local function IsImmuneSkillDamage(self)
    return self.ImmuneSkillDamage > 0
end

-- if BuffType == nil then
--     BuffType =
--     {
--         PhysicProtect = 2001, -- 物理防护罩
--         MagicProtect = 2002, -- 魔法防护罩
--         PhysicMagicProtect = 2003, -- 双重防护罩
--         ElementProtect = 2004, -- 元素防护罩
--         FinalProtect = 2005, -- 终极防护罩
--         SuperArmor = 2006, -- 霸体
--         FightingSpirit = 2007, -- 斗志
--         Invincible = 2008, -- 无敌
--         Hide = 2009, -- 隐蔽
--         MustPry = 2010, -- 直觉
--         Induction = 2011, -- 感应
--         IgnoreDef = 2012, -- 破甲
--         Through = 2013, -- 贯通
--         Devastate = 2014, -- 毁灭
--         SuckBlood = 2015, -- 吸血
--         Demoralize = 2016, -- 挫志
--         Dispel = 2017, -- 驱散
--         Purify = 2018, -- 净除
--         Storm = 2019, -- 强袭
--         Reflect = 2020, -- 反伤
--         Rage = 2021, -- 狂暴
--         Frenzy = 2022, -- 狂怒
--         Verve = 2023, -- 气魄
--         Sinhaeng = 2024, -- 神行
--         Firm = 2025, -- 坚定
--         Block = 2026, -- 格挡
--         Heal = 2027, -- 复苏
--         Strong = 2028, -- 强壮
--         SecKill = 2029, -- 即死
--         Strike = 2030, -- 突袭
--         Revenge = 2031, -- 复仇
--         Universe = 2032, -- 乾坤
--         Unparalleled = 2033, -- 无双
--         DivineBody = 2034, -- 神体
--         FinalHit = 2035, -- 绝杀
--         NoAppearance = 2036, -- 无相
--         HeartAndEye = 2037, -- 心眼
--         Immeasurable = 2038, --无量
--         Understanding = 2039, -- 会心
--         Locking = 2040, -- 锁定
--         Soul = 2041, -- 追魂
--         SuoLife = 2042, -- 索命

--         Fire = 1001, -- 灼烧
--         Freeze = 1002, -- 冻结
--         Rocking = 1003, -- 石化
--         Soften = 1004, -- 麻痹
--         Restrict = 1005, -- 拘束
--         Stunning = 1006, -- 眩晕
--         Silence = 1007, -- 沉默
--         Poison = 1008, -- 剧毒
--         Erosion = 1009, -- 侵蚀
--         Chaos = 1010, -- 混乱
--         Fear = 1011, -- 恐惧
--         Depression = 1012, -- 消沉
--         Hamstring = 1013, -- 断筋
--         Disablement = 1014, -- 残废
--         Blood = 1015, -- 流血
--         SeriousInjury = 1016, -- 重伤
--         Weakness = 1017, -- 虚弱
--         Trauma = 1018, -- 内伤
--         Inability = 1019, -- 脱力
--         Despair = 1020, -- 绝望
--         Withered = 1021, -- 凋零
--     }
-- end

if SpecialEffectType == nil then
    SpecialEffectType = 
    {
        ImmunePhysicDamage = 9001, --物理伤害
        ImmuneMagicDamage = 9002, --魔法伤害
        ImmuneWaterDamage = 9003, --水属性伤害
        ImmuneFireDamage = 9004, --火属性伤害
        ImmuneRayDamage = 9005, --雷属性伤害
        ImmuneWindDamage = 9006, --风属性伤害
        ImmuneEarthDamage = 9007, --地属性伤害
        ImmuneHolyDamage = 9008, --光属性伤害
        ImmuneDarkDamage = 9009, --暗属性伤害
        ImmuneHeavenDamage = 9010, --天属性伤害
        ImmuneAllDeBuff = 9011, --所有负面效果，特殊效果（即死等），由斗志、无敌buff控制
        ImmuneAllDamage = 9012, --全部伤害，由霸体、无敌buff控制，无法被贯通破掉
        Hide = 9013, -- 隐蔽

        UnableAct = 9014, -- 无法行动
        UnablePry = 9015, -- 无法闪避
        UnableCri = 9016, -- 无法暴击
        UnableBeCri = 9017, -- 无法被暴击
        UnableCac = 9018, -- 无法反击
        UnableGeneraAtk = 9019, -- 无法普攻
        UnableSkill = 9020, -- 无法使用技能
        UnableBuff = 9021, -- 无法施加buff
        UnableRecHeal = 9022, -- 无法抗疗
        UnableIncNP = 9023, -- 无法增加hp

        MustHit = 9024, -- 必定命中
        MustPry = 9025, -- 必定闪避
        MustCri = 9026, -- 必定暴击
        MustBeCri = 9027, -- 必定被暴击
        MustCac = 9028, -- 必定反击

        Frenzy = 9029, -- 狂怒
        FinalHit = 9030, -- 绝杀
        SuoLife = 9031, -- 索命
        CacMustCri = 9032, -- 反击会心
        EnergyKeepFull = 9033, -- 能量充满
        Block = 9034, -- 格挡
        CacUnlimited = 9035, -- 反击无限制
        CacLimitMax = 9036, -- 回合反击次数限制

        ImmuneReflectDamage = 9037, -- 免疫反伤
        ImmuneAllDeBuff2 = 9038, --

        Immortal = 10001, -- 不死
        UnableIncActValue = 10002, -- 增加行动值
        Paralysis = 10003, -- 麻痹
        ImmuneSkillDamage = 10004, -- 技能伤害无效
    }
end

local function AddDamageShare(self, sourceUnit, sharedPercent)
    local share = DamageShareData.New(sourceUnit, sharedPercent)
    self.DamageShare[share.Id] = share

    return share.Id
end

local function GetDamageShare(self)
    local maxOne = nil

    for _, share in pairs(self.DamageShare) do
        if share.SourceUnit:GetComponent("CharacterComponent").IsDead then
            goto continue
        end

        if maxOne == nil or maxOne.SharedPercent < share.SharedPercent then
            maxOne = share
        end

        ::continue::
    end

    return maxOne
end

local function RemoveDamageShare(self, id)
    self.DamageShare[id] = nil
end

CharacterComponent.Awake = Awake
CharacterComponent.IncAllAttr = IncAllAttr
CharacterComponent.DecAllAttr = DecAllAttr
CharacterComponent.IsNotDeadAndNotHide = IsNotDeadAndNotHide
CharacterComponent.IsNotDead = IsNotDead
CharacterComponent.Dispose = Dispose
CharacterComponent.InitImmuneBuff = InitImmuneBuff
CharacterComponent.IncImmuneDeBuff = IncImmuneDeBuff
CharacterComponent.DecImmuneDeBuff = DecImmuneDeBuff
CharacterComponent.InitSpecialEffect = InitSpecialEffect
CharacterComponent.IncSpecialEffect = IncSpecialEffect
CharacterComponent.DecSpecialEffect = DecSpecialEffect
CharacterComponent.IsImmuneDeBuff = IsImmuneDeBuff
CharacterComponent.IsImmuneDamage = IsImmuneDamage
CharacterComponent.IsImmuneAllDamage = IsImmuneAllDamage
CharacterComponent.IsImmuneAllDeBuff = IsImmuneAllDeBuff
CharacterComponent.IsImmuneSkillDamage = IsImmuneSkillDamage
CharacterComponent.GetHealHpBase = GetHealHpBase
CharacterComponent.CanBeEnemyTargetCandidate = CanBeEnemyTargetCandidate
CharacterComponent.AddDamageShare = AddDamageShare
CharacterComponent.GetDamageShare = GetDamageShare
CharacterComponent.RemoveDamageShare = RemoveDamageShare

return CharacterComponent