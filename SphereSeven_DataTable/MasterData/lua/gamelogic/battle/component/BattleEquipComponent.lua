---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by daiyi.
--- DateTime: 2019/4/12 21:47
---
local BattleEquipComponent = BaseClass("BattleEquipComponent", Component)
local base = Component

local AttrNameTypeTable = {
    Hp = NumericType.MaxHpAdd,
    Atk = NumericType.AtkAdd,
    Def = NumericType.DefAdd,
    MDef = NumericType.MagicDefAdd,
    Speed = NumericType.SpeedAdd,
    MaxHpPct = NumericType.MaxHpPct,
    AtkPct = NumericType.AtkPct,
    DefPct = NumericType.DefPct,
    MDefPct = NumericType.MagicDefPct,
    SpeedPct = NumericType.SpeedPct,
    Crit = NumericType.CriAdd,
    CritDamage = NumericType.CriDamageAdd,
    EAcc = NumericType.EAccAdd,
    ERist = NumericType.ERistAdd,
}

local function Awake(self)
    base.Awake(self)

    self.numeric_component = self.__entity:GetComponent("NumericComponent")
    
    local entity = self.__entity
    for _, equipment in ipairs(entity.Equipments) do
        local equipData = Z_EquipLevelUp[equipment.Id][equipment.Level]
        for name, attrType in pairs(AttrNameTypeTable) do
            local value = equipData[name]
            if value ~= nil and value > 0  then
                self.numeric_component:Inc(attrType, value)
            end
        end
    end
end

local function Dispose(self)
    base.Dispose(self)
end

BattleEquipComponent.Awake = Awake
BattleEquipComponent.Dispose = Dispose

return BattleEquipComponent