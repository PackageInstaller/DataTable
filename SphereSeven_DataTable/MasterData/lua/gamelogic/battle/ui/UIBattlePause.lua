---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/11/5 19:24
---
local UIBattlePause = BaseClass("UIBattlePause", UIBaseView)
local this = UIBattlePause
local base = UIBaseView

function this:CloseSelf()
    self.battle_component:SetBattleSpeed(self.battleSpeed)
    UIManager:GetInstance():CloseWindow(UIWindowNames.UIBattlePause)
end

function this:OnCreate()
    base.OnCreate(self)
    
    UIUtil.AddBtnEvent(self.rc:GetObject("EventBg"), function(go)
        self:CloseSelf()
    end)
    UIUtil.AddBtnEvent(self.rc:GetObject("ContinueButton"), function(go)
        self:CloseSelf()
    end)
    UIUtil.AddBtnEvent(self.rc:GetObject("ExitButton"), function(go)
        self:CloseSelf()
        self.battle_component:SetBattleSpeed(self.battleSpeed)
        self.battle_component:SetBattleResult(BattleResultType.BattleResultGiveUp)
        self.battle_component.fsm:Switch(BattleState.BattleEnd)
    end)
    --self.teamName.text = LangUtil.GetSysLang(3002)..self.battle_component.cur_team_no
    self.battle_component = Game.Scene:GetComponent("BattleComponent")
    ---@type UnityEngine.Transform
    local condition = self.rc:GetObject("Condition").transform
    self.conditions = {}
    for i = 0, condition.childCount - 1 do
        local index = i + 1
        local child = condition:GetChild(i)
        self.conditions[index] = {
            root = child.gameObject,
            offStar = child:Find("Star1").gameObject,
            onStar = child:Find("Star2").gameObject,
            onText = LangUtil.BindText(child:Find("OnText")),
            offText = LangUtil.BindText(child:Find("OffText")),
        }
    end

    LangUtil.GetSysLang(3003)		-- 退出战斗
    LangUtil.GetSysLang(3004)		-- 继续战斗

    self.infoText = LangUtil.BindText(self.rc:GetObject("InfoText"))
    self.conditionRoot = self.rc:GetObject("Conditions")
end

function this:OnEnable()
    base.OnEnable(self)
    self.battle_component = Game.Scene:GetComponent("BattleComponent")
    
    self.battleSpeed = self.battle_component.BattleSpeed
    self.battle_component:SetBattleSpeed(BattleSpeedMode.Pause)
    local against_component = Game.Scene:GetComponent("AgainstComponent")
    self.zSectionConfig = against_component:GetZSection()
    
    if against_component.LevelType == LevelType.LevelTypeBossraid then
        self.conditionRoot:SetActive(false)
        self.infoText.text = ""
        if against_component.BattleData.Bossraid.bossraidId ~= nil and Z_Bossraid[against_component.BattleData.Bossraid.bossraidId] ~= nil then
            self.infoText.text = Z_Bossraid[against_component.BattleData.Bossraid.bossraidId].Info
        end
    else
        self.conditionRoot:SetActive(true)
        self.infoText.text = ""
        local condition = nil
        if self.zSectionConfig.LevelId ~= nil and
                Z_BattleLevel[self.zSectionConfig.LevelId] ~= nil and
                Z_BattleLevel[self.zSectionConfig.LevelId].PerfectConditions ~= nil then
            condition = Z_BattleLevel[self.zSectionConfig.LevelId].PerfectConditions
        end
    
        if condition == nil or table.count(condition) == 0 then
            for i, v in ipairs(self.conditions) do
                if i == 1 then
                    v.root:SetActive(true)
                    
                    v.onText.text = LangUtil.GetSysLang(1469)
                    v.offText.text = LangUtil.GetSysLang(1469)
                    
                    v.onStar:SetActive(true)
                    v.offStar:SetActive(false)
    
                    v.onText.gameObject:SetActive(false)
                    v.offText.gameObject:SetActive(true)
                else
                    v.root:SetActive(false)
                end
            end
        else
            for i, v in ipairs(self.conditions) do
                local con = condition[i]
                if con ~= nil and Z_BattleEndCondition[con] ~= nil then
                    v.root:SetActive(true)
                    v.onText.text = Z_BattleEndCondition[con].Description
                    v.offText.text = Z_BattleEndCondition[con].Description
                    local isOn = false
                    local starIsOn = false
                    local levelInfo = against_component:GetCurLevelInfo()
                    if levelInfo ~= nil then
                        local reachedGoals = levelInfo.reached_goals
                        if reachedGoals ~= nil then
                            for index, value in pairs(reachedGoals) do
                                if value == con then
                                    starIsOn = true
                                    break
                                end
                            end
                        end
                    end
    
                    if CommonSettleBattleType[self.battle_component.against_component.LevelType] then
                        local z_Condition = Z_BattleEndCondition[con]
                        if z_Condition.Type == BattleEndConditionType.KillAll then
                            -- if table.all(table.choose(self.battle_component.IdUnits,function (k,v) return v:GetComponent("SsUnitMatrixComponent").Group == MatrixGroup.Enemy end),
                            --         function (v) return v:GetComponent("CharacterComponent").IsDead end) then
                            --     isOn = true
                            -- end
                            -- 怪物一直活着 所以不用关心这个条件
                            -- 显示星级, 压暗内容
                            v.onStar:SetActive(true)
                            v.offStar:SetActive(false)
    
                            v.onText.gameObject:SetActive(false)
                            v.offText.gameObject:SetActive(true)
                        elseif z_Condition.Type == BattleEndConditionType.Turn then
                            -- if table.all(table.choose(self.battle_component.IdUnits,function (k,v) return v:GetComponent("SsUnitMatrixComponent").Group == MatrixGroup.Enemy end),
                            --         function (v) return v:GetComponent("CharacterComponent").IsDead end) then
                            --     isOn = true
                            -- end
                            -- 怪物一直活着 所以不用关心这个条件, 只看回合数
                            if self.battle_component.OverallTurnNum <= z_Condition.Params[1] then
                                isOn = true
                            end
                            v.offStar:SetActive(not starIsOn and not isOn)
                            v.onStar:SetActive(starIsOn or isOn)
    
                            v.onText.gameObject:SetActive(isOn)
                            v.offText.gameObject:SetActive(not isOn)
    
                        elseif z_Condition.Type == BattleEndConditionType.DeadCount then
                            local count = table.count(table.choose(self.battle_component.IdUnits,function (k,v)
                                return v:GetComponent("SsUnitMatrixComponent").Group == MatrixGroup.Friend and v:GetComponent("CharacterComponent").IsDead
                            end))
                            if count <= z_Condition.Params[1] then
                                isOn = true
                            end
    
                            v.offStar:SetActive(not starIsOn and not isOn)
                            v.onStar:SetActive(starIsOn or isOn)
    
                            v.onText.gameObject:SetActive(isOn)
                            v.offText.gameObject:SetActive(not isOn)
                        end
                    end
                else
                    v.root:SetActive(false)
                end
            end
        end
    end
end

function this.OnDisable(self)
    base.OnDisable(self)
    self.battle_component:SetBattleSpeed(self.battleSpeed)
end

function this.OnDestroy(self)
    base.OnDestroy(self)
end

return this