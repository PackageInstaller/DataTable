---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by daiyi.
--- DateTime: 2019/4/9 17:53
---
local Registry = BaseClass("Registry")

local function __init(self)
    self.classes = {}
end

local function Add(self, cls, name)
    assert(type(cls) == "table" and cls.__cname ~= nil, "Registry.Add() - invalid class:"..cls.__cname)
    if not name then name = cls.__cname end
    assert(self.classes[name] == nil, string.format("Registry.Add() - class \"%s\" already exists", tostring(name)))
    self.classes[name] = cls
end

local function Remove(self,name)
    assert(self.classes[name] ~= nil, string.format("Registry.Remove() - class \"%s\" not found", name))
    self.classes[name] = nil
end

local function Exists(self,name)
    return self.classes[name] ~= nil
end

local function NewObject(self,name, ...)
    local cls = self.classes[name]
    assert(cls ~= nil, string.format("Registry.NewObject - class \"%s\" not found,please register first in GameMain.lua", name))
    --[[
    if not cls then
        -- auto load
        pcall(function()
            cls = require(name)
            Registry.Add(cls, name)
        end)
    end--]]
    --assert(cls ~= nil, string.format("Registry.NewObject() - invalid class \"%s\"", tostring(name)))
    return cls.New(...)
end

local function __delete(self)
    self.classes = nil
    self.classes = {}
end

Registry.__init = __init
Registry.__delete = __delete
Registry.Add = Add
Registry.Remove = Remove
Registry.Exists = Exists
Registry.NewObject = NewObject

return Registry