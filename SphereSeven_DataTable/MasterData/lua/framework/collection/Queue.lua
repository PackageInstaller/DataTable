---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by daiyi.
--- DateTime: 2019/4/15 0:45
---
local Queue = BaseClass("Queue")
--[[
function Queue:__init()
    self.queue = {first = 0, last = -1, size = 0}
end

function Queue:enqueue(element)
    local last = self.queue.last + 1
    self.queue.last = last
    self.queue[last] = element
    self.queue.size = self.queue.size + 1
end

function Queue:dequeue()
    local first = self.queue.first
    if first > self.queue.last then return nil end
    local element = self.queue[first]
    self.queue[first] = nil         -- to allow garbage collection
    self.queue.first = first + 1
    self.queue.size = self.queue.size - 1
    return element
end

function Queue:peek()
    local first = self.queue.first
    if first > self.queue.last then return nil end
    return self.queue[first]
end

function Queue:size()
    return self.queue.size
end

function Queue:clear()
    self.queue = nil
    self.queue = {first = 0, last = -1, size = 0}
end
--]]

function Queue:__init()
    self.queue = list.new()
end

function Queue:enqueue(val)
    self.queue:push(val)
end

function Queue:dequeue()
    return self.queue:shift()
end

function Queue:peek()
    return self.queue:head()
end

function Queue:size()
    return self.queue.length
end

function Queue:clear()
    self.queue:clear()
end

return Queue