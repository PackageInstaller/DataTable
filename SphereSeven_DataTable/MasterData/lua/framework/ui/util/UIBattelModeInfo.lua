---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/9 14:34
---

local UIBattelModeInfo = {}
local this = UIBattelModeInfo


--================================敌人区域=====================================================
local function GetMonsterData(v, zData) --获取敌人数据
    --local temp_tab = {}
    local temp_tab = table.clone(v)
    --temp_tab.pos = v.pos
    --temp_tab.row = v.row
    temp_tab.TemplateId = v.id
    temp_tab.BattleArrayKind = zData.BattleArrayKind
    temp_tab.BattleArrayLevel = zData.BattleArrayLevel
    temp_tab.FormatIntens = zData.FormatIntens
    --temp_tab.Level = v.level or zData.Level
    --temp_tab.Star = v.star or zData.Star
    --temp_tab.skinId = v.skinId or 1
    temp_tab.Kind = (v.boss == nil and { 2 } or { 1 })[1]
    --temp_tab.Stage = v.stage or zData.Stage
    --temp_tab.JadePearlLevel = v.jadePearlLevel or zData.JadePearl
    return temp_tab
end

local function InsertData(monsterData, batch, zData)
    for _, v in table.pairsByKeys(batch) do
        local tb = GetMonsterData(v, zData)
        if not table.first(monsterData, function(a) return a.TemplateId == tb.TemplateId end) then
            table.insert(monsterData, tb)
        end
    end
end

local function InitMonsterAvatar(transform, monsterData) --初始化敌人头像
    if monsterData ~= nil then
        transform.gameObject:SetActive(true)
        local stage = 1
        if monsterData.skinId ~= nil then
            stage = monsterData.skinId
        end
        UIUtil.SetCardSprite(transform:Find("Avatar"):GetComponent("Image"), monsterData.TemplateId, stage, CardPictureType.Little)
        UIUtil.AddBtnEvent(transform, function(go)
            UIUtil.OpenThingsDetailWindow({ monster = monsterData, showType = 4 })
        end)
        local ImageBoss = transform:Find("ImageBoss")
        if not IsNull(ImageBoss) then
            ImageBoss.gameObject:SetActive(monsterData.Kind == 1)
        end
    else
        transform.gameObject:SetActive(false)
    end
end

local function NewInitMonsterAvatar(transform, monsterData)
    transform:Find("Avatar").gameObject:SetActive(true) --
    transform:Find("FarmeBg").gameObject:SetActive(true) --
    transform:Find("FarmeImage").gameObject:SetActive(true) --
    transform:Find("ImageBoss").gameObject:SetActive(monsterData.MonsterAttribute.IsBoss == 1) --
    transform:Find("PropImage").gameObject:SetActive(true) --
    
    UIUtil.NewSetCardSprite(transform:Find("Avatar"):GetComponent("Image"), monsterData.TemplateId, monsterData.MonsterCardInfo.Id, CardPictureType.Little)

    transform:Find("FarmeImage"):GetComponent("Image").sprite = 
    AtlasManager:GetInstance():CoLoadImageAsync("UI/Common/CardInfo/frame-" .. 1 .. ".png")
    --Assets/AssetsPackage/UI/Common/CardInfo

    UIPublic.InitSubProp(transform:Find("PropImage"):GetComponent("Image"), monsterData.MonsterAttribute.Prop)

    UIUtil.AddBtnEvent(transform:Find("Avatar"), function(go)
        UIUtil.OpenThingsDetailWindow({ monster = monsterData, showType = 4 })
    end)
end

function this.InitMonsterArea(monsterRoot, zData, launchAtkData) --初始化敌人区域
    local againstComponent = Game.Scene:GetComponent("AgainstComponent")
    againstComponent:SetCurLevel(launchAtkData)
    local monsterData = {}

    local bool1, batch1 = againstComponent:LoadBatch(zData.Batch1)
    local bool2, batch2 = againstComponent:LoadBatch(zData.Batch2)
    local bool3, batch3 = againstComponent:LoadBatch(zData.Batch3)

    if bool1 then InsertData(monsterData, batch1, zData) end
    if bool2 then InsertData(monsterData, batch2, zData) end
    if bool3 then InsertData(monsterData, batch3, zData) end
    
    local count = monsterRoot.childCount - 1
    local num = 0
    table.walk(monsterData, function(_, v) --boss
        if v.Kind == 1 and num <= count then
            InitMonsterAvatar(monsterRoot:GetChild(num):Find("Panel"), v)
            num = num + 1
        end
    end)
    table.walk(monsterData, function(_, v) --角色
        if v.Kind ~= 1 and Z_Card[v.TemplateId].IsMonster ~= 1 and num <= count then
            InitMonsterAvatar(monsterRoot:GetChild(num):Find("Panel"), v)
            num = num + 1
        end
    end)
    table.walk(monsterData, function(_, v)
        if v.Kind ~= 1 and Z_Card[v.TemplateId].IsMonster == 1 and num <= count then
            InitMonsterAvatar(monsterRoot:GetChild(num):Find("Panel"), v)
            num = num + 1
        end
    end)
    for i = num, count, 1 do
        monsterRoot:GetChild(i):Find("Panel").gameObject:SetActive(false)
    end
end

function this.NewInitMonsterArea(monsterRoot, battleLevelId) --初始化敌人区域
    for i = 0, 8 do
        local panel = monsterRoot:GetChild(i):Find("Panel")
        panel:Find("FarmeBg").gameObject:SetActive(false)
        panel:Find("Avatar").gameObject:SetActive(false)
        panel:Find("FarmeImage").gameObject:SetActive(false)
        panel:Find("ImageBoss").gameObject:SetActive(false)
        panel:Find("PropImage").gameObject:SetActive(false)
    end

    local levelData = Z_BattleLevel[battleLevelId]
    
    local Batch = { 
        levelData.Batch1, 
        levelData.Batch2, 
        levelData.Batch3 
    }

    local monsterData = {}

    for _, batchId in ipairs(Batch) do
        if batchId ~= 0 then
            for key, batchInfo in pairs(Z_MonsterBatch[batchId]) do
                if key ~= "Id" and batchInfo ~= 0 then
                    if Z_Monster[batchInfo] == nil then
                        Logger.LogError("Z_Monster表中ID为" .. batchInfo .. "的数据在Z_Monster表中不存在")
                    elseif Z_FigureAsset[Z_Monster[batchInfo].CardId] == nil then
                        Logger.LogError("Z_Monster表中CardID为" .. Z_Monster[batchInfo].CardId .. "的数据在Z_FigureAsset表中不存在")
                    else
                        local monsterInfo = {
                            MonsterAttribute = Z_Monster[batchInfo],
                            MonsterCardInfo = Z_FigureAsset[Z_Monster[batchInfo].CardId]
                        }
    
                        monsterData[batchInfo] = monsterInfo
                    end
                end
            end
        end
    end

    table.sort(monsterData, function(a, b)
        if a.MonsterAttribute.IsBoss ~= b.MonsterAttribute.IsBoss then
            return a.MonsterAttribute.IsBoss > b.MonsterAttribute.IsBoss
        else
            return a.MonsterAttribute.Id < b.MonsterAttribute.Id
        end
    end)

    local num = 0
    for _, value in table.pairsByKeys(monsterData) do
        if num <= 8 then
            NewInitMonsterAvatar(monsterRoot:GetChild(num):Find("Panel"), value)
        end
        num = num + 1
    end
end

--===================================条件=====================================================
local function InitCondition(transform, conditionData, id, isComplete)
    local color_b = "<color=#FFF2AA>"
    local conditionText = LangUtil.BindText(transform:Find("Text"))
    local star1 = transform:Find("Star1")

    if isComplete then
        if not IsNull(star1) then
            star1:Find("Star2").gameObject:SetActive(isComplete == 1)
        end
        color_b = (isComplete == 1 and { "<color=#FFF2AA>" } or { "<color=#AAD2FF>" })[1]
    else
        if not IsNull(star1) then
            star1.gameObject:SetActive(false)
        end
    end

    conditionText.text = color_b .. id .. "." .. UIPublic.GetConditionStr(conditionData) .. "</color>"
end

function this.InitConditionsArea(transform, conditionRewards, completeInfo)
    if not completeInfo then
        completeInfo = {}
    end
    for i = 0, transform.childCount - 1 do
        local id = i + 1
        InitCondition(transform:GetChild(i), conditionRewards[id], id, completeInfo[id])
    end
end





--====================================条件奖励区域======================================================
local function InitItemAvatar(transform, itemData, kind)
    if itemData == nil then
        transform.gameObject:SetActive(false)
        return
    end
    transform.gameObject:SetActive(true)
    local avatar = transform:Find("Avatar"):GetComponent("Image")
    local bg = transform:Find("Bg"):GetComponent("Image")
    local numText = LangUtil.BindText(transform:Find("Avatar/Text"))
    local data = itemData.reward or itemData
    numText.text = (data.num or 1)
    if kind == 1 then
        --1, 2
        numText.text = data.num .. (data.maxNum == nil and "" or "~" .. data.maxNum)
    elseif kind == 2 then
        numText.text = data.num .. (data.ranNum == nil and "" or "~" .. (data.num + data.ranNum - 1))
    end
    local FirstReword = transform:Find("FirstReword")
    if not IsNull(FirstReword) then
        if itemData.isFirstRewards then
            FirstReword.gameObject:SetActive(true)
            LangUtil.BindText(FirstReword:Find("Text")).text = LangUtil.GetSysLang(128)--初通奖励
        else
            FirstReword.gameObject:SetActive(false)
        end
    end

    local rewardType = data.type or 1--奖励类型
    UIPublic.InitItemIcon(avatar, bg, rewardType, data.id)
    UIUtil.AddBtnEvent(transform.gameObject, function()
        UIPublic.OpenThingsDetail(rewardType, data.id)
    end)
end

function this.InitMustObtainArea(transform, firstPassRewards, conditionRewards, kind) --初始化必定奖励
    if not conditionRewards then --条件奖励 
        conditionRewards = {}
    end
    if firstPassRewards and table.count(firstPassRewards) > 0 then
        firstPassRewards[1].isFirstRewards = true
        if table.count(conditionRewards) >= transform.childCount then
            table.insert(conditionRewards, transform.childCount, firstPassRewards[1])
        else
            table.insert(conditionRewards, firstPassRewards[1])
        end
    end
    for i = 0, transform.childCount - 1 do
        InitItemAvatar(transform:GetChild(i):Find("Panel"), conditionRewards[i + 1], kind)
    end

end

function this.InitOddObtainArea(transform, Rewards, kind) --初始化几率奖励
    if not Rewards then
        Rewards = {}
    end
    for i = 0, transform.childCount - 1 do
        InitItemAvatar(transform:GetChild(i):Find("Panel"), Rewards[i + 1], kind)
    end
end

function this.InitFirstPassArea(transform, firstPassRewards, conditionRewards, kind)--条件奖励
    if not conditionRewards then --条件奖励 
        conditionRewards = {}
    end
    if firstPassRewards then
        for i = 1, table.count(firstPassRewards) do
            if firstPassRewards[i].reward then
                for k, v in pairs(firstPassRewards[i].reward) do
                    v.isFirstRewards = true
                    if table.count(conditionRewards) >= transform.childCount then
                        table.insert(conditionRewards, transform.childCount, v)
                    else
                        table.insert(conditionRewards, v)
                    end
                end
            end
        end
    end
    for i = 0, transform.childCount - 1 do
        InitItemAvatar(transform:GetChild(i):Find("Panel"), conditionRewards[i + 1], kind)
    end

end

function this.GetMonsterTotalNum(zData)
    local count = 0
    local againstComponent = Game.Scene:GetComponent("AgainstComponent")
    for k = 1, 3 do
        local a, b = againstComponent:LoadBatch(zData["Batch" .. k])
        if a then
            for _, v in pairs(b) do
                count = v.num ~= nil and count + v.num or count + 1
            end
        end
    end
    
    return count
end



return UIBattelModeInfo