---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by daiyi.
--- DateTime: 2019/4/1 15:32
---
IMHandler = import(".IMHandler")

local MessageDispatcherComponent = BaseClass("MessageDispatcherComponent", Component)
local base = Component

MessageDispatcherComponent.Awake = function(self)
    base.Awake(self)
    --self.msg_queue = Queue.New()
    --self.is_queue_busy = false
    self.handlers = {}
    --self:RegisterHandler(OuterOpcode.Name2Code.ETModel_G2C_Test,import("Module.Message.G2C_TestHandler"))
    --self:RegisterHandler(OuterOpcode.Name2Code.ETModel_G2C_Test,import("Module.Message.G2C_Test1Handler"))
end

MessageDispatcherComponent.RegisterHandler = function(self,opcode,iMHandlerCls)
    if(self.handlers[opcode] == nil)then
        self.handlers[opcode] = {}
    end 
    table.insert(self.handlers[opcode],iMHandlerCls.New())
end

MessageDispatcherComponent.Handle = function(self,opcode,pbMsg)
    --self.msg_queue:enqueue({opcode=opcode,pbMsg=pbMsg})
    local handlers = self.handlers[opcode]
    if handlers == nil or #handlers == 0 then
        return;
    end
    --assert(handlers ~= nil,"can't find handler handle message:"..opcode.." "..cjson.encode(pbMsg))
    for _,v in ipairs(handlers) do
        v:Handle(pbMsg)
    end
end

--[[MessageDispatcherComponent.Update = function(self)
    if not self.is_queue_busy and self.msg_queue:size()>0 then
        self.is_queue_busy = true
        local msg = self.msg_queue:dequeue()
        coroutine.start(function ()
            local handlers = self.handlers[msg.opcode]
            assert(handlers ~= nil,"can't find handler handle message:"..msg.opcode.." "..cjson.encode(msg.pbMsg))
            for i,v in ipairs(handlers) do
                v:Handle(msg.pbMsg)
            end
            self.is_queue_busy = false
        end)
    end
end--]]

MessageDispatcherComponent.Dispose = function(self)
    base.Dispose(self)
    
    self.handlers = {}
end

return MessageDispatcherComponent