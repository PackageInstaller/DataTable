---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by daiyi.
--- DateTime: 2019/6/3 21:10
---
---@class HeartBeatComponent
local HeartBeatComponent = BaseClass("HeartBeatComponent", Component)
local base = Component

---@param self HeartBeatComponent
local function Awake(self, session)
    base.Awake(self)
    self.send_interval = 20
    self.record_delta_time = 0
    self.session = session

    self.send_log_interval = 10
    self.record_log_delta_time = 0
end

---@param self HeartBeatComponent
local function Update(self)
    TimeUtil.Update()
    -- PingReq
    if (Time.unscaledTime - self.record_delta_time > self.send_interval) then
        self.record_delta_time = Time.unscaledTime
        if self.session then
            coroutine.start(function()
                coroutine.yieldstart(self.session.CoCall,nil, self.session, PROTOCOL.PingReq, {})
            end)
        end
    end
    -- log

    if self.record_log_delta_time == 0 then self.record_log_delta_time = Time.unscaledTime end
    if (Time.unscaledTime - self.record_log_delta_time > self.send_log_interval) then
        self.record_log_delta_time = Time.unscaledTime
        GameMain.SendLog()
    end
end

local function Dispose(self)
    base.Dispose(self)
end


HeartBeatComponent.Awake = Awake
HeartBeatComponent.Update = Update
HeartBeatComponent.Dispose = Dispose

return HeartBeatComponent