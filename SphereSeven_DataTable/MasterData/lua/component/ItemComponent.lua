---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by daiyi.
--- DateTime: 2019/4/11 22:34
---

---@class ItemComponent
---@field Items table<number, Item> @ key: item Id, value: Item数据
---@field itemIds table<number, number[]> @ key : cid(表中的id) value: uid(服务器发来的id) 是个数组( 可能多个同cid的道具 )
local ItemComponent = BaseClass("ItemComponent", Component)
local base = Component

---@param self ItemComponent
local function Awake(self)
    base.Awake(self)
    self.Items = {}
    self.itemIds = {}

    ---@type HintComponent
    local hintComponent = Game.Scene:GetComponent("HintComponent")
    self.itemHint = hintComponent.Item
    self.itemHint:SetCount(0)

    for key, type in pairs(ItemType) do
        self.itemHint:AddChild(type, 0)
    end
end

---@param self ItemComponent
---@param item Item
local function Add(self, item)
    self.Items[item.Id] = item
    if self.itemIds[item.TemplateId] == nil then
        self.itemIds[item.TemplateId] = {}
    end
    self.itemHint:GetChild(Z_Item[item.TemplateId].Type):AddChild(item.Id)
    item:UpdateHint()
    table.insert(self.itemIds[item.TemplateId], item.Id)
end

---@param self ItemComponent
local function Remove(self, itemId)
    local item = self.Items[itemId]
    local templateId = item.TemplateId
    local config = Z_Item[templateId]
    if item ~= nil and self.itemIds[item.TemplateId] ~= nil then
        table.removebyvalue(self.itemIds[item.TemplateId], itemId)
    end
    self.Items[itemId] = nil;


    if config.Type == ItemType.ReasureBox or config.Type == ItemType.Material then
        ---@type HintComponent
        local hintComponent = Game.Scene:GetComponent("HintComponent")
        hintComponent.Item:GetChild(config.Type):GetChild(itemId):SetCount(0) 
    end
    if UIPublic.isFreeRecruitItemId(templateId) then
        ---@type RecruitComponent
        local recruitComponent = Game.Scene.Player:GetComponent("RecruitComponent")
        if recruitComponent ~= nil then
            for index, value in ipairs(recruitComponent:GetPoolList()) do
                value:UpdateHint()
            end
        end
    end
end

---@param self ItemComponent
local function Dispose(self)
    base.Dispose(self)
    
    for _,v in pairs(self.Items) do
        v:Dispose()
    end
end

--- 使用表中的id(道具的templateId)获取对应item
---@param self ItemComponent
---@return Item | nil
local function GetItem(self, templateId)
    if self.itemIds[templateId] == nil then
        return nil
    else
        local uid = self.itemIds[templateId][1]
        return self.Items[uid]
    end
end

---@param self ItemComponent
local function GetItemsByUesType(self, useType)
    local items = {}
    for _, v in pairs(self.Items) do
        if v.config.UseType == useType then
            table.insert(items, v)
        end
    end
    return items
end

--- uid cid 填写哪个就用哪个查找item
---@param self ItemComponent
local function ChangeItemCount(self, uid, cid, count)
    if uid ~= nil then
        if self.Items[uid] == nil then
            self:Add(Game.Registry:NewObject("Item",{
                uid = uid,
                cid = cid,
                count = count
            }))
        else
            self.Items[uid].Amount = count
        end
        return
    end

    if cid ~= nil then
        local item = self:GetItem(cid)
        item.Amount = count
    end
end

---@param self ItemComponent
local function SendUseRequest(self,templateId,amount)
    local item = self:GetItem(templateId)
    local reqData = {}
    reqData.items = {}
    table.insert(reqData.items, {
        uid = item.Id,
        count = amount,
        args = {}
    })

    PublicRequest.SendRequest(PROTOCOL.UseItemReq, reqData, function(response)
        DataManager:GetInstance():Broadcast(DataMessageNames.ON_ITEM_INFO_CHG)
        if response.reward_result ~= nil then
            UIPublic.OpenRewardUI(response.reward_result)
        end
    end)
end

---@param self ItemComponent
local function SendPurchaseUseRequest(self, ItemId, amount)
    --购买即使用专用接口

    coroutine.start(function()
        --local reqData={}
        --reqData["ItemId"]= ItemId
        --reqData["Amount"]= amount
        --local response =coroutine.yieldstart(Game.Scene.Session.CoCall,nil,Game.Scene.Session,
        --        OuterOpcode.Name2Code.ETModel_C2M_UseItem,reqData)
        --if response.Error == ErrorCode.ERR_Success then

        --DataManager:GetInstance():Broadcast(DataMessageNames.ON_ITEM_INFO_CHG)
        --if templateId == 3019 or templateId == 3020
        --or templateId == 3015 or templateId == 3016 or templateId == 3025 then
        local g2CPlayerInfo = coroutine.yieldstart(Game.Scene.Session.CoCall, nil, Game.Scene.Session,
                OuterOpcode.Name2Code.ETModel_C2M_PlayerInfo, {})
        if g2CPlayerInfo.Error == ErrorCode.ERR_Success then
            local player = Game.Scene.Player
            local playerInfo = g2CPlayerInfo.PlayerInfo
            
            if player.CardMax < playerInfo.CardMax then
                UIUtil.ToolTipFourth(LangUtil.GetSysLang(854))--超越者
            elseif  player.EquipMax < playerInfo.EquipMax then
                UIUtil.ToolTipFourth(LangUtil.GetSysLang(855))--装备
            elseif player.FightSoulsMax < playerInfo.FightSoulMax then
                UIUtil.ToolTipFourth(LangUtil.GetSysLang(856))--战魂
            end
            
            player.CardMax = playerInfo.CardMax
            player.EquipMax = playerInfo.EquipMax
            player.FightSoulsMax = playerInfo.FightSoulMax
            --UIUtil.ToolTipFourth(LangUtil.GetSysLang(569))
        else
            UIUtil.ToolTipFourth(LangUtil.GetServerError(g2CPlayerInfo.Error))
        end

        --player:GetComponent("PlayerBuffComponent"):Set()
        --end

        --else
        --    UIUtil.ToolTipFourth(response.Message)
        --end
    end)
end

function ItemComponent:DailyRefresh()
    for _, item in pairs(self.Items) do
        item:UpdateHint()
    end
end

ItemComponent.Awake = Awake
ItemComponent.Add = Add
ItemComponent.Remove = Remove
ItemComponent.Dispose = Dispose
ItemComponent.SendUseRequest = SendUseRequest
ItemComponent.SendPurchaseUseRequest = SendPurchaseUseRequest
ItemComponent.GetItem = GetItem
ItemComponent.ChangeItemCount = ChangeItemCount
ItemComponent.GetItemsByUesType = GetItemsByUesType
return ItemComponent