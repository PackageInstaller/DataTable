---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by daiyi.
--- DateTime: 2019/4/11 20:08
---
---@class StarLightRebateComponent
local StarLightRebateComponent = BaseClass("StarLightRebateComponent", Component)
local base = Component
local this = StarLightRebateComponent

local function Awake(self)
    base.Awake(self)
    self.Records = {}
    self.PurchasesDetail = {}
    self.QuotaDetail = {}
    self.isReqData = false
    self.StartDate = -1
    self.EndDate = -1

    ---@type HintComponent
    local hintComponent = Game.Scene:GetComponent("HintComponent")
    self.shopHint = hintComponent.Shop

    if self.shopHint:GetChild("StarLightStoneShop") == nil then
        self.shopHint:AddChild("StarLightStoneShop", 0)
    end
    for i = 1, 4 do
        if self.shopHint:GetChild("StarLightStoneShop"):GetChild(i) == nil then
            self.shopHint:GetChild("StarLightStoneShop"):AddChild(i, 0)
        end
    end
    for key, value in pairs(Z_StarLightStoneShop) do
        if value.QuotaPeriod == 1 or value.QuotaPeriod == 2 or value.QuotaPeriod == 3 or value.QuotaPeriod == 4 then
            ---@type HintNode
            local hintNode
            hintNode = self.shopHint:GetChild("StarLightStoneShop"):GetChild(value.QuotaPeriod):AddChild(value.Id) -- Id 就是 对应的goodsId
            
            self:UpdatePaymentHintNode({
                id = value.Id,
                buy_times = 0,
            })
        end
    end
end

local function CoLoadData(self)
    -- local info = coroutine.yieldstart(Game.Scene.Session.CoCall, nil, Game.Scene.Session,
    --         OuterOpcode.Name2Code.ETModel_C2M_TopUpActivities, {})
    -- if info.Error == ErrorCode.ERR_Success then
    --     self.Records = info.Records
    --     self.PurchasesDetail = info.PurchasesDetail -- 商品购买的总次数 
    --     self.QuotaDetail = info.QuotaDetail         -- QuotaDetail 限购次数记录
    --     self.TimeSlots = info.TimeSlots             -- TimeSlots 里面是商品礼包的开启Start结束End时间
    --     self.StartDate = info.StartDate
    --     self.EndDate = info.EndDate
    --     self.isReqData = true
    --     -- 红点逻辑
    --     self.shopHint:GetChild("GiftShop"):SetCount(0)
    --     self.shopHint:SetCount(0)
    --     table.walk(Z_StarLightStoneShop, function (k, v)
    --         if v.QuotaPeriod == 1 and v.Price == 0 then -- 每天免费领取
    --             local quotaDetail = table.first(self.QuotaDetail,function(val)
    --                 return val.Key == v.Id
    --             end)
    --             local value = quotaDetail and quotaDetail.Val or 0
    --             if value < v.QuotaNum then -- 没有免费领取
    --                 if v.Type == 3 then -- 礼包商店
    --                     self.shopHint:GetChild("GiftShop"):AddCount(1)
    --                 end
    --             end
    --         end
    --     end)
    --     --DataManager:GetInstance():Broadcast(DataMessageNames.ON_STAR_LIGHT_INFO_CHG)
    -- else
    --     Logger.LogError("ETModel_C2M_TopUpActivities:" .. info.Error)
    -- end

    --------------------------------------------
    local info = coroutine.yieldstart(Game.Scene.Session.CoCall,nil,Game.Scene.Session,
            PROTOCOL.PaymentInfoReq, {})
    self:SetPaymentData(info)
    return coroutine.yieldbreak(info)
end

---@param self StarLightRebateComponent
local function SetPaymentData(self, info)
    self.Records = {}
    self.PurchasesDetail[1] = {} -- 商品购买的总次数 
    self.QuotaDetail = {}        -- QuotaDetail 限购次数记录
    self.TimeSlots = {}            -- TimeSlots 里面是商品礼包的开启Start结束End时间
    self.StartDate = 1657051200
    self.EndDate = 1659470400
    self.isReqData = true

    for _, goodsInfo in ipairs(info.payment_info.shop.goods) do
        self.PurchasesDetail[1][goodsInfo.id] = goodsInfo
        self:UpdatePaymentHintNode(goodsInfo)
    end
end

---@param goodsInfo protocol.Goods
function this:UpdatePaymentHintNode(goodsInfo)
    local hintCount = 0
    local zStarLightStoneShop = Z_StarLightStoneShop[goodsInfo.id]
    if zStarLightStoneShop == nil then
        return
    end

    local hasCondition = false
    if not string.IsNullOrEmpty(zStarLightStoneShop.OnSaleStartCondition) then
        hasCondition = true
        if zStarLightStoneShop.Price == 0 and UIPublic.CheckCondition(zStarLightStoneShop.OnSaleStartCondition) then
            if  zStarLightStoneShop.QuotaNum == 0 or zStarLightStoneShop.QuotaNum > goodsInfo.buy_times then
                -- 价格为0 购买次数未达到上限
                hintCount = 1
            end
        end
    else
        if zStarLightStoneShop.Price == 0 then
            if  zStarLightStoneShop.QuotaNum == 0 or zStarLightStoneShop.QuotaNum > goodsInfo.buy_times then
                -- 价格为0 购买次数未达到上限
                hintCount = 1
            end
        end
    end

    if self.shopHint:GetChild("StarLightStoneShop"):GetChild(zStarLightStoneShop.QuotaPeriod) ~= nil and
        self.shopHint:GetChild("StarLightStoneShop"):GetChild(zStarLightStoneShop.QuotaPeriod):GetChild(goodsInfo.id) ~= nil then
            local hint = self.shopHint:GetChild("StarLightStoneShop"):GetChild(zStarLightStoneShop.QuotaPeriod):GetChild(goodsInfo.id)
            hint:SetCount(hintCount)
            if hasCondition then
                ---@type HintComponent
                local hintComponent = Game.Scene:GetComponent("HintComponent")
                hintComponent:AddCondition(hint, goodsInfo.id)
            end
    end
end

-- 获取总购买次数的数量
function this.GetPurchaseCount(self, id)
    -- local purchasesDetail = table.first(self.PurchasesDetail,function(v) return v.Key == id end)
    -- return purchasesDetail and purchasesDetail.Val or  0
    local count = 0--
    if self.PurchasesDetail[1][id] ~= nil then
        count = self.PurchasesDetail[1][id].buy_times
    end

    return count
end

-- 获取周期购买次数的数量
function this.GetQuotaCount(self, id)
    local quotaDetail = table.first(self.QuotaDetail,function(v) return v.Key == id end)
    return quotaDetail and quotaDetail.Val or  0
end

function this.ReceiveReward(self, id, callback)
    local sendReqData = {}
    sendReqData.Id = id

    local info = coroutine.yieldstart(Game.Scene.Session.CoCall, nil, Game.Scene.Session,
            OuterOpcode.Name2Code.ETModel_C2M_TopUpToReceive, sendReqData)
    if info.Error == ErrorCode.ERR_Success then
        self.Records[id] = 1
        if callback ~= nil then
            callback()
        end
        DataManager:GetInstance():Broadcast(DataMessageNames.ON_STAR_LIGHT_REBATE_CHG)
    else
        UIUtil.ToolTipFourth(LangUtil.GetServerError(info.Error), 1.5)
    end
end

function this.ActiveIsOpen(self)
    if not Z_HomeBanner[1003] or Z_HomeBanner[1003].NotOpen == 1 then
        return false
    end
    
    if not self.isReqData then
        local request = coroutine.yieldstart(self.CoLoadData, nil, self)
        if request == nil or request.Error ~= ErrorCode.ERR_Success then
            return false
        end
    end
    
    if self.StartDate <= 0 or self.StartDate > TimeUtil.OSTime() or self.EndDate < TimeUtil.OSTime() then
        return false
    end
    return true
end

local function Dispose(self)
    base.Dispose(self)
end

StarLightRebateComponent.Awake = Awake
StarLightRebateComponent.Dispose = Dispose
StarLightRebateComponent.CoLoadData = CoLoadData
StarLightRebateComponent.SetPaymentData = SetPaymentData
return StarLightRebateComponent