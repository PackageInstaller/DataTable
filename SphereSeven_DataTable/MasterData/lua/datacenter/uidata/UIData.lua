---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by win 10.
--- DateTime: 2019/4/8 21:36
---
---@class UIData
---@field Team Team @ 当前队伍
local UIData = {};
local this = UIData;

this.BlurFunc = nil
this.MaxTeamNo = 8


function this.SetSectionId(id,difficulty)
    this.cur_section_id = id;
    Game.Scene:GetComponent("AgainstComponent"):SetCurLevel(id,difficulty);
    DataManager:GetInstance():Broadcast(DataMessageNames.ON_STORY_SECTION_CHG,this.cur_section_id);
end

function this.GetSectionId()
    return Game.Scene:GetComponent("AgainstComponent").CurLevelId;
end

function this.SaveCommonLevelData(data)
    this.commonLevelData = data
end

--- 切换队伍(编队页面 开战页面)
function this.SetFormatArray(id) --设置编成界面的队伍
    local team = Game.Scene.Player:GetComponent("TeamComponent"):Get(id)
    if team ~= nil then
        this.Team = team
    else
        this.ResetCurTeam()
    end
    ClientData:GetInstance():SetCurTeamNo(this.Team.Id)
    DataManager:GetInstance():Broadcast(DataMessageNames.ON_FORMAT_ARRAY_CHG)
end

---@return Team
function this.GetCurTeam(formationsType)
    if formationsType == FormationsType.FormationsTypeArena then
        ---@type TeamComponent
        local teamComponent = Game.Scene.Player:GetComponent("TeamComponent")
        return teamComponent:Get(ArenaFormationIndex, formationsType)
    elseif formationsType == FormationsType.FormationsTypeBossraid then
        local teamId = ClientData:GetInstance().CurTeamNo
        ---@type TeamComponent
        local teamComponent = Game.Scene.Player:GetComponent("TeamComponent")
        return teamComponent:Get(teamId, formationsType)
    else
        if this.Team == nil then
            this.ResetCurTeam()
        end
        
        return this.Team
    end
end

function this.ResetCurTeam()
    local teamId = ClientData:GetInstance().CurTeamNo
    ---@type TeamComponent
    local teamComponent = Game.Scene.Player:GetComponent("TeamComponent")
    local team = teamComponent:Get(teamId)
    if team == nil then
        teamId = teamComponent:GetDefaultTeam().Id
    end
    ClientData:GetInstance():SetCurTeamNo(teamId)
    print("--重置队伍数据Team NO: " .. teamId)
    this.Team = team
    print("--重置后客户端临时队伍数据: " .. table.dump(this.Team))
end

function this.GetCardTeamNo(CardId) --属于哪个战队
    for k,v in pairs(Game.Scene.Player:GetComponent("TeamComponent"):GetTeams()) do
        for _, t in pairs(v.TeamDetailList) do
            if t.CardId == CardId and v.Id <= this.MaxTeamNo then
               return v.Id
            end
        end        
    end
    return nil
end

function this.SetUIFightSoulIntensData(data)
    this.ui_fight_soul_intens_data = data;
    if this.ui_fight_soul_intens_data.cur_card == nil then
        this.ui_fight_soul_intens_data.cur_card = table.first(Game.Scene.Player:GetComponent("CardComponent").Cards);
    end
end

function this.GetUIFightSoulIntensData()
    return this.ui_fight_soul_intens_data;
end











-----------------------技能------------------------
SkillAttr = {CooldownTurn = 102, FriendRange = 103, EnemyRange = 104}

function this.GetSkillAttr(type, skill, battleCharacter)
    local value = 0
    local skillAttrs = {}
    if battleCharacter then
        local cardConstelComponent = battleCharacter:GetComponent("CardConstelComponent")
        if cardConstelComponent then
            skillAttrs = cardConstelComponent.skillAttrs
        end
    end
    local id = skill.Id
    if skill.SkillId then
        id = skill.SkillId
    end
    
    if type == SkillAttr.CooldownTurn then
        value = skill.CooldownTurn
        for _, v in pairs(skillAttrs) do
            if v.CooldownTurn and v.TemplateId == id and v.CooldownTurn >= 0 then
                value = v.CooldownTurn
                break
            end
        end
    elseif type == SkillAttr.FriendRange then
        value = skill.FriendRange
        for _, v in pairs(skillAttrs) do
            if v.FriendRange and v.TemplateId == id and v.FriendRange >= 0 then
                value = v.FriendRange
                break
            end
        end
    elseif type == SkillAttr.EnemyRange then
        --value = skill.EnemyRange
        --for _, v in pairs(skillAttrs) do
        --    if v.EnemyRange and v.TemplateId == skill.Id and v.EnemyRange >= 0 then
        --        value = v.EnemyRange
        --        break
        --    end
        --end
    end
    
    return value;
end









return UIData