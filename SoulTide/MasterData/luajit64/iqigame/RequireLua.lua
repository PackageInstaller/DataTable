-- chunkname: @IQIGame\\RequireLua.lua

local LoadList = {}
local LoadUtilList = {
	Path = "Util",
	Value = {
		"Class",
		"Math",
		"Layer",
		"Enum",
		"Tags",
		"Array"
	}
}

table.insert(LoadList, LoadUtilList)

local LoadIQIUtilList = {
	Path = "IQIGame.Util",
	Value = {
		"Queue",
		"AssetUtil",
		"UIUtil",
		"ModuleTimerUtil",
		"Stack",
		"EntityShowUtil",
		"EquipListUtil",
		"FocusTimer",
		"UIRecorder",
		"Random"
	}
}

table.insert(LoadList, LoadIQIUtilList)

local LoadConstantList = {
	Path = "IQIGame.Definition",
	Value = {
		"Constant",
		"UIControllerName",
		"TipConst",
		"AttributeConst",
		"UIParam",
		"SceneID",
		"SDKLogEventID",
		"CommonActivityVirtualSceneID"
	}
}

table.insert(LoadList, LoadConstantList)

local LoadRootList = {
	Path = "IQIGame",
	Value = {
		"Global",
		"RequireConfig",
		"RequireConfigCustomizer",
		"RequireCSharpBinding",
		"RequireToGlobal"
	}
}

table.insert(LoadList, LoadRootList)

local LoadGlobalFunctionList = {
	Path = "IQIGame.GlobalFunction",
	Value = {
		"CustomTableFunction",
		"CustomStringFunction"
	}
}

table.insert(LoadList, LoadGlobalFunctionList)

local LoadCoreList = {
	Path = "IQIGame.Core",
	Value = {
		"Base",
		"Initialization",
		"NetManager",
		"CSharpInterface",
		"GlobalListener"
	}
}

table.insert(LoadList, LoadCoreList)

local LoadEventList = {
	Path = "IQIGame.Events",
	Value = {
		"EventID",
		"EventDispatcher"
	}
}

table.insert(LoadList, LoadEventList)

local LoadNetList = {
	Path = "IQIGame.Net",
	Value = {
		"net",
		"NetCommController",
		"NetPlayerResponse",
		"NetBattlePassesResponse",
		"NetOperationsFurnitureGacheRespones",
		"NetDressResponse",
		"NetSoulPrefabResponse",
		"NetDialogResponse",
		"NetSoulResponse",
		"NetUserResponse",
		"NetWarehouseResponse",
		"NetCenterChatResponse",
		"NetItemResponse",
		"NetShopResponse",
		"NetMallResponse",
		"NetDreamMapResponse",
		"NetChurchResponse",
		"NetMazeResponse",
		"NetMiniGameResponse",
		"NetTaskResponse",
		"NetDatingResponse",
		"NetHomeResponse",
		"NetGirlResponse",
		"NetLunaBattleLineResponse",
		"NetMailResponse",
		"NetFriendResponse",
		"NetTownResponse",
		"NetLotteryResponse",
		"NetFormationResponse",
		"NetLibraryResponse",
		"NetDailyDupResponse",
		"NetDualTeamExploreResponse",
		"NetFightResponse",
		"NetChallengeResponse",
		"NetTowerResponse",
		"NetWorldBossResponse",
		"NetCenterRankResponse",
		"NetActiveResponse",
		"NetSoulMemoryResponse",
		"NetMagicTowerResponse",
		"NetCenterEventTurnTableResponse",
		"NetSoulNewStoryResponse",
		"NetRpgMazeResponse",
		"NetOperationsEventResponse",
		"NetCenterOperationsEventResponse",
		"NetOperationsMagicMuseumResponse",
		"NetOperationsGachaPoolResponse",
		"NetOperationsNewCharacterResponse",
		"NetOperationsDoubleFightResponse",
		"NetOperationsSpaceTreasureResPonse",
		"NetOperationsPandaResponse",
		"NetOperationsVoteResponse",
		"NetCenterEventVoteResponse",
		"NetOperationsTreasureHuntResponse",
		"NetOperationsHelpNewbiesResponse",
		"NetTaleChallengeResponse",
		"NetOperationsTreasureHuntResponse",
		"NetOperationsTreasureHuntResponse",
		"NetFishingResponse",
		"NetMiniGalGameResponse",
		"NetEvilErosionResponse",
		"NetOperationsTurntableResponse",
		"NetAbyssPlusResponse",
		"NetOperationsLimitTurntableResponse",
		"NetOperationsCupMatchViteResponse",
		"NetCenterEventCupMatchVoteResponse",
		"NetCenterGuildResponse",
		"NetGuildResponse",
		"NetGuildChallengeResponse",
		"NetMiningResponse",
		"NetJewelryResponse",
		"NetSingleWeakTowerResponse",
		"NetCommandChallengeLayerResponse",
		"NetFlightChallengeResponse",
		"NetGuildTrainingResponse",
		"NetRestaurantResponse",
		"NetPlaceGameResponse",
		"NetAmusementParkResponse",
		"NetSurvivalResponse",
		"NetHorizontalRPGResponse",
		"NetFishingActivityResponse"
	}
}

table.insert(LoadList, LoadNetList)

local LoadSceneList = {
	Path = "IQIGame.Scene",
	Value = {
		"Input.InputManager",
		"StateMachine.StateMachineMgr",
		"StateMachine.StateMachine"
	}
}

table.insert(LoadList, LoadSceneList)

local LoadModuleList = {
	Path = "IQIGame.Module",
	Value = {
		"Scene.SceneManager",
		"Login.ProcedureReset",
		"Login.LoginModule",
		"PassCheck.PassCheckModule",
		"MemoryS.MemorySModule",
		"Active.Sign.ActivitySignModule",
		"Active.PaidChallenge.PaidChallengeModule",
		"Active.FurnitureGashapon.FurnitureGashaponModule",
		"Active.DollBingo.DollBingoModule",
		"Active.ActivityDollMissionModule",
		"RPGMission.RPGMissionModule",
		"ActiveWeekend.ActiveWeekendModule",
		"TownArea.TownAreaModule",
		"SoulPrefab.SoulPrefabModule",
		"Mission.MissionModule",
		"Active.ActiveModule",
		"GmList.GmListModule",
		"HomeLand.HLWork.HLWorkModule",
		"SaveData.SaveDataModule",
		"HomeLand.HLWork.HLWorkData",
		"HomeLand.HLWork.HLWorkAffairData",
		"SoulPrefab.SoulPrefabData",
		"Login.HttpRequestParam",
		"Warehouse.WarehouseModule",
		"Warehouse.ItemData",
		"Attribute.AttributeModule",
		"Warehouse.ItemEffect",
		"Warehouse.ItemModule",
		"Soul.SoulModule",
		"Soul.SoulData",
		"Dress.DressModule",
		"Dress.DressData",
		"Player.PlayerModule",
		"Chat.ChatModule",
		"Chat.WarnStrFunc",
		"Common.UIModule",
		"Common.NoticeModule",
		"Common.CardGameModule",
		"Common.ResourceUpdateChecker",
		"Common.TurntableGameModule",
		"Shop.ShopModule",
		"Shop.MazeShopModule",
		"Shop.ShopItemData",
		"Maze.MazeModule",
		"Memory.MemoryModule",
		"Maze.MazeDataModule",
		"Condition.ConditionModule",
		"Task.TaskModule",
		"Equip.EquipModule",
		"Task.TaskServerPodData",
		"Dating.DatingModule",
		"Dating.DatingEventData",
		"EndlessPlus.EndlessPlusMazeModule",
		"Dating.DatingPlaceData",
		"Dating.DatingEndServerData",
		"Battle.BattleModule",
		"Gift.GiftModule",
		"Gift.GiftData",
		"Mail.MailModule",
		"Mail.MailData",
		"Fondle.FondleModule",
		"HomeLand.HomeLandLuaModule",
		"Friend.FriendModule",
		"Setting.SettingModule",
		"FuncJump.JumpModule",
		"Town.TownModule",
		"CommonActivity.MagicTower.MagicTowerModule",
		"Weather.WeatherModule",
		"Church.ChurchModule",
		"Lottery.LotteryModule",
		"SignIn.SignInModule",
		"Maze.MazeBGMModule",
		"Weather.WeatherBGMModule",
		"EvilErosion.EvilErosionModule",
		"Mall.MallModule",
		"BuyPanel.BuyGoodsData",
		"FurnitureLottery.FurnitureLotteryModule",
		"Skill.SkillModule",
		"NPCAction.NPCActionModule",
		"CommonActivity.Common.CommonActivitySceneModule",
		"UnlockFunction.UnlockFunctionModule",
		"Memory.MemoryNewModule",
		"Girl.GirlModule",
		"Red.RedModule",
		"CreateRole.CreateRoleModule",
		"Guide.GuideModule",
		"Guide.GuideConditionModule",
		"Cooking.CookingModule",
		"TownLibrary.TownLibraryModule",
		"Challenge.ChallengeModule",
		"ChallengeTower.ChallengeTowerModule",
		"ChallengeWorldBoss.ChallengeWorldBossModule",
		"MainTips.MainTipsModule",
		"Maze.ActivityMaze.RpgMazeModule",
		"Login.SDKLoginModule",
		"Active.LunaBattleLine.LunaBattleLineModule",
		"HomeLandManufacture.HomeLandManufactureMould",
		"HomeLandVisit.HomeLandVisitMould",
		"Sound.SoundPackagePlayer",
		"Sound.SoundPackageData",
		"Dreamland.DreamlandModule",
		"DualTeamExplore.DualTeamExploreModule",
		"Formation.FormationModule",
		"Common.CenterRankModule",
		"Common.ExecutionModule",
		"Battle.BattleSkillModule",
		"HomeLandProcess.HomeLandProcessMould",
		"Dialog.DialogModule",
		"ActivityTurn.ActivityTurnModule",
		"DailyDup.DailyDupModule",
		"PurchaseTips.PurchaseTipModule",
		"PushMessage.PushMessageModule",
		"ActiveGroupBuy.ActiveGroupBuyModule",
		"Maze.SoulAvatarData",
		"ActiveOperationsEvent.ActiveOperationEventModule",
		"ActivePicturePuzzle.ActivePicturePuzzleModule",
		"ActiveMagicWaxMuseum.ActiveMagicWaxMuseumModule",
		"ActiveNewCharacter.ActiveNewCharacterModule",
		"ActiveGacha.ActiveGachaModule",
		"ActiveDoubleFight.ActiveDoubleFightModule",
		"ActiveSpaceTreasure.ActiveSpaceTreasureModule",
		"ActiveLuckTurnTable.ActiveLuckyTurnTableModule",
		"ActivePanda.ActivePandaModule",
		"ActiveVote.ActiveVoteModule",
		"Active.ReplacementPass.ReplacementPassModule",
		"ActiveNewYearGift.ActiveNewYearGiftModule",
		"ActiveWelcomeNew.ActiveWelcomeNewModule",
		"ActiveWelcomeBack.ActiveWelcomeBackModule",
		"PlotChallenge.PlotChallengeModule",
		"ActiveDropExchange.ActiveDropExchangeModule",
		"Fishing.FishingModule",
		"MemoryStory.MemoryStoryModule",
		"CommonActivity.MonsterAcademy.MonsterAcademyModule",
		"ActiveLimitedTurn.ActiveLimitedTurnModule",
		"RefundsGiftPack.RefundsGiftPackModule",
		"ActiveCupVoting.ActiveCupVotingModule",
		"Guild.GuildModule",
		"Guild.GuildChallengeModule",
		"Girl.GirlBackGround.GirlBackGroundModule",
		"Chat.ChatBubble.ChatBubbleModule",
		"Mining.MiningModule",
		"Jewelry.JewelryModule",
		"CelebrationGift.CelebrationGiftModule",
		"SingleWeakTower.SingleWeakTowerModule",
		"Maze.MazeChallengeBonus.MazeChallengeBonusModule",
		"CommandChallenge.CommandChallengeModule",
		"CommonActivity.FlightChallenge.FlightChallengeModule",
		"CommonActivity.FlightChallenge.FlightGame.FlightGameModule",
		"Guild.GuildTraining.GuildTrainingModule",
		"CommonActivity.RestaurantOperation.RestaurantOperationModule",
		"CommonActivity.RestaurantOperation.ROAnswerGame.ROAnswerGameModule",
		"CommonActivity.RestaurantOperation.ROCardGame.ROCardGameModule",
		"CommonActivity.RestaurantOperation.ROFruitCleanGame.ROFruitCleanGameModule",
		"CommonActivity.RestaurantOperation.ROPuzzleGame.ROPuzzleGameModule",
		"Girl.RandomSecretary.RandomSecretaryModule",
		"CommonActivity.PlaceGame.PlaceGameModule",
		"CommonActivity.AmusementPark.AmusementParkModule",
		"CommonActivity.AmusementPark.AmusementParkAnswerGame.AmusementParkAnswerGameModule",
		"CommonActivity.AmusementPark.AmusementParkPuzzleGame.AmusementParkPuzzleGameModule",
		"CommonActivity.AmusementPark.AmusementParkDollMachineGame.AmusementParkDollMachineGameModule",
		"CommonActivity.AmusementPark.AmusementParkBirdGame.AmusementParkBirdGameModule",
		"CommonActivity.AmusementPark.AmusementParkOneConnectGame.AmusementParkOneConnectGameModule",
		"CommonActivity.Survival.SurvivalModule",
		"CommonActivity.Survival.FlyGame.FlyGameModule",
		"CommonActivity.HorizontalRPG.HorizontalRPGModule",
		"PlotChallenge.PrizeDrawPoolRewardData",
		"CommonActivity.FishingActivity.FishingActivityModule"
	}
}

table.insert(LoadList, LoadModuleList)

local LoadUIApiList = {
	Path = "IQIGame.UIExternalApi",
	Value = {
		"UIGlobalApi",
		"BaseLangApi",
		"PassCheckUIApi",
		"ExpBonusUIApi",
		"MemorySceneMainUIApi",
		"MemoryStorySceneMainUIApi",
		"SoulSpecialSpiritUIApi",
		"SpecialSpiritUIApi",
		"LinkTipUIApi",
		"GashaponHistoryListUIApi",
		"ActivityNewDollBingoUIApi",
		"ActivityNewDollMissionUIApi",
		"DressUnlockUIApi",
		"GashaponRewardListUIApi",
		"LotteryGashaponUIApi",
		"RPGMissionUIApi",
		"ActivitySignUIApi",
		"PlayerAccusationUIApi",
		"PassCheckNewTipUIApi",
		"PassCheckDealUIApi",
		"BuyPassCheckLevelUIApi",
		"PassCheckRewardListUIApi",
		"PassCheckFunctionInfoUIApi",
		"PassCheckFunctionInfoUIApi",
		"ActiveWeekendUIApi",
		"MiscApi",
		"MazeSceneApi",
		"ActivityCreditUIApi",
		"ShopRecoveryUIApi",
		"TownAreaUIApi",
		"DreamlandSceneApi",
		"DualTeamExploreSceneApi",
		"HomeLandWorkRoomUIApi",
		"SoulLevelUpTipUIApi",
		"SoulEvolutionTipUIApi",
		"HomeLandWorkListUIApi",
		"MazeQTEUIApi",
		"RpgMazeMainUIApi",
		"DualTeamExploreLevelExitUIApi",
		"MissionUIApi",
		"SoulAwakeTaskUIApi",
		"UnlockSkillNoticeUIApi",
		"HomeLandWorkSoulUIApi",
		"ActiveRookieUIApi",
		"SoulTalentAttributeUIApi",
		"EquipComposeUIApi",
		"EquipComposeShowUIApi",
		"ShopBuyPanelUIApi",
		"PlayerLevelUpTipUIApi",
		"SoulListUIApi",
		"EquipTipApi",
		"SoulLockUIApi",
		"RpgMazeEntryUIApi",
		"EquipDecomposeUIApi",
		"BuffTipsUIApi",
		"SoulLevelUpUIApi",
		"EquipAdvancedShowUIApi",
		"QueueTipUIApi",
		"EquipListUIApi",
		"EquipUIApi",
		"ItemTipsApi",
		"LoginUIApi",
		"MainUIApi",
		"MazeReviveUIApi",
		"SoulListCellApi",
		"MazeSelectPanelUIApi",
		"RollingNoticeUIApi",
		"GiftTipUIApi",
		"DialogUIApi",
		"ActivityUIApi",
		"UseNumberUIApi",
		"ShopUIApi",
		"ShopBuyItemUIApi",
		"MoneyGridApi",
		"ConfirmationUIApi",
		"WarehouseUIApi",
		"CommonSlotUIApi",
		"SoulUIApi",
		"MazeBagUIApi",
		"LoadingUIApi",
		"GetPanelUIApi",
		"CardGameUIApi",
		"ChatUIApi",
		"RpgMazeTeamUIApi",
		"LotteryHistoryUIApi",
		"MazeSettlementUIApi",
		"DatingUIApi",
		"TurntableGameUIApi",
		"FriendUIApi",
		"LotteryRewardListUIApi",
		"MazeTeamSelectEquipUIApi",
		"LotteryPickUpUIApi",
		"MallUIApi",
		"BuyPanelUIApi",
		"BattleUIApi",
		"FurnitureLotteryUIApi",
		"UnlockNoticeUIApi",
		"KeyItemNoticeUIApi",
		"TaskAccomplishedNoticeUIApi",
		"SoulHandBookUIApi",
		"BattleWarningUIApi",
		"HomeLandChooseCastleApi",
		"HomeLandComfortUIApi",
		"HomeLandRewardUIApi",
		"LotteryHistoryUIApi",
		"GirlUIApi",
		"HomeLandRoomUIApi",
		"HomeLandRoomComfortUIApi",
		"LotteryUIApi",
		"BagItemCellApi",
		"MemoryUIApi",
		"BattleSettlementUIApi",
		"HomeLandChangeRoomUIApi",
		"HomeLandPlantUIApi",
		"HomeLandManufactureUIApi",
		"HomeLandAlchemyUIApi",
		"WeatherTimeUIApi",
		"TownUIApi",
		"CheckRewardUIApi",
		"NewMemoryUIApi",
		"GoSourceBtnCellApi",
		"SettingUIApi",
		"SettingPlayerInfoViewApi",
		"SettingBgViewApi",
		"FurnitureSlotApi",
		"DialogReviewUIApi",
		"RpgMazeExitConfirmationUIApi",
		"InputPlayerNameTextUIApi",
		"GuideSub",
		"CookingUIApi",
		"BattleDamageUIApi",
		"MazeMainUIApi",
		"FormationUIApi",
		"MazeDetailUIApi",
		"SoulSkillUIApi",
		"DiceGameUIApi",
		"MazeTroopHpChangeUIApi",
		"MazeTroopSpChangeUIApi",
		"MazeSoulReviveUIApi",
		"GirlContractUIApi",
		"MagicTowerExitUIApi",
		"BattleRoundUIApi",
		"ChallengeUIApi",
		"BattleBuffTipsUIApi",
		"MailUIApi",
		"SoulUnlockUIApi",
		"SkillTipApi",
		"ChallengeTowerUIApi",
		"ChallengeWorldBossUIApi",
		"MazeTeamUIApi",
		"MazeBuffTipsUIApi",
		"EndlessMazeDetailUIApi",
		"EndlessMazeMainUIApi",
		"EndlessMazeSettlementUIApi",
		"EndlessMazeRuneMainUIApi",
		"EndlessMazeRuneFilterUIApi",
		"RuneTipsUIApi",
		"EndlessMazeRuneNoticeApi",
		"EndlessMazeRuneSelectUIApi",
		"EndlessMazeRuneReplaceUIApi",
		"EndlessMazeRuneStrengthenUIApi",
		"EndlessMazeRuneShopUIApi",
		"BuyExchangeUIApi",
		"FloatNoticeUIApi",
		"IllusionMazeElementCollectionUIApi",
		"BattleMonsterInfoUIApi",
		"DialogSkipConfirmUIApi",
		"FunctionPreviewUIApi",
		"NoticeUIApi",
		"PrologueVideoUIApi",
		"InputTextUIApi",
		"LotteryIntroduceTipsUIApi",
		"GirlMoodUINoticeUIApi",
		"MazeExitConfirmationUIApi",
		"HomeLandSoulCheckInUIApi",
		"IllusionMazeEntryUIApi",
		"IllusionMazeSettlementUIApi",
		"EndlessMazeRuneSuitTipUIApi",
		"BattleTimeoutUIApi",
		"HomeLandChangeThemeRoomUIApi",
		"HomeLandCookingUIApi",
		"MazeChapterTipUIApi",
		"HomeLandVisitUIApi",
		"EndlessMazeRuneRemakeUIApi",
		"MagicTowerSceneApi",
		"EndlessMazeCheckBattleUIApi",
		"ChallengeTowerLastRewardUIApi",
		"SettingInputViewApi",
		"LoginActivationCodeUIApi",
		"RpgMazeDetailUIApi",
		"MazeScoreLevelUpUIApi",
		"ElementIntroduceUIApi",
		"IllusionMazeMainUIApi",
		"GiftChoosePanelUIApi",
		"MazeStageAssistantUIApi",
		"RpgIntroduceTipsUIApi",
		"MazeClockUIApi",
		"HomeLandManufactureListUIApi",
		"HomeLandCgShowUIApi",
		"RankingUIControllerApi",
		"EndlessMazeRuneLockUIApi",
		"LoginEntertainmentRatingUIApi",
		"HomeLandGirlRewardUIApi",
		"MazeHiddenMazeUIApi",
		"MazeSelectLevelUIApi",
		"FormationChooseSoulUIApi",
		"FormationChooseEquipUIApi",
		"HomeLandFunctionLevelUpUIApi",
		"MazeSweepDetailConfirmUIApi",
		"MazeSweepUIApi",
		"HomeLandMakeItemListUIApi",
		"LibraryNpcListUIApi",
		"LibraryNewsUIApi",
		"LibraryRewardUIApi",
		"LibraryUIApi",
		"LibraryMazeUIApi",
		"LibraryStoryUIApi",
		"LibraryEquipApi",
		"LibrarySoulApi",
		"ExploreHallUIApi",
		"EndlessMazeEntryUIApi",
		"ChallengeWorldBossDetailUIApi",
		"HomeLandWorkEffectUIApi",
		"VideoPlayerUIApi",
		"MazeSubmitItemUIApi",
		"HomeLandOverviewUIApi",
		"BuyMallPanelUIApi",
		"MoneyPanelInfoUIApi",
		"GirlOpeningUIApi",
		"ChallengeWorldBossTipUIApi",
		"MazeBossChallengeEntryUIApi",
		"MazeBossDetailUIApi",
		"MazeBossChallengeDetailUIApi",
		"DailyActivityTipsUIApi",
		"BuySellGiftUIApi",
		"DailyPicturePuzzleMissionUIApi",
		"GameGuideInfoUIApi",
		"TimeLimitedBossUIApi",
		"ItemDebtTipsUIApi",
		"ActivityNewDollStoryUIApi",
		"ChallengeWorldFormationUIApi",
		"ChangeExhibitionUIApi",
		"ChangeTitleUIApi",
		"FriendInfoListUIApi",
		"CheckPlayerExhibitionUIApi",
		"AvPlayUIApi",
		"InvasionBossDetailUIApi",
		"DoubleFightRewardUIApi",
		"InvasionScoreTipsUIApi",
		"ChallengeRewardUIApi",
		"DailyRewardListUIApi",
		"DailyHistoryListUIApi",
		"PandaChallengeDetailInfoUIApi",
		"RewardLevelsUIApi",
		"SoulMarryConfirmUIApi",
		"SoulMarryVideoUIApi",
		"SoulMarryCgShowUIApi",
		"WelcomeActivityInviterUIApi",
		"WelcomeActivityInviteeUIApi",
		"WelcomeInvitedHistoryUIApi",
		"WelcomeBackUIApi",
		"ChallengeDramaBossFormationUIApi",
		"ChallengeDramaBossDetailUIApi",
		"PlotChallengeBossRewardUIApi",
		"HomeLandFishUIApi",
		"HomeLandFishChooseUIApi",
		"HomeLandFishCollectionUIApi",
		"HomeLandFishBagUIApi",
		"UseNumberFishBagUIApi",
		"DualTeamExploreUICommonApi",
		"DualTeamExploreBossChallengeUIApi",
		"DualTeamExploreBossDetailUIApi",
		"DualTeamExploreExBossChallengeUIApi",
		"DualTeamExploreExBossRewardUIApi",
		"DualTeamExploreExBossDetailUIApi",
		"DualTeamExploreExBossFormationUIApi",
		"DramaChallengeMainUIApi",
		"MonsterAcademyMainUIApi",
		"MonsterAcademySelectPanelUIApi",
		"MonsterAcademyChallengeUIApi",
		"MonsterAcademyGameJigsawUIApi",
		"MonsterAcademyGameFruitUIApi",
		"MonsterAcademyGameMoleUIApi",
		"MonsterAcademyBagUIApi",
		"GuildMainUIApi",
		"RestaurantOperationMainUIApi",
		"DramChallengeLotteryUIApi",
		"HorizontalRPGMazeBossDetailUIApi"
	}
}

table.insert(LoadList, LoadUIApiList)

local LoadUIList = {
	Path = "IQIGame.UI",
	Value = {
		"Bag.ItemCell",
		"Common.ItemCell2",
		"Common.LinkTipCell.LinkTipCell",
		"Bag.CurrencyCell",
		"Bag.MazeCurrencyCell",
		"Common.EquipCell",
		"Common.CvUIFrame",
		"Common.MoneyCellsBuilder",
		"Common.EnergyCell",
		"GirlChoose.GirlChooseCell",
		"GirlChoose.ChooseInGirl",
		"Girl.GirlL2DView",
		"SoulList.SoulListCell",
		"Soul.SoulHeadCell",
		"Skill.SkillCell",
		"Common.PlayerHeadUI",
		"Guide.GuideUIUtil"
	}
}

table.insert(LoadList, LoadUIList)

function LoadScripts()
	require("IQIGame.Global")

	for k, v in pairs(LoadList) do
		local Path = v.Path or ""

		for tm, mod in pairs(v.Value or {}) do
			require(Path .. "." .. mod)
		end
	end
end

LoadScripts()
